{"id":"b2e2c1d6056e3de2ab6e6b14c6628ec3","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\n}\n"},"@onchain-id/solidity/contracts/interface/IERC734.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"},"@onchain-id/solidity/contracts/interface/IERC735.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"},"@onchain-id/solidity/contracts/interface/IIdentity.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"contracts/registry/implementation/TrustedIssuersRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"../../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../storage/TIRStorage.sol\";\n\ncontract TrustedIssuersRegistry is ITrustedIssuersRegistry, OwnableUpgradeable, TIRStorage {\n    function init() external initializer {\n        __Ownable_init();\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}.\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {\n        require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\");\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \"trusted Issuer already exists\");\n        require(_claimTopics.length > 0, \"trusted claim topics cannot be empty\");\n        require(_claimTopics.length <= 15, \"cannot have more than 15 claim topics\");\n        require(_trustedIssuers.length < 50, \"cannot have more than 50 trusted issuers\");\n        _trustedIssuers.push(_trustedIssuer);\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\n        }\n        emit TrustedIssuerAdded(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}.\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external override onlyOwner {\n        require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\");\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"NOT a trusted issuer\");\n        uint256 length = _trustedIssuers.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_trustedIssuers[i] == _trustedIssuer) {\n                _trustedIssuers[i] = _trustedIssuers[length - 1];\n                _trustedIssuers.pop();\n                break;\n            }\n        }\n        for (uint256 claimTopicIndex = 0; claimTopicIndex < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; claimTopicIndex++) {\n            uint256 claimTopic = _trustedIssuerClaimTopics[address(_trustedIssuer)][claimTopicIndex];\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic].length;\n            for (uint256 i = 0; i < topicsLength; i++) {\n                if (_claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer) {\n                    _claimTopicsToTrustedIssuers[claimTopic][i] = _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1];\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\n                    break;\n                }\n            }\n        }\n        delete _trustedIssuerClaimTopics[address(_trustedIssuer)];\n        emit TrustedIssuerRemoved(_trustedIssuer);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {\n        require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\");\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"NOT a trusted issuer\");\n        require(_claimTopics.length <= 15, \"cannot have more than 15 claim topics\");\n        require(_claimTopics.length > 0, \"claim topics cannot be empty\");\n\n        for (uint256 i = 0; i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; i++) {\n            uint256 claimTopic = _trustedIssuerClaimTopics[address(_trustedIssuer)][i];\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic].length;\n            for (uint256 j = 0; j < topicsLength; j++) {\n                if (_claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer) {\n                    _claimTopicsToTrustedIssuers[claimTopic][j] = _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1];\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\n                    break;\n                }\n            }\n        }\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\n        }\n        emit ClaimTopicsUpdated(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}.\n     */\n    function getTrustedIssuers() external view override returns (IClaimIssuer[] memory) {\n        return _trustedIssuers;\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view override returns (IClaimIssuer[] memory) {\n        return _claimTopicsToTrustedIssuers[claimTopic];\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}.\n     */\n    function isTrustedIssuer(address _issuer) external view override returns (bool) {\n        if (_trustedIssuerClaimTopics[_issuer].length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view override returns (uint256[] memory) {\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"trusted Issuer doesn't exist\");\n        return _trustedIssuerClaimTopics[address(_trustedIssuer)];\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-hasClaimTopic}.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {\n        uint256 length = _trustedIssuerClaimTopics[_issuer].length;\n        uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer];\n        for (uint256 i = 0; i < length; i++) {\n            if (claimTopics[i] == _claimTopic) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"},"contracts/registry/interface/ITrustedIssuersRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    /**\n     *  this event is emitted when a trusted issuer is added in the registry.\n     *  the event is emitted by the addTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  this event is emitted when a trusted issuer is removed from the registry.\n     *  the event is emitted by the removeTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     */\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    /**\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n     *  the event is emitted by the updateIssuerClaimTopics function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\n     *  Requires that a ClaimIssuer contract doesn't already exist\n     *  Requires that the claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  Requires that there is no more than 50 Trusted issuers\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerAdded` event\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n     *  Requires that the claim issuer contract to be registered first\n     *  @param _trustedIssuer the claim issuer to remove.\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerRemoved` event\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    /**\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n     *  Requires that this ClaimIssuer contract already exists in the registry\n     *  Requires that the provided claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  @param _trustedIssuer the claim issuer to update.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `ClaimTopicsUpdated` event\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Function for getting all the trusted claim issuers stored.\n     *  @return array of all claim issuers registered.\n     */\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n     *  @param claimTopic the claim topic to get the trusted issuers for.\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Checks if the ClaimIssuer contract is trusted\n     *  @param _issuer the address of the ClaimIssuer contract\n     *  @return true if the issuer is trusted, false otherwise.\n     */\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    /**\n     *  @dev Function for getting all the claim topic of trusted claim issuer\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n     *  @param _trustedIssuer the trusted issuer concerned.\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\n\n    /**\n     *  @dev Function for checking if the trusted claim issuer is allowed\n     *  to emit a certain claim topic\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n     *  @return true if the issuer is trusted for this claim topic.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\n}\n"},"contracts/registry/storage/TIRStorage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ncontract TIRStorage {\n    /// @dev Array containing all TrustedIssuers identity contract address.\n    IClaimIssuer[] internal _trustedIssuers;\n\n    /// @dev Mapping between a trusted issuer address and its corresponding claimTopics.\n    mapping(address => uint256[]) internal _trustedIssuerClaimTopics;\n\n    /// @dev Mapping between a claim topic and the allowed trusted issuers for it.\n    mapping(uint256 => IClaimIssuer[]) internal _claimTopicsToTrustedIssuers;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc"],"":["ast"]}}}},"output":{"sources":{"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","exportedSymbols":{"IClaimIssuer":[59],"IERC734":[206],"IERC735":[314],"IIdentity":[323]},"id":60,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:0"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IIdentity.sol","file":"./IIdentity.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":60,"sourceUnit":324,"src":"61:25:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3,"name":"IIdentity","nameLocations":["114:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"114:9:0"},"id":4,"nodeType":"InheritanceSpecifier","src":"114:9:0"}],"canonicalName":"IClaimIssuer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":59,"linearizedBaseContracts":[59,323,314,206],"name":"IClaimIssuer","nameLocation":"98:12:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"131:126:0","text":" @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."},"eventSelector":"7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569","id":9,"name":"ClaimRevoked","nameLocation":"268:12:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"signature","nameLocation":"295:9:0","nodeType":"VariableDeclaration","scope":9,"src":"281:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"281:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"280:25:0"},"src":"262:44:0"},{"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"312:351:0","text":" @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"},"functionSelector":"73c33708","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"revokeClaim","nameLocation":"677:11:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"_claimId","nameLocation":"697:8:0","nodeType":"VariableDeclaration","scope":19,"src":"689:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11,"name":"bytes32","nodeType":"ElementaryTypeName","src":"689:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"_identity","nameLocation":"715:9:0","nodeType":"VariableDeclaration","scope":19,"src":"707:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"688:37:0"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"743:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"743:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"742:6:0"},"scope":59,"src":"668:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"755:169:0","text":" @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"},"functionSelector":"9f7f9edd","id":25,"implemented":false,"kind":"function","modifiers":[],"name":"revokeClaimBySignature","nameLocation":"938:22:0","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"signature","nameLocation":"976:9:0","nodeType":"VariableDeclaration","scope":25,"src":"961:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":21,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"960:26:0"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"995:0:0"},"scope":59,"src":"929:67:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1002:181:0","text":" @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"},"functionSelector":"2646b264","id":33,"implemented":false,"kind":"function","modifiers":[],"name":"isClaimRevoked","nameLocation":"1197:14:0","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"_sig","nameLocation":"1227:4:0","nodeType":"VariableDeclaration","scope":33,"src":"1212:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"1212:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1211:21:0"},"returnParameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33,"src":"1256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30,"name":"bool","nodeType":"ElementaryTypeName","src":"1256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1255:6:0"},"scope":59,"src":"1188:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1268:334:0","text":" @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"},"functionSelector":"c0969a6e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"isClaimValid","nameLocation":"1616:12:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"_identity","nameLocation":"1648:9:0","nodeType":"VariableDeclaration","scope":48,"src":"1638:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":36,"nodeType":"UserDefinedTypeName","pathNode":{"id":35,"name":"IIdentity","nameLocations":["1638:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"1638:9:0"},"referencedDeclaration":323,"src":"1638:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"claimTopic","nameLocation":"1675:10:0","nodeType":"VariableDeclaration","scope":48,"src":"1667:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"sig","nameLocation":"1710:3:0","nodeType":"VariableDeclaration","scope":48,"src":"1695:18:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"1695:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"data","nameLocation":"1738:4:0","nodeType":"VariableDeclaration","scope":48,"src":"1723:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":42,"name":"bytes","nodeType":"ElementaryTypeName","src":"1723:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1628:115:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48,"src":"1771:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45,"name":"bool","nodeType":"ElementaryTypeName","src":"1771:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1770:6:0"},"scope":59,"src":"1607:170:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1783:240:0","text":" @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"},"functionSelector":"c3b129e3","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"getRecoveredAddress","nameLocation":"2037:19:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"sig","nameLocation":"2072:3:0","nodeType":"VariableDeclaration","scope":58,"src":"2057:18:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":50,"name":"bytes","nodeType":"ElementaryTypeName","src":"2057:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"dataHash","nameLocation":"2085:8:0","nodeType":"VariableDeclaration","scope":58,"src":"2077:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2056:38:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2118:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2117:9:0"},"scope":59,"src":"2028:99:0","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":60,"src":"88:2041:0","usedErrors":[]}],"src":"36:2094:0"},"id":0},"@onchain-id/solidity/contracts/interface/IERC734.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC734.sol","exportedSymbols":{"IERC734":[206]},"id":207,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":61,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC734","contractDependencies":[],"contractKind":"interface","documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"61:84:1","text":" @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."},"fullyImplemented":false,"id":206,"linearizedBaseContracts":[206],"name":"IERC734","nameLocation":"156:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"171:156:1","text":" @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."},"eventSelector":"b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8","id":69,"name":"Approved","nameLocation":"338:8:1","nodeType":"EventDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"363:11:1","nodeType":"VariableDeclaration","scope":69,"src":"347:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"381:8:1","nodeType":"VariableDeclaration","scope":69,"src":"376:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":66,"name":"bool","nodeType":"ElementaryTypeName","src":"376:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"346:44:1"},"src":"332:59:1"},{"anonymous":false,"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"397:214:1","text":" @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."},"eventSelector":"1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8","id":80,"name":"Executed","nameLocation":"622:8:1","nodeType":"EventDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"647:11:1","nodeType":"VariableDeclaration","scope":80,"src":"631:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"676:2:1","nodeType":"VariableDeclaration","scope":80,"src":"660:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"696:5:1","nodeType":"VariableDeclaration","scope":80,"src":"680:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":78,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"709:4:1","nodeType":"VariableDeclaration","scope":80,"src":"703:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":77,"name":"bytes","nodeType":"ElementaryTypeName","src":"703:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"630:84:1"},"src":"616:99:1"},{"anonymous":false,"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"721:171:1","text":" @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."},"eventSelector":"8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8","id":91,"name":"ExecutionRequested","nameLocation":"903:18:1","nodeType":"EventDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"938:11:1","nodeType":"VariableDeclaration","scope":91,"src":"922:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"967:2:1","nodeType":"VariableDeclaration","scope":91,"src":"951:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"987:5:1","nodeType":"VariableDeclaration","scope":91,"src":"971:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1000:4:1","nodeType":"VariableDeclaration","scope":91,"src":"994:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"994:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"921:84:1"},"src":"897:109:1"},{"anonymous":false,"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"1012:151:1","text":" @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"},"eventSelector":"e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68","id":102,"name":"ExecutionFailed","nameLocation":"1174:15:1","nodeType":"EventDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"1206:11:1","nodeType":"VariableDeclaration","scope":102,"src":"1190:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":96,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1235:2:1","nodeType":"VariableDeclaration","scope":102,"src":"1219:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":98,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1255:5:1","nodeType":"VariableDeclaration","scope":102,"src":"1239:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1268:4:1","nodeType":"VariableDeclaration","scope":102,"src":"1262:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":99,"name":"bytes","nodeType":"ElementaryTypeName","src":"1262:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1189:84:1"},"src":"1168:106:1"},{"anonymous":false,"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"1280:153:1","text":" @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."},"eventSelector":"480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9","id":111,"name":"KeyAdded","nameLocation":"1444:8:1","nodeType":"EventDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"indexed":true,"mutability":"mutable","name":"key","nameLocation":"1469:3:1","nodeType":"VariableDeclaration","scope":111,"src":"1453:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1453:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":107,"indexed":true,"mutability":"mutable","name":"purpose","nameLocation":"1490:7:1","nodeType":"VariableDeclaration","scope":111,"src":"1474:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1474:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"keyType","nameLocation":"1515:7:1","nodeType":"VariableDeclaration","scope":111,"src":"1499:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1452:71:1"},"src":"1438:86:1"},{"anonymous":false,"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"1530:160:1","text":" @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."},"eventSelector":"585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397","id":120,"name":"KeyRemoved","nameLocation":"1701:10:1","nodeType":"EventDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"indexed":true,"mutability":"mutable","name":"key","nameLocation":"1728:3:1","nodeType":"VariableDeclaration","scope":120,"src":"1712:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":116,"indexed":true,"mutability":"mutable","name":"purpose","nameLocation":"1749:7:1","nodeType":"VariableDeclaration","scope":120,"src":"1733:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1733:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"keyType","nameLocation":"1774:7:1","nodeType":"VariableDeclaration","scope":120,"src":"1758:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1711:71:1"},"src":"1695:88:1"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"1789:319:1","text":" @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."},"functionSelector":"1d381240","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"addKey","nameLocation":"2122:6:1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"_key","nameLocation":"2137:4:1","nodeType":"VariableDeclaration","scope":132,"src":"2129:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"_purpose","nameLocation":"2151:8:1","nodeType":"VariableDeclaration","scope":132,"src":"2143:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"_keyType","nameLocation":"2169:8:1","nodeType":"VariableDeclaration","scope":132,"src":"2161:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2161:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2128:50:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"success","nameLocation":"2202:7:1","nodeType":"VariableDeclaration","scope":132,"src":"2197:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"2197:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2196:14:1"},"scope":206,"src":"2113:98:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"2217:201:1","text":" @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"},"functionSelector":"747442d3","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2432:7:1","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"_id","nameLocation":"2448:3:1","nodeType":"VariableDeclaration","scope":142,"src":"2440:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"_approve","nameLocation":"2458:8:1","nodeType":"VariableDeclaration","scope":142,"src":"2453:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":136,"name":"bool","nodeType":"ElementaryTypeName","src":"2453:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2439:28:1"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"success","nameLocation":"2491:7:1","nodeType":"VariableDeclaration","scope":142,"src":"2486:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"2486:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2485:14:1"},"scope":206,"src":"2423:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2506:290:1","text":" @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."},"functionSelector":"53d413c5","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"removeKey","nameLocation":"2810:9:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"_key","nameLocation":"2828:4:1","nodeType":"VariableDeclaration","scope":152,"src":"2820:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"_purpose","nameLocation":"2842:8:1","nodeType":"VariableDeclaration","scope":152,"src":"2834:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2834:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2819:32:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"success","nameLocation":"2875:7:1","nodeType":"VariableDeclaration","scope":152,"src":"2870:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"2870:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2869:14:1"},"scope":206,"src":"2801:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"2890:481:1","text":" @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"},"functionSelector":"b61d27f6","id":164,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3385:7:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"_to","nameLocation":"3401:3:1","nodeType":"VariableDeclaration","scope":164,"src":"3393:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"_value","nameLocation":"3414:6:1","nodeType":"VariableDeclaration","scope":164,"src":"3406:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"_data","nameLocation":"3437:5:1","nodeType":"VariableDeclaration","scope":164,"src":"3422:20:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"3422:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3392:51:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"executionId","nameLocation":"3478:11:1","nodeType":"VariableDeclaration","scope":164,"src":"3470:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3469:21:1"},"scope":206,"src":"3376:115:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3497:78:1","text":" @dev Returns the full key data, if present in the identity."},"functionSelector":"12aaac70","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"getKey","nameLocation":"3589:6:1","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"_key","nameLocation":"3604:4:1","nodeType":"VariableDeclaration","scope":177,"src":"3596:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3595:14:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"purposes","nameLocation":"3650:8:1","nodeType":"VariableDeclaration","scope":177,"src":"3633:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":170,"nodeType":"ArrayTypeName","src":"3633:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"keyType","nameLocation":"3668:7:1","nodeType":"VariableDeclaration","scope":177,"src":"3660:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3660:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"key","nameLocation":"3685:3:1","nodeType":"VariableDeclaration","scope":177,"src":"3677:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3677:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3632:57:1"},"scope":206,"src":"3580:110:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"3696:75:1","text":" @dev Returns the list of purposes associated with a key."},"functionSelector":"fb307b34","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"getKeyPurposes","nameLocation":"3785:14:1","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"_key","nameLocation":"3808:4:1","nodeType":"VariableDeclaration","scope":186,"src":"3800:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3800:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3799:14:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"_purposes","nameLocation":"3853:9:1","nodeType":"VariableDeclaration","scope":186,"src":"3836:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3836:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":183,"nodeType":"ArrayTypeName","src":"3836:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3835:28:1"},"scope":206,"src":"3776:88:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"3870:85:1","text":" @dev Returns an array of public key bytes32 held by this identity."},"functionSelector":"9010f726","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"getKeysByPurpose","nameLocation":"3969:16:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"_purpose","nameLocation":"3994:8:1","nodeType":"VariableDeclaration","scope":195,"src":"3986:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:18:1"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"keys","nameLocation":"4044:4:1","nodeType":"VariableDeclaration","scope":195,"src":"4027:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4027:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":192,"nodeType":"ArrayTypeName","src":"4027:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4026:23:1"},"scope":206,"src":"3960:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"4056:127:1","text":" @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"functionSelector":"d202158d","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"keyHasPurpose","nameLocation":"4197:13:1","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"_key","nameLocation":"4219:4:1","nodeType":"VariableDeclaration","scope":205,"src":"4211:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4211:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"_purpose","nameLocation":"4233:8:1","nodeType":"VariableDeclaration","scope":205,"src":"4225:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4210:32:1"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"exists","nameLocation":"4271:6:1","nodeType":"VariableDeclaration","scope":205,"src":"4266:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":202,"name":"bool","nodeType":"ElementaryTypeName","src":"4266:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4265:13:1"},"scope":206,"src":"4188:91:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":207,"src":"146:4135:1","usedErrors":[]}],"src":"36:4246:1"},"id":1},"@onchain-id/solidity/contracts/interface/IERC735.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC735.sol","exportedSymbols":{"IERC735":[314]},"id":315,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":208,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC735","contractDependencies":[],"contractKind":"interface","documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"61:86:2","text":" @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."},"fullyImplemented":false,"id":314,"linearizedBaseContracts":[314],"name":"IERC735","nameLocation":"158:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"173:139:2","text":" @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."},"eventSelector":"46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5","id":226,"name":"ClaimAdded","nameLocation":"323:10:2","nodeType":"EventDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"359:7:2","nodeType":"VariableDeclaration","scope":226,"src":"343:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"343:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":true,"mutability":"mutable","name":"topic","nameLocation":"392:5:2","nodeType":"VariableDeclaration","scope":226,"src":"376:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"scheme","nameLocation":"415:6:2","nodeType":"VariableDeclaration","scope":226,"src":"407:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"447:6:2","nodeType":"VariableDeclaration","scope":226,"src":"431:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"469:9:2","nodeType":"VariableDeclaration","scope":226,"src":"463:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"463:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"494:4:2","nodeType":"VariableDeclaration","scope":226,"src":"488:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":221,"name":"bytes","nodeType":"ElementaryTypeName","src":"488:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":224,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"515:3:2","nodeType":"VariableDeclaration","scope":226,"src":"508:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":223,"name":"string","nodeType":"ElementaryTypeName","src":"508:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"333:186:2"},"src":"317:203:2"},{"anonymous":false,"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"526:146:2","text":" @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."},"eventSelector":"3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a","id":243,"name":"ClaimRemoved","nameLocation":"683:12:2","nodeType":"EventDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"721:7:2","nodeType":"VariableDeclaration","scope":243,"src":"705:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"705:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":true,"mutability":"mutable","name":"topic","nameLocation":"754:5:2","nodeType":"VariableDeclaration","scope":243,"src":"738:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":false,"mutability":"mutable","name":"scheme","nameLocation":"777:6:2","nodeType":"VariableDeclaration","scope":243,"src":"769:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":235,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"809:6:2","nodeType":"VariableDeclaration","scope":243,"src":"793:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"831:9:2","nodeType":"VariableDeclaration","scope":243,"src":"825:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":236,"name":"bytes","nodeType":"ElementaryTypeName","src":"825:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":239,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"856:4:2","nodeType":"VariableDeclaration","scope":243,"src":"850:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"850:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":241,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"877:3:2","nodeType":"VariableDeclaration","scope":243,"src":"870:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":240,"name":"string","nodeType":"ElementaryTypeName","src":"870:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"695:186:2"},"src":"677:205:2"},{"anonymous":false,"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"888:166:2","text":" @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."},"eventSelector":"3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13","id":260,"name":"ClaimChanged","nameLocation":"1065:12:2","nodeType":"EventDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"1103:7:2","nodeType":"VariableDeclaration","scope":260,"src":"1087:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1087:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":true,"mutability":"mutable","name":"topic","nameLocation":"1136:5:2","nodeType":"VariableDeclaration","scope":260,"src":"1120:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"scheme","nameLocation":"1159:6:2","nodeType":"VariableDeclaration","scope":260,"src":"1151:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"1191:6:2","nodeType":"VariableDeclaration","scope":260,"src":"1175:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"1213:9:2","nodeType":"VariableDeclaration","scope":260,"src":"1207:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"1207:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1238:4:2","nodeType":"VariableDeclaration","scope":260,"src":"1232:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":255,"name":"bytes","nodeType":"ElementaryTypeName","src":"1232:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"1259:3:2","nodeType":"VariableDeclaration","scope":260,"src":"1252:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":257,"name":"string","nodeType":"ElementaryTypeName","src":"1252:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1077:186:2"},"src":"1059:205:2"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1270:438:2","text":" @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"functionSelector":"b1a34e0d","id":278,"implemented":false,"kind":"function","modifiers":[],"name":"addClaim","nameLocation":"1722:8:2","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"_topic","nameLocation":"1748:6:2","nodeType":"VariableDeclaration","scope":278,"src":"1740:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"_scheme","nameLocation":"1772:7:2","nodeType":"VariableDeclaration","scope":278,"src":"1764:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"issuer","nameLocation":"1797:6:2","nodeType":"VariableDeclaration","scope":278,"src":"1789:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"_signature","nameLocation":"1828:10:2","nodeType":"VariableDeclaration","scope":278,"src":"1813:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":268,"name":"bytes","nodeType":"ElementaryTypeName","src":"1813:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"_data","nameLocation":"1863:5:2","nodeType":"VariableDeclaration","scope":278,"src":"1848:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"1848:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"_uri","nameLocation":"1894:4:2","nodeType":"VariableDeclaration","scope":278,"src":"1878:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"1878:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:169:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"claimRequestId","nameLocation":"1930:14:2","nodeType":"VariableDeclaration","scope":278,"src":"1922:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1921:24:2"},"scope":314,"src":"1713:233:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"1952:193:2","text":" @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"functionSelector":"4eee424a","id":286,"implemented":false,"kind":"function","modifiers":[],"name":"removeClaim","nameLocation":"2159:11:2","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"_claimId","nameLocation":"2179:8:2","nodeType":"VariableDeclaration","scope":286,"src":"2171:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:18:2"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"success","nameLocation":"2212:7:2","nodeType":"VariableDeclaration","scope":286,"src":"2207:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":283,"name":"bool","nodeType":"ElementaryTypeName","src":"2207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2206:14:2"},"scope":314,"src":"2150:71:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"2227:154:2","text":" @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"functionSelector":"c9100bcb","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"getClaim","nameLocation":"2395:8:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"_claimId","nameLocation":"2412:8:2","nodeType":"VariableDeclaration","scope":304,"src":"2404:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2404:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2403:18:2"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"topic","nameLocation":"2465:5:2","nodeType":"VariableDeclaration","scope":304,"src":"2457:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"scheme","nameLocation":"2488:6:2","nodeType":"VariableDeclaration","scope":304,"src":"2480:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"issuer","nameLocation":"2512:6:2","nodeType":"VariableDeclaration","scope":304,"src":"2504:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"signature","nameLocation":"2541:9:2","nodeType":"VariableDeclaration","scope":304,"src":"2528:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":297,"name":"bytes","nodeType":"ElementaryTypeName","src":"2528:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"data","nameLocation":"2573:4:2","nodeType":"VariableDeclaration","scope":304,"src":"2560:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"uri","nameLocation":"2601:3:2","nodeType":"VariableDeclaration","scope":304,"src":"2587:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"2587:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:158:2"},"scope":314,"src":"2386:220:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2612:63:2","text":" @dev Returns an array of claim IDs by topic."},"functionSelector":"80e9e9e1","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"getClaimIdsByTopic","nameLocation":"2689:18:2","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"_topic","nameLocation":"2716:6:2","nodeType":"VariableDeclaration","scope":313,"src":"2708:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2707:16:2"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"claimIds","nameLocation":"2763:8:2","nodeType":"VariableDeclaration","scope":313,"src":"2746:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2746:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":310,"nodeType":"ArrayTypeName","src":"2746:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2745:27:2"},"scope":314,"src":"2680:93:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":315,"src":"148:2627:2","usedErrors":[]}],"src":"36:2740:2"},"id":2},"@onchain-id/solidity/contracts/interface/IIdentity.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IIdentity.sol","exportedSymbols":{"IERC734":[206],"IERC735":[314],"IIdentity":[323]},"id":324,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":316,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:3"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC734.sol","file":"./IERC734.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":324,"sourceUnit":207,"src":"61:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC735.sol","file":"./IERC735.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":324,"sourceUnit":315,"src":"85:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":319,"name":"IERC734","nameLocations":["178:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"178:7:3"},"id":320,"nodeType":"InheritanceSpecifier","src":"178:7:3"},{"baseName":{"id":321,"name":"IERC735","nameLocations":["187:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":314,"src":"187:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"187:7:3"}],"canonicalName":"IIdentity","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":323,"linearizedBaseContracts":[323,314,206],"name":"IIdentity","nameLocation":"165:9:3","nodeType":"ContractDefinition","nodes":[],"scope":324,"src":"155:42:3","usedErrors":[]}],"src":"36:162:3"},"id":3},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[954],"ContextUpgradeable":[996],"Initializable":[624],"OwnableUpgradeable":[455]},"id":456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":325,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":456,"sourceUnit":997,"src":"127:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":456,"sourceUnit":625,"src":"169:42:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":329,"name":"Initializable","nameLocations":["748:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":624,"src":"748:13:4"},"id":330,"nodeType":"InheritanceSpecifier","src":"748:13:4"},{"baseName":{"id":331,"name":"ContextUpgradeable","nameLocations":["763:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":996,"src":"763:18:4"},"id":332,"nodeType":"InheritanceSpecifier","src":"763:18:4"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"213:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":455,"linearizedBaseContracts":[455,996,624],"name":"OwnableUpgradeable","nameLocation":"726:18:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":334,"mutability":"mutable","name":"_owner","nameLocation":"804:6:4","nodeType":"VariableDeclaration","scope":455,"src":"788:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":340,"name":"OwnershipTransferred","nameLocation":"823:20:4","nodeType":"EventDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:4","nodeType":"VariableDeclaration","scope":340,"src":"844:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:4","nodeType":"VariableDeclaration","scope":340,"src":"875:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:4"},"src":"817:84:4"},{"body":{"id":349,"nodeType":"Block","src":"1055:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1065:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"1065:26:4"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"907:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":350,"implemented":true,"kind":"function","modifiers":[{"id":344,"kind":"modifierInvocation","modifierName":{"id":343,"name":"onlyInitializing","nameLocations":["1038:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"1038:16:4"},"nodeType":"ModifierInvocation","src":"1038:16:4"}],"name":"__Ownable_init","nameLocation":"1012:14:4","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"1026:2:4"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"1055:0:4"},"scope":455,"src":"1003:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"1166:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":356,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"1195:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":355,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1176:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"1176:32:4"}]},"id":361,"implemented":true,"kind":"function","modifiers":[{"id":353,"kind":"modifierInvocation","modifierName":{"id":352,"name":"onlyInitializing","nameLocations":["1149:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"1149:16:4"},"nodeType":"ModifierInvocation","src":"1149:16:4"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:4","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1137:2:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"1166:0:4"},"scope":455,"src":"1104:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"1324:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1334:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"1334:13:4"},{"id":367,"nodeType":"PlaceholderStatement","src":"1357:1:4"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1221:77:4","text":" @dev Throws if called by any account other than the owner."},"id":369,"name":"onlyOwner","nameLocation":"1312:9:4","nodeType":"ModifierDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1321:2:4"},"src":"1303:62:4","virtual":false,"visibility":"internal"},{"body":{"id":377,"nodeType":"Block","src":"1496:30:4","statements":[{"expression":{"id":375,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1513:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":374,"id":376,"nodeType":"Return","src":"1506:13:4"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1371:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":378,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:4","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"1455:2:4"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"1487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:4"},"scope":455,"src":"1441:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":391,"nodeType":"Block","src":"1644:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1662:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":385,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"1673:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"1654:68:4"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"1532:62:4","text":" @dev Throws if the sender is not the owner."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:4","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"1619:2:4"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"1644:0:4"},"scope":455,"src":"1599:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"2118:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:4","typeDescriptions":{}}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":398,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2128:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"2128:30:4"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"1735:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":406,"implemented":true,"kind":"function","modifiers":[{"id":396,"kind":"modifierInvocation","modifierName":{"id":395,"name":"onlyOwner","nameLocations":["2108:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"2108:9:4"},"nodeType":"ModifierInvocation","src":"2108:9:4"}],"name":"renounceOwnership","nameLocation":"2073:17:4","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"2090:2:4"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2118:0:4"},"scope":455,"src":"2064:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":428,"nodeType":"Block","src":"2384:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":415,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2402:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:4","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":423,"nodeType":"ExpressionStatement","src":"2394:73:4"},{"expression":{"arguments":[{"id":425,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2496:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2477:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"2477:28:4"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"2171:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":429,"implemented":true,"kind":"function","modifiers":[{"id":412,"kind":"modifierInvocation","modifierName":{"id":411,"name":"onlyOwner","nameLocations":["2374:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"2374:9:4"},"nodeType":"ModifierInvocation","src":"2374:9:4"}],"name":"transferOwnership","nameLocation":"2323:17:4","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:4","nodeType":"VariableDeclaration","scope":429,"src":"2341:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:4"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"2384:0:4"},"scope":455,"src":"2314:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":448,"nodeType":"Block","src":"2729:124:4","statements":[{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:4","nodeType":"VariableDeclaration","scope":448,"src":"2739:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":438,"initialValue":{"id":437,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2758:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:4"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":439,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2774:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":440,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2783:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":442,"nodeType":"ExpressionStatement","src":"2774:17:4"},{"eventCall":{"arguments":[{"id":444,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2827:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2837:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":443,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2806:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"EmitStatement","src":"2801:45:4"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"2518:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":449,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:4","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:4","nodeType":"VariableDeclaration","scope":449,"src":"2694:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:4"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"2729:0:4"},"scope":455,"src":"2666:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"2859:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":454,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:4","nodeType":"VariableDeclaration","scope":455,"src":"3118:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"length":{"hexValue":"3439","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":456,"src":"708:2438:4","usedErrors":[]}],"src":"102:3045:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[954],"Initializable":[624]},"id":625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":457,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":625,"sourceUnit":955,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"184:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":624,"linearizedBaseContracts":[624],"name":"Initializable","nameLocation":"2412:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"2432:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":462,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:5","nodeType":"VariableDeclaration","scope":624,"src":"2546:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":461,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2579:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":465,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:5","nodeType":"VariableDeclaration","scope":624,"src":"2675:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":464,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"2708:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":470,"name":"Initialized","nameLocation":"2809:11:5","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":470,"src":"2821:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":467,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:5"},"src":"2803:33:5"},{"body":{"id":525,"nodeType":"Block","src":"3269:483:5","statements":[{"assignments":[474],"declarations":[{"constant":false,"id":474,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:5","nodeType":"VariableDeclaration","scope":525,"src":"3279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":473,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":477,"initialValue":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:5","subExpression":{"id":475,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3302:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3347:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3365:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:5","subExpression":{"arguments":[{"arguments":[{"id":489,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$624","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$624","typeString":"contract Initializable"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:5","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":485,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"3388:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$954_$","typeString":"type(library AddressUpgradeable)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":642,"src":"3388:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3436:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"3325:201:5"},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":502,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3536:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":505,"nodeType":"ExpressionStatement","src":"3536:16:5"},{"condition":{"id":506,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3566:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":512,"nodeType":"IfStatement","src":"3562:65:5","trueBody":{"id":511,"nodeType":"Block","src":"3582:45:5","statements":[{"expression":{"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":507,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3596:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":510,"nodeType":"ExpressionStatement","src":"3596:20:5"}]}},{"id":513,"nodeType":"PlaceholderStatement","src":"3636:1:5"},{"condition":{"id":514,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3651:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"nodeType":"IfStatement","src":"3647:99:5","trueBody":{"id":523,"nodeType":"Block","src":"3667:79:5","statements":[{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3681:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":518,"nodeType":"ExpressionStatement","src":"3681:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":519,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"EmitStatement","src":"3716:19:5"}]}}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"2842:399:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":526,"name":"initializer","nameLocation":"3255:11:5","nodeType":"ModifierDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[],"src":"3266:2:5"},"src":"3246:506:5","virtual":false,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"4863:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:5","subExpression":{"id":532,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4882:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4899:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":535,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4914:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"4873:99:5"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":541,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4982:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":542,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4997:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":544,"nodeType":"ExpressionStatement","src":"4982:22:5"},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5014:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"nodeType":"ExpressionStatement","src":"5014:20:5"},{"id":549,"nodeType":"PlaceholderStatement","src":"5044:1:5"},{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"ExpressionStatement","src":"5055:21:5"},{"eventCall":{"arguments":[{"id":555,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5103:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":554,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"5091:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"EmitStatement","src":"5086:25:5"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"3758:1062:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":559,"name":"reinitializer","nameLocation":"4834:13:5","nodeType":"ModifierDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"version","nameLocation":"4854:7:5","nodeType":"VariableDeclaration","scope":559,"src":"4848:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":528,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:5"},"src":"4825:293:5","virtual":false,"visibility":"internal"},{"body":{"id":568,"nodeType":"Block","src":"5356:97:5","statements":[{"expression":{"arguments":[{"id":563,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5374:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"ExpressionStatement","src":"5366:69:5"},{"id":567,"nodeType":"PlaceholderStatement","src":"5445:1:5"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"5124:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":569,"name":"onlyInitializing","nameLocation":"5337:16:5","nodeType":"ModifierDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"5353:2:5"},"src":"5328:125:5","virtual":false,"visibility":"internal"},{"body":{"id":604,"nodeType":"Block","src":"5988:231:5","statements":[{"expression":{"arguments":[{"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:5","subExpression":{"id":574,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6007:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"5998:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6078:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":581,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:5","memberName":"max","nodeType":"MemberAccess","src":"6094:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"IfStatement","src":"6074:139:5","trueBody":{"id":602,"nodeType":"Block","src":"6111:102:5","statements":[{"expression":{"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":586,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6125:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":588,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:5","memberName":"max","nodeType":"MemberAccess","src":"6140:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":593,"nodeType":"ExpressionStatement","src":"6125:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":596,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:5","memberName":"max","nodeType":"MemberAccess","src":"6186:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":594,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6174:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"EmitStatement","src":"6169:33:5"}]}}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"5459:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":605,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:5","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"5968:2:5"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"5988:0:5"},"scope":624,"src":"5939:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"6393:36:5","statements":[{"expression":{"id":611,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6410:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":610,"id":612,"nodeType":"Return","src":"6403:19:5"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"6225:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":614,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:5","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"6360:2:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"6386:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":608,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:5"},"scope":624,"src":"6329:100:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":622,"nodeType":"Block","src":"6601:37:5","statements":[{"expression":{"id":620,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6618:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":619,"id":621,"nodeType":"Return","src":"6611:20:5"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"6435:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":623,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:5","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"6569:2:5"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"6595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:5"},"scope":624,"src":"6545:93:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":625,"src":"2394:4246:5","usedErrors":[]}],"src":"113:6528:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[954]},"id":955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":626,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":954,"linearizedBaseContracts":[954],"name":"AddressUpgradeable","nameLocation":"202:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":641,"nodeType":"Block","src":"1489:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"1713:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:6","memberName":"code","nodeType":"MemberAccess","src":"1713:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:6","memberName":"length","nodeType":"MemberAccess","src":"1713:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":634,"id":640,"nodeType":"Return","src":"1706:30:6"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"227:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":642,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:6","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"account","nameLocation":"1451:7:6","nodeType":"VariableDeclaration","scope":642,"src":"1443:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:6"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":642,"src":"1483:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":632,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:6"},"scope":954,"src":"1423:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"2729:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}],"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:6","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2772:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"2739:73:6"},{"assignments":[662,null],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"success","nameLocation":"2829:7:6","nodeType":"VariableDeclaration","scope":675,"src":"2824:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":661,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":669,"initialValue":{"arguments":[{"hexValue":"","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":663,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2842:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:6","memberName":"call","nodeType":"MemberAccess","src":"2842:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2864:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:6"},{"expression":{"arguments":[{"id":671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2893:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"2885:78:6"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"1749:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:6","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:6","nodeType":"VariableDeclaration","scope":676,"src":"2677:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"amount","nameLocation":"2712:6:6","nodeType":"VariableDeclaration","scope":676,"src":"2704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"2729:0:6"},"scope":954,"src":"2658:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"3801:96:6","statements":[{"expression":{"arguments":[{"id":687,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3840:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3848:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":686,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[734,778],"referencedDeclaration":778,"src":"3818:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":685,"id":692,"nodeType":"Return","src":"3811:79:6"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"2976:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:6","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"target","nameLocation":"3742:6:6","nodeType":"VariableDeclaration","scope":694,"src":"3734:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"data","nameLocation":"3763:4:6","nodeType":"VariableDeclaration","scope":694,"src":"3750:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:6"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"3787:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:6"},"scope":954,"src":"3712:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":713,"nodeType":"Block","src":"4266:76:6","statements":[{"expression":{"arguments":[{"id":707,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4305:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4313:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":710,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4322:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":706,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[734,778],"referencedDeclaration":778,"src":"4283:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":705,"id":712,"nodeType":"Return","src":"4276:59:6"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"3903:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":714,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:6","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"target","nameLocation":"4158:6:6","nodeType":"VariableDeclaration","scope":714,"src":"4150:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"data","nameLocation":"4187:4:6","nodeType":"VariableDeclaration","scope":714,"src":"4174:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":698,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:6","nodeType":"VariableDeclaration","scope":714,"src":"4201:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":700,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:6"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":714,"src":"4252:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:6"},"scope":954,"src":"4119:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"4817:111:6","statements":[{"expression":{"arguments":[{"id":727,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4856:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4864:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":726,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[734,778],"referencedDeclaration":778,"src":"4834:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":725,"id":732,"nodeType":"Return","src":"4827:94:6"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"4348:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":734,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:6","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"target","nameLocation":"4743:6:6","nodeType":"VariableDeclaration","scope":734,"src":"4735:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"data","nameLocation":"4764:4:6","nodeType":"VariableDeclaration","scope":734,"src":"4751:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":718,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"value","nameLocation":"4778:5:6","nodeType":"VariableDeclaration","scope":734,"src":"4770:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:6"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"4803:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:6"},"scope":954,"src":"4704:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":777,"nodeType":"Block","src":"5355:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":751,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:6","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5365:81:6"},{"assignments":[760,762],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"success","nameLocation":"5462:7:6","nodeType":"VariableDeclaration","scope":777,"src":"5457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:6","nodeType":"VariableDeclaration","scope":777,"src":"5471:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":769,"initialValue":{"arguments":[{"id":767,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5524:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":763,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5498:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:6","memberName":"call","nodeType":"MemberAccess","src":"5498:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:6"},{"expression":{"arguments":[{"id":771,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5573:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5581:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":773,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5590:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":774,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5602:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":770,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5546:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":747,"id":776,"nodeType":"Return","src":"5539:76:6"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"4934:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:6","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"target","nameLocation":"5224:6:6","nodeType":"VariableDeclaration","scope":778,"src":"5216:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"data","nameLocation":"5253:4:6","nodeType":"VariableDeclaration","scope":778,"src":"5240:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"value","nameLocation":"5275:5:6","nodeType":"VariableDeclaration","scope":778,"src":"5267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:6","nodeType":"VariableDeclaration","scope":778,"src":"5290:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":742,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:6"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"5341:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:6"},"scope":954,"src":"5176:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"5899:97:6","statements":[{"expression":{"arguments":[{"id":789,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5935:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"5943:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":788,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[795,824],"referencedDeclaration":824,"src":"5916:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":787,"id":793,"nodeType":"Return","src":"5909:80:6"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"5628:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:6","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"target","nameLocation":"5835:6:6","nodeType":"VariableDeclaration","scope":795,"src":"5827:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"data","nameLocation":"5856:4:6","nodeType":"VariableDeclaration","scope":795,"src":"5843:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:6"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"5885:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:6"},"scope":954,"src":"5799:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"6338:168:6","statements":[{"assignments":[808,810],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"success","nameLocation":"6354:7:6","nodeType":"VariableDeclaration","scope":823,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":807,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:6","nodeType":"VariableDeclaration","scope":823,"src":"6363:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":815,"initialValue":{"arguments":[{"id":813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"6408:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":811,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6390:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:6"},{"expression":{"arguments":[{"id":817,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6457:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6465:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":819,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"6474:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":820,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"6486:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":816,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"6430:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":806,"id":822,"nodeType":"Return","src":"6423:76:6"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"6002:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:6","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"target","nameLocation":"6225:6:6","nodeType":"VariableDeclaration","scope":824,"src":"6217:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"data","nameLocation":"6254:4:6","nodeType":"VariableDeclaration","scope":824,"src":"6241:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:6","nodeType":"VariableDeclaration","scope":824,"src":"6268:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":801,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:6"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":824,"src":"6324:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":804,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:6"},"scope":954,"src":"6180:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"6782:101:6","statements":[{"expression":{"arguments":[{"id":835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6820:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6828:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":834,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[841,870],"referencedDeclaration":870,"src":"6799:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":833,"id":839,"nodeType":"Return","src":"6792:84:6"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"6512:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:6","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"target","nameLocation":"6723:6:6","nodeType":"VariableDeclaration","scope":841,"src":"6715:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"data","nameLocation":"6744:4:6","nodeType":"VariableDeclaration","scope":841,"src":"6731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:6"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"6768:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":831,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:6"},"scope":954,"src":"6685:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"7224:170:6","statements":[{"assignments":[854,856],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"success","nameLocation":"7240:7:6","nodeType":"VariableDeclaration","scope":869,"src":"7235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":853,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:6","nodeType":"VariableDeclaration","scope":869,"src":"7249:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":861,"initialValue":{"arguments":[{"id":859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7296:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":857,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7276:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:6"},{"expression":{"arguments":[{"id":863,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7345:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":865,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7362:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":866,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7374:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":862,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7318:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":852,"id":868,"nodeType":"Return","src":"7311:76:6"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"6889:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:6","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"target","nameLocation":"7116:6:6","nodeType":"VariableDeclaration","scope":870,"src":"7108:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"data","nameLocation":"7145:4:6","nodeType":"VariableDeclaration","scope":870,"src":"7132:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":845,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:6","nodeType":"VariableDeclaration","scope":870,"src":"7159:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:6"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"7210:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:6"},"scope":954,"src":"7069:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"7876:434:6","statements":[{"condition":{"id":884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"7890:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":906,"nodeType":"Block","src":"8246:58:6","statements":[{"expression":{"arguments":[{"id":902,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8268:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":903,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"8280:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":901,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8260:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"8260:33:6"}]},"id":907,"nodeType":"IfStatement","src":"7886:418:6","trueBody":{"id":900,"nodeType":"Block","src":"7899:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":885,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"7917:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:6","memberName":"length","nodeType":"MemberAccess","src":"7917:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":897,"nodeType":"IfStatement","src":"7913:286:6","trueBody":{"id":896,"nodeType":"Block","src":"7941:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":891,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8143:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":890,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8132:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"8124:60:6"}]}},{"expression":{"id":898,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8219:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":883,"id":899,"nodeType":"Return","src":"8212:17:6"}]}}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"7400:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:6","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"target","nameLocation":"7735:6:6","nodeType":"VariableDeclaration","scope":909,"src":"7727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"success","nameLocation":"7756:7:6","nodeType":"VariableDeclaration","scope":909,"src":"7751:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":874,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:6","nodeType":"VariableDeclaration","scope":909,"src":"7773:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:6","nodeType":"VariableDeclaration","scope":909,"src":"7806:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":878,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:6"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"7862:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":881,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:6"},"scope":954,"src":"7682:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":932,"nodeType":"Block","src":"8691:135:6","statements":[{"condition":{"id":921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"8705:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":930,"nodeType":"Block","src":"8762:58:6","statements":[{"expression":{"arguments":[{"id":926,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"8784:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":927,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"8796:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":925,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"8776:33:6"}]},"id":931,"nodeType":"IfStatement","src":"8701:119:6","trueBody":{"id":924,"nodeType":"Block","src":"8714:42:6","statements":[{"expression":{"id":922,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"8735:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":920,"id":923,"nodeType":"Return","src":"8728:17:6"}]}}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"8316:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":933,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"success","nameLocation":"8571:7:6","nodeType":"VariableDeclaration","scope":933,"src":"8566:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":911,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:6","nodeType":"VariableDeclaration","scope":933,"src":"8588:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":913,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:6","nodeType":"VariableDeclaration","scope":933,"src":"8621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":915,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:6"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"8677:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:6"},"scope":954,"src":"8531:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"8915:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":940,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"8991:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:6","memberName":"length","nodeType":"MemberAccess","src":"8991:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":950,"nodeType":"Block","src":"9321:45:6","statements":[{"expression":{"arguments":[{"id":947,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"9342:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":946,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9335:20:6"}]},"id":951,"nodeType":"IfStatement","src":"8987:379:6","trueBody":{"id":945,"nodeType":"Block","src":"9014:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:6"},"nodeType":"YulFunctionCall","src":"9213:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:6"},"nodeType":"YulFunctionCall","src":"9254:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:6"},"nodeType":"YulFunctionCall","src":"9247:44:6"},"nodeType":"YulExpressionStatement","src":"9247:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":935,"isOffset":false,"isSlot":false,"src":"9219:10:6","valueSize":1},{"declaration":935,"isOffset":false,"isSlot":false,"src":"9262:10:6","valueSize":1}],"id":944,"nodeType":"InlineAssembly","src":"9163:142:6"}]}}]},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:6","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:6","nodeType":"VariableDeclaration","scope":953,"src":"8849:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:6","nodeType":"VariableDeclaration","scope":953,"src":"8874:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":936,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:6"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"8915:0:6"},"scope":954,"src":"8832:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":955,"src":"194:9180:6","usedErrors":[]}],"src":"101:9274:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[954],"ContextUpgradeable":[996],"Initializable":[624]},"id":997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":997,"sourceUnit":625,"src":"110:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":959,"name":"Initializable","nameLocations":["691:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":624,"src":"691:13:7"},"id":960,"nodeType":"InheritanceSpecifier","src":"691:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"154:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":996,"linearizedBaseContracts":[996,624],"name":"ContextUpgradeable","nameLocation":"669:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":965,"nodeType":"Block","src":"763:7:7","statements":[]},"id":966,"implemented":true,"kind":"function","modifiers":[{"id":963,"kind":"modifierInvocation","modifierName":{"id":962,"name":"onlyInitializing","nameLocations":["746:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"746:16:7"},"nodeType":"ModifierInvocation","src":"746:16:7"}],"name":"__Context_init","nameLocation":"720:14:7","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"734:2:7"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"763:0:7"},"scope":996,"src":"711:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":971,"nodeType":"Block","src":"838:7:7","statements":[]},"id":972,"implemented":true,"kind":"function","modifiers":[{"id":969,"kind":"modifierInvocation","modifierName":{"id":968,"name":"onlyInitializing","nameLocations":["821:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"821:16:7"},"nodeType":"ModifierInvocation","src":"821:16:7"}],"name":"__Context_init_unchained","nameLocation":"785:24:7","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"809:2:7"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"838:0:7"},"scope":996,"src":"776:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"912:34:7","statements":[{"expression":{"expression":{"id":977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:7","memberName":"sender","nodeType":"MemberAccess","src":"929:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":976,"id":979,"nodeType":"Return","src":"922:17:7"}]},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:7","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"869:2:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:7"},"scope":996,"src":"850:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"1019:32:7","statements":[{"expression":{"expression":{"id":986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:7","memberName":"data","nodeType":"MemberAccess","src":"1036:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":985,"id":988,"nodeType":"Return","src":"1029:15:7"}]},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"969:2:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"1003:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":983,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:7"},"scope":996,"src":"952:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"1057:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":995,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:7","nodeType":"VariableDeclaration","scope":996,"src":"1316:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":994,"length":{"hexValue":"3530","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":997,"src":"651:693:7","usedErrors":[]}],"src":"86:1259:7"},"id":7},"contracts/registry/implementation/TrustedIssuersRegistry.sol":{"ast":{"absolutePath":"contracts/registry/implementation/TrustedIssuersRegistry.sol","exportedSymbols":{"AddressUpgradeable":[2395],"ContextUpgradeable":[2065],"IClaimIssuer":[59],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"ITrustedIssuersRegistry":[1695],"Initializable":[2023],"OwnableUpgradeable":[1854],"TIRStorage":[1722],"TrustedIssuersRegistry":[1594]},"id":1595,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":998,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3818:23:8"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","file":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","id":999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":60,"src":"3843:67:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"../../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":1855,"src":"3911:97:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/registry/interface/ITrustedIssuersRegistry.sol","file":"../interface/ITrustedIssuersRegistry.sol","id":1001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":1696,"src":"4009:50:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/registry/storage/TIRStorage.sol","file":"../storage/TIRStorage.sol","id":1002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":1723,"src":"4060:35:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1003,"name":"ITrustedIssuersRegistry","nameLocations":["4132:23:8"],"nodeType":"IdentifierPath","referencedDeclaration":1695,"src":"4132:23:8"},"id":1004,"nodeType":"InheritanceSpecifier","src":"4132:23:8"},{"baseName":{"id":1005,"name":"OwnableUpgradeable","nameLocations":["4157:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"4157:18:8"},"id":1006,"nodeType":"InheritanceSpecifier","src":"4157:18:8"},{"baseName":{"id":1007,"name":"TIRStorage","nameLocations":["4177:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"4177:10:8"},"id":1008,"nodeType":"InheritanceSpecifier","src":"4177:10:8"}],"canonicalName":"TrustedIssuersRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1594,"linearizedBaseContracts":[1594,1722,1854,2065,2023,1695],"name":"TrustedIssuersRegistry","nameLocation":"4106:22:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1016,"nodeType":"Block","src":"4231:33:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1013,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"4241:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4241:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"4241:16:8"}]},"functionSelector":"e1c7392a","id":1017,"implemented":true,"kind":"function","modifiers":[{"id":1011,"kind":"modifierInvocation","modifierName":{"id":1010,"name":"initializer","nameLocations":["4219:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1925,"src":"4219:11:8"},"nodeType":"ModifierInvocation","src":"4219:11:8"}],"name":"init","nameLocation":"4203:4:8","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"4207:2:8"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"4231:0:8"},"scope":1594,"src":"4194:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1631],"body":{"id":1122,"nodeType":"Block","src":"4463:803:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1033,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4489:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4481:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"4481:7:8","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4516:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4508:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"4508:7:8","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4508:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4481:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4520:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4473:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4473:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"4473:81:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1044,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4572:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1049,"indexExpression":{"arguments":[{"id":1047,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4606:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4598:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"4598:7:8","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4598:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4572:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:8","memberName":"length","nodeType":"MemberAccess","src":"4572:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4633:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4572:62:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"747275737465642049737375657220616c726561647920657869737473","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4636:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82","typeString":"literal_string \"trusted Issuer already exists\""},"value":"trusted Issuer already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82","typeString":"literal_string \"trusted Issuer already exists\""}],"id":1043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4564:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:104:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"4564:104:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1057,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"4686:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4699:6:8","memberName":"length","nodeType":"MemberAccess","src":"4686:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4708:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4686:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472757374656420636c61696d20746f706963732063616e6e6f7420626520656d707479","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4711:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277","typeString":"literal_string \"trusted claim topics cannot be empty\""},"value":"trusted claim topics cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277","typeString":"literal_string \"trusted claim topics cannot be empty\""}],"id":1056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4678:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4678:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"4678:72:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1065,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"4768:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4781:6:8","memberName":"length","nodeType":"MemberAccess","src":"4768:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3135","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4791:2:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"4768:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f742068617665206d6f7265207468616e20313520636c61696d20746f70696373","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4795:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160","typeString":"literal_string \"cannot have more than 15 claim topics\""},"value":"cannot have more than 15 claim topics"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160","typeString":"literal_string \"cannot have more than 15 claim topics\""}],"id":1064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4760:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4760:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"4760:75:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1073,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4853:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4869:6:8","memberName":"length","nodeType":"MemberAccess","src":"4853:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3530","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"4853:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f742068617665206d6f7265207468616e20353020747275737465642069737375657273","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4882:42:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73","typeString":"literal_string \"cannot have more than 50 trusted issuers\""},"value":"cannot have more than 50 trusted issuers"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73","typeString":"literal_string \"cannot have more than 50 trusted issuers\""}],"id":1072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4845:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4845:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"4845:80:8"},{"expression":{"arguments":[{"id":1083,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4956:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"expression":{"id":1080,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4935:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:8","memberName":"push","nodeType":"MemberAccess","src":"4935:20:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$59_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$","typeString":"function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"4935:36:8"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1086,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4981:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1091,"indexExpression":{"arguments":[{"id":1089,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5015:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5007:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"5007:7:8","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5007:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4981:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1092,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"5034:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"src":"4981:65:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1094,"nodeType":"ExpressionStatement","src":"4981:65:8"},{"body":{"id":1115,"nodeType":"Block","src":"5106:91:8","statements":[{"expression":{"arguments":[{"id":1112,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5171:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"expression":{"baseExpression":{"id":1106,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5120:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1110,"indexExpression":{"baseExpression":{"id":1107,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"5149:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1109,"indexExpression":{"id":1108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5162:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5149:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5120:45:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:4:8","memberName":"push","nodeType":"MemberAccess","src":"5120:50:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$59_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$","typeString":"function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"ExpressionStatement","src":"5120:66:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5076:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1100,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"5080:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5093:6:8","memberName":"length","nodeType":"MemberAccess","src":"5080:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1116,"initializationExpression":{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"i","nameLocation":"5069:1:8","nodeType":"VariableDeclaration","scope":1116,"src":"5061:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5061:13:8"},"loopExpression":{"expression":{"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5101:3:8","subExpression":{"id":1103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5101:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1105,"nodeType":"ExpressionStatement","src":"5101:3:8"},"nodeType":"ForStatement","src":"5056:141:8"},{"eventCall":{"arguments":[{"id":1118,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5230:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},{"id":1119,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"5246:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":1117,"name":"TrustedIssuerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"5211:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IClaimIssuer_$59_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (contract IClaimIssuer,uint256[] memory)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"EmitStatement","src":"5206:53:8"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"4270:72:8","text":"  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}."},"functionSelector":"9f63ea98","id":1123,"implemented":true,"kind":"function","modifiers":[{"id":1028,"kind":"modifierInvocation","modifierName":{"id":1027,"name":"onlyOwner","nameLocations":["4453:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"4453:9:8"},"nodeType":"ModifierInvocation","src":"4453:9:8"}],"name":"addTrustedIssuer","nameLocation":"4356:16:8","nodeType":"FunctionDefinition","overrides":{"id":1026,"nodeType":"OverrideSpecifier","overrides":[],"src":"4444:8:8"},"parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"4386:14:8","nodeType":"VariableDeclaration","scope":1123,"src":"4373:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"IClaimIssuer","nameLocations":["4373:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4373:12:8"},"referencedDeclaration":59,"src":"4373:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"_claimTopics","nameLocation":"4421:12:8","nodeType":"VariableDeclaration","scope":1123,"src":"4402:31:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4402:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ArrayTypeName","src":"4402:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4372:62:8"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"4463:0:8"},"scope":1594,"src":"4347:919:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1638],"body":{"id":1289,"nodeType":"Block","src":"5438:1356:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1136,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5464:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5456:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"5456:7:8","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5456:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5491:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5483:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"5483:7:8","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5483:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5456:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5495:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5448:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5448:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"5448:81:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1147,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5547:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1152,"indexExpression":{"arguments":[{"id":1150,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5581:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5573:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"5573:7:8","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5573:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5547:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5598:6:8","memberName":"length","nodeType":"MemberAccess","src":"5547:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5608:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5547:62:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f542061207472757374656420697373756572","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5611:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573","typeString":"literal_string \"NOT a trusted issuer\""},"value":"NOT a trusted issuer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573","typeString":"literal_string \"NOT a trusted issuer\""}],"id":1146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5539:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5539:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1158,"nodeType":"ExpressionStatement","src":"5539:95:8"},{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"length","nameLocation":"5652:6:8","nodeType":"VariableDeclaration","scope":1289,"src":"5644:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"5644:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1163,"initialValue":{"expression":{"id":1161,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5661:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5677:6:8","memberName":"length","nodeType":"MemberAccess","src":"5661:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5644:39:8"},{"body":{"id":1197,"nodeType":"Block","src":"5730:209:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1174,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5748:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1176,"indexExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5764:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:18:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1177,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5770:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"src":"5748:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"5744:185:8","trueBody":{"id":1195,"nodeType":"Block","src":"5786:143:8","statements":[{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1179,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5804:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1181,"indexExpression":{"id":1180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5820:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5804:18:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1182,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5825:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1186,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5841:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5850:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5841:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5825:27:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"src":"5804:48:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1188,"nodeType":"ExpressionStatement","src":"5804:48:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1189,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5870:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5886:3:8","memberName":"pop","nodeType":"MemberAccess","src":"5870:19:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$","typeString":"function (contract IClaimIssuer[] storage pointer)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"5870:21:8"},{"id":1194,"nodeType":"Break","src":"5909:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5713:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1169,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5717:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5713:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"initializationExpression":{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"i","nameLocation":"5706:1:8","nodeType":"VariableDeclaration","scope":1198,"src":"5698:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5698:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1167,"initialValue":{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5698:13:8"},"loopExpression":{"expression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5725:3:8","subExpression":{"id":1171,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5725:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ExpressionStatement","src":"5725:3:8"},"nodeType":"ForStatement","src":"5693:246:8"},{"body":{"id":1275,"nodeType":"Block","src":"6078:592:8","statements":[{"assignments":[1216],"declarations":[{"constant":false,"id":1216,"mutability":"mutable","name":"claimTopic","nameLocation":"6100:10:8","nodeType":"VariableDeclaration","scope":1275,"src":"6092:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6092:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1225,"initialValue":{"baseExpression":{"baseExpression":{"id":1217,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6113:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1222,"indexExpression":{"arguments":[{"id":1220,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6147:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6139:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"6139:7:8","typeDescriptions":{}}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6139:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6113:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1224,"indexExpression":{"id":1223,"name":"claimTopicIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6164:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6113:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6092:88:8"},{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"topicsLength","nameLocation":"6202:12:8","nodeType":"VariableDeclaration","scope":1275,"src":"6194:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"6194:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"expression":{"baseExpression":{"id":1228,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6217:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1230,"indexExpression":{"id":1229,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6246:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6217:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:6:8","memberName":"length","nodeType":"MemberAccess","src":"6217:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6194:70:8"},{"body":{"id":1273,"nodeType":"Block","src":"6321:339:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1243,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6343:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1245,"indexExpression":{"id":1244,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6372:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6343:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1247,"indexExpression":{"id":1246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6384:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6343:43:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1248,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6390:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"src":"6343:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"6339:307:8","trueBody":{"id":1271,"nodeType":"Block","src":"6406:240:8","statements":[{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1250,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6428:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1253,"indexExpression":{"id":1251,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6457:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6428:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1254,"indexExpression":{"id":1252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6469:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6428:43:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":1255,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6474:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1257,"indexExpression":{"id":1256,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6503:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6474:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1261,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"topicsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6515:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6530:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6515:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6474:58:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"src":"6428:104:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1263,"nodeType":"ExpressionStatement","src":"6428:104:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1264,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6554:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1266,"indexExpression":{"id":1265,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6583:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6554:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6595:3:8","memberName":"pop","nodeType":"MemberAccess","src":"6554:44:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$","typeString":"function (contract IClaimIssuer[] storage pointer)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1269,"nodeType":"ExpressionStatement","src":"6554:46:8"},{"id":1270,"nodeType":"Break","src":"6622:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6298:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1238,"name":"topicsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6302:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6298:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1274,"initializationExpression":{"assignments":[1234],"declarations":[{"constant":false,"id":1234,"mutability":"mutable","name":"i","nameLocation":"6291:1:8","nodeType":"VariableDeclaration","scope":1274,"src":"6283:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"6283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1236,"initialValue":{"hexValue":"30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6295:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6283:13:8"},"loopExpression":{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6316:3:8","subExpression":{"id":1240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6316:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"6316:3:8"},"nodeType":"ForStatement","src":"6278:382:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"claimTopicIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5982:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1204,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6000:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1209,"indexExpression":{"arguments":[{"id":1207,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6034:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6026:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"6026:7:8","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6026:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6000:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6051:6:8","memberName":"length","nodeType":"MemberAccess","src":"6000:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5982:75:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"initializationExpression":{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"claimTopicIndex","nameLocation":"5961:15:8","nodeType":"VariableDeclaration","scope":1276,"src":"5953:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1202,"initialValue":{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5979:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5953:27:8"},"loopExpression":{"expression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6059:17:8","subExpression":{"id":1212,"name":"claimTopicIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6059:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1214,"nodeType":"ExpressionStatement","src":"6059:17:8"},"nodeType":"ForStatement","src":"5948:722:8"},{"expression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6679:57:8","subExpression":{"baseExpression":{"id":1277,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6686:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1282,"indexExpression":{"arguments":[{"id":1280,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6720:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6712:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"6712:7:8","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6712:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6686:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"6679:57:8"},{"eventCall":{"arguments":[{"id":1286,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6772:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1285,"name":"TrustedIssuerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"6751:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IClaimIssuer_$59_$returns$__$","typeString":"function (contract IClaimIssuer)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6751:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1288,"nodeType":"EmitStatement","src":"6746:41:8"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"5272:75:8","text":"  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}."},"functionSelector":"b93d28eb","id":1290,"implemented":true,"kind":"function","modifiers":[{"id":1131,"kind":"modifierInvocation","modifierName":{"id":1130,"name":"onlyOwner","nameLocations":["5428:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"5428:9:8"},"nodeType":"ModifierInvocation","src":"5428:9:8"}],"name":"removeTrustedIssuer","nameLocation":"5361:19:8","nodeType":"FunctionDefinition","overrides":{"id":1129,"nodeType":"OverrideSpecifier","overrides":[],"src":"5419:8:8"},"parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"5394:14:8","nodeType":"VariableDeclaration","scope":1290,"src":"5381:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1126,"nodeType":"UserDefinedTypeName","pathNode":{"id":1125,"name":"IClaimIssuer","nameLocations":["5381:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5381:12:8"},"referencedDeclaration":59,"src":"5381:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"5380:29:8"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"5438:0:8"},"scope":1594,"src":"5352:1442:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1648],"body":{"id":1459,"nodeType":"Block","src":"7007:1326:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1306,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7033:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7025:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:8","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:8","typeDescriptions":{}}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7025:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7064:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7017:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7017:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1315,"nodeType":"ExpressionStatement","src":"7017:81:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1317,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7116:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1322,"indexExpression":{"arguments":[{"id":1320,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7150:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:8","typeDescriptions":{}}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7142:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7116:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7167:6:8","memberName":"length","nodeType":"MemberAccess","src":"7116:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7177:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7116:62:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f542061207472757374656420697373756572","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7180:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573","typeString":"literal_string \"NOT a trusted issuer\""},"value":"NOT a trusted issuer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573","typeString":"literal_string \"NOT a trusted issuer\""}],"id":1316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7108:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7108:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"ExpressionStatement","src":"7108:95:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1330,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"7221:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7234:6:8","memberName":"length","nodeType":"MemberAccess","src":"7221:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3135","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7244:2:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"7221:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f742068617665206d6f7265207468616e20313520636c61696d20746f70696373","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7248:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160","typeString":"literal_string \"cannot have more than 15 claim topics\""},"value":"cannot have more than 15 claim topics"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160","typeString":"literal_string \"cannot have more than 15 claim topics\""}],"id":1329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7213:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7213:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"ExpressionStatement","src":"7213:75:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1338,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"7306:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7319:6:8","memberName":"length","nodeType":"MemberAccess","src":"7306:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7328:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7306:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c61696d20746f706963732063616e6e6f7420626520656d707479","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7331:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36","typeString":"literal_string \"claim topics cannot be empty\""},"value":"claim topics cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36","typeString":"literal_string \"claim topics cannot be empty\""}],"id":1337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7298:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"ExpressionStatement","src":"7298:64:8"},{"body":{"id":1421,"nodeType":"Block","src":"7461:578:8","statements":[{"assignments":[1362],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"claimTopic","nameLocation":"7483:10:8","nodeType":"VariableDeclaration","scope":1421,"src":"7475:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"7475:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1371,"initialValue":{"baseExpression":{"baseExpression":{"id":1363,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7496:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1368,"indexExpression":{"arguments":[{"id":1366,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7530:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7522:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7522:7:8","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7522:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7496:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1370,"indexExpression":{"id":1369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7547:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7496:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7475:74:8"},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"topicsLength","nameLocation":"7571:12:8","nodeType":"VariableDeclaration","scope":1421,"src":"7563:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"7563:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1378,"initialValue":{"expression":{"baseExpression":{"id":1374,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"7586:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1376,"indexExpression":{"id":1375,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7615:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7586:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7627:6:8","memberName":"length","nodeType":"MemberAccess","src":"7586:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7563:70:8"},{"body":{"id":1419,"nodeType":"Block","src":"7690:339:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1389,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"7712:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1391,"indexExpression":{"id":1390,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7741:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7712:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1393,"indexExpression":{"id":1392,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7753:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7712:43:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1394,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7759:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"src":"7712:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"7708:307:8","trueBody":{"id":1417,"nodeType":"Block","src":"7775:240:8","statements":[{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1396,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"7797:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1399,"indexExpression":{"id":1397,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7826:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7797:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1400,"indexExpression":{"id":1398,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7838:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7797:43:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":1401,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"7843:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1403,"indexExpression":{"id":1402,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7872:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7843:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1407,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"topicsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"7884:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7899:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7884:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7843:58:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"src":"7797:104:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1409,"nodeType":"ExpressionStatement","src":"7797:104:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1410,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"7923:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1412,"indexExpression":{"id":1411,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7952:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7923:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7964:3:8","memberName":"pop","nodeType":"MemberAccess","src":"7923:44:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$","typeString":"function (contract IClaimIssuer[] storage pointer)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1415,"nodeType":"ExpressionStatement","src":"7923:46:8"},{"id":1416,"nodeType":"Break","src":"7991:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7667:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1384,"name":"topicsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"7671:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7667:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"initializationExpression":{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"j","nameLocation":"7660:1:8","nodeType":"VariableDeclaration","scope":1420,"src":"7652:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7652:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1382,"initialValue":{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7652:13:8"},"loopExpression":{"expression":{"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7685:3:8","subExpression":{"id":1386,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7685:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1388,"nodeType":"ExpressionStatement","src":"7685:3:8"},"nodeType":"ForStatement","src":"7647:382:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7393:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1350,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7397:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1355,"indexExpression":{"arguments":[{"id":1353,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7431:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7423:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"7423:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7397:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7448:6:8","memberName":"length","nodeType":"MemberAccess","src":"7397:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7393:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1422,"initializationExpression":{"assignments":[1346],"declarations":[{"constant":false,"id":1346,"mutability":"mutable","name":"i","nameLocation":"7386:1:8","nodeType":"VariableDeclaration","scope":1422,"src":"7378:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"7378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1348,"initialValue":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7390:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7378:13:8"},"loopExpression":{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7456:3:8","subExpression":{"id":1358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7456:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1360,"nodeType":"ExpressionStatement","src":"7456:3:8"},"nodeType":"ForStatement","src":"7373:666:8"},{"expression":{"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1423,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"8048:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1428,"indexExpression":{"arguments":[{"id":1426,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8082:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8074:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"8074:7:8","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8048:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1429,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8101:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"src":"8048:65:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1431,"nodeType":"ExpressionStatement","src":"8048:65:8"},{"body":{"id":1452,"nodeType":"Block","src":"8173:91:8","statements":[{"expression":{"arguments":[{"id":1449,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8238:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"expression":{"baseExpression":{"id":1443,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"8187:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1447,"indexExpression":{"baseExpression":{"id":1444,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8216:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1446,"indexExpression":{"id":1445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8229:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8216:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8187:45:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8233:4:8","memberName":"push","nodeType":"MemberAccess","src":"8187:50:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$59_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$","typeString":"function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"8187:66:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8143:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1437,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8147:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8160:6:8","memberName":"length","nodeType":"MemberAccess","src":"8147:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8143:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"initializationExpression":{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"i","nameLocation":"8136:1:8","nodeType":"VariableDeclaration","scope":1453,"src":"8128:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"8128:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1435,"initialValue":{"hexValue":"30","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8140:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8128:13:8"},"loopExpression":{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8168:3:8","subExpression":{"id":1440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ExpressionStatement","src":"8168:3:8"},"nodeType":"ForStatement","src":"8123:141:8"},{"eventCall":{"arguments":[{"id":1455,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8297:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},{"id":1456,"name":"_claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8313:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":1454,"name":"ClaimTopicsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"8278:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IClaimIssuer_$59_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (contract IClaimIssuer,uint256[] memory)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8278:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"EmitStatement","src":"8273:53:8"}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"6800:79:8","text":"  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."},"functionSelector":"04bc7e84","id":1460,"implemented":true,"kind":"function","modifiers":[{"id":1301,"kind":"modifierInvocation","modifierName":{"id":1300,"name":"onlyOwner","nameLocations":["6997:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"6997:9:8"},"nodeType":"ModifierInvocation","src":"6997:9:8"}],"name":"updateIssuerClaimTopics","nameLocation":"6893:23:8","nodeType":"FunctionDefinition","overrides":{"id":1299,"nodeType":"OverrideSpecifier","overrides":[],"src":"6988:8:8"},"parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"6930:14:8","nodeType":"VariableDeclaration","scope":1460,"src":"6917:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1293,"nodeType":"UserDefinedTypeName","pathNode":{"id":1292,"name":"IClaimIssuer","nameLocations":["6917:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6917:12:8"},"referencedDeclaration":59,"src":"6917:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"_claimTopics","nameLocation":"6965:12:8","nodeType":"VariableDeclaration","scope":1460,"src":"6946:31:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6946:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1296,"nodeType":"ArrayTypeName","src":"6946:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6916:62:8"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"7007:0:8"},"scope":1594,"src":"6884:1449:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1656],"body":{"id":1471,"nodeType":"Block","src":"8501:39:8","statements":[{"expression":{"id":1469,"name":"_trustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"8518:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"functionReturnParameters":1468,"id":1470,"nodeType":"Return","src":"8511:22:8"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"8339:73:8","text":"  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}."},"functionSelector":"d9dd24c5","id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedIssuers","nameLocation":"8426:17:8","nodeType":"FunctionDefinition","overrides":{"id":1463,"nodeType":"OverrideSpecifier","overrides":[],"src":"8460:8:8"},"parameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"8443:2:8"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"8478:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":1465,"nodeType":"UserDefinedTypeName","pathNode":{"id":1464,"name":"IClaimIssuer","nameLocations":["8478:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"8478:12:8"},"referencedDeclaration":59,"src":"8478:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1466,"nodeType":"ArrayTypeName","src":"8478:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"}],"src":"8477:23:8"},"scope":1594,"src":"8417:123:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1666],"body":{"id":1487,"nodeType":"Block","src":"8752:64:8","statements":[{"expression":{"baseExpression":{"id":1483,"name":"_claimTopicsToTrustedIssuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"8769:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[] storage ref)"}},"id":1485,"indexExpression":{"id":1484,"name":"claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8798:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[] storage ref"}},"functionReturnParameters":1482,"id":1486,"nodeType":"Return","src":"8762:47:8"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"8546:86:8","text":"  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."},"functionSelector":"52c111d1","id":1488,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedIssuersForClaimTopic","nameLocation":"8646:30:8","nodeType":"FunctionDefinition","overrides":{"id":1477,"nodeType":"OverrideSpecifier","overrides":[],"src":"8711:8:8"},"parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"claimTopic","nameLocation":"8685:10:8","nodeType":"VariableDeclaration","scope":1488,"src":"8677:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"8677:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8676:20:8"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1488,"src":"8729:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":1479,"nodeType":"UserDefinedTypeName","pathNode":{"id":1478,"name":"IClaimIssuer","nameLocations":["8729:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"8729:12:8"},"referencedDeclaration":59,"src":"8729:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1480,"nodeType":"ArrayTypeName","src":"8729:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"}],"src":"8728:23:8"},"scope":1594,"src":"8637:179:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1674],"body":{"id":1509,"nodeType":"Block","src":"8978:125:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1497,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"8992:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1499,"indexExpression":{"id":1498,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"9018:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8992:34:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9027:6:8","memberName":"length","nodeType":"MemberAccess","src":"8992:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9036:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"8988:87:8","trueBody":{"id":1505,"nodeType":"Block","src":"9039:36:8","statements":[{"expression":{"hexValue":"74727565","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9060:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1496,"id":1504,"nodeType":"Return","src":"9053:11:8"}]}},{"expression":{"hexValue":"66616c7365","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9091:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1496,"id":1508,"nodeType":"Return","src":"9084:12:8"}]},"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"8822:71:8","text":"  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}."},"functionSelector":"ef2ed1a4","id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedIssuer","nameLocation":"8907:15:8","nodeType":"FunctionDefinition","overrides":{"id":1493,"nodeType":"OverrideSpecifier","overrides":[],"src":"8954:8:8"},"parameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"_issuer","nameLocation":"8931:7:8","nodeType":"VariableDeclaration","scope":1510,"src":"8923:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"8923:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8922:17:8"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"8972:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1494,"name":"bool","nodeType":"ElementaryTypeName","src":"8972:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8971:6:8"},"scope":1594,"src":"8898:205:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1684],"body":{"id":1541,"nodeType":"Block","src":"9313:187:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1522,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"9331:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1527,"indexExpression":{"arguments":[{"id":1525,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"9365:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"9357:7:8","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9357:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9331:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9382:6:8","memberName":"length","nodeType":"MemberAccess","src":"9331:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9392:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9331:62:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"747275737465642049737375657220646f65736e2774206578697374","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9395:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730","typeString":"literal_string \"trusted Issuer doesn't exist\""},"value":"trusted Issuer doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730","typeString":"literal_string \"trusted Issuer doesn't exist\""}],"id":1521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9323:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9323:103:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"9323:103:8"},{"expression":{"baseExpression":{"id":1534,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"9443:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1539,"indexExpression":{"arguments":[{"id":1537,"name":"_trustedIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"9477:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:8","typeDescriptions":{}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9443:50:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":1520,"id":1540,"nodeType":"Return","src":"9436:57:8"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"9109:83:8","text":"  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."},"functionSelector":"c28fb278","id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedIssuerClaimTopics","nameLocation":"9206:27:8","nodeType":"FunctionDefinition","overrides":{"id":1516,"nodeType":"OverrideSpecifier","overrides":[],"src":"9277:8:8"},"parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"9247:14:8","nodeType":"VariableDeclaration","scope":1542,"src":"9234:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1513,"nodeType":"UserDefinedTypeName","pathNode":{"id":1512,"name":"IClaimIssuer","nameLocations":["9234:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"9234:12:8"},"referencedDeclaration":59,"src":"9234:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"9233:29:8"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"9295:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"9295:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1518,"nodeType":"ArrayTypeName","src":"9295:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9294:18:8"},"scope":1594,"src":"9197:303:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1694],"body":{"id":1592,"nodeType":"Block","src":"9679:321:8","statements":[{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"length","nameLocation":"9697:6:8","nodeType":"VariableDeclaration","scope":1592,"src":"9689:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"9689:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1559,"initialValue":{"expression":{"baseExpression":{"id":1555,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"9706:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1557,"indexExpression":{"id":1556,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"9732:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9706:34:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9741:6:8","memberName":"length","nodeType":"MemberAccess","src":"9706:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9689:58:8"},{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"claimTopics","nameLocation":"9774:11:8","nodeType":"VariableDeclaration","scope":1592,"src":"9757:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"9757:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1563,"nodeType":"ArrayTypeName","src":"9757:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1568,"initialValue":{"baseExpression":{"id":1565,"name":"_trustedIssuerClaimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"9788:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1567,"indexExpression":{"id":1566,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"9814:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9788:34:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9757:65:8"},{"body":{"id":1588,"nodeType":"Block","src":"9869:103:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1579,"name":"claimTopics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9887:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1581,"indexExpression":{"id":1580,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9899:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9887:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1582,"name":"_claimTopic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9905:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9887:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1587,"nodeType":"IfStatement","src":"9883:79:8","trueBody":{"id":1586,"nodeType":"Block","src":"9918:44:8","statements":[{"expression":{"hexValue":"74727565","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1552,"id":1585,"nodeType":"Return","src":"9936:11:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9852:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1574,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9856:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9852:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1589,"initializationExpression":{"assignments":[1570],"declarations":[{"constant":false,"id":1570,"mutability":"mutable","name":"i","nameLocation":"9845:1:8","nodeType":"VariableDeclaration","scope":1589,"src":"9837:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"9837:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1572,"initialValue":{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9849:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9837:13:8"},"loopExpression":{"expression":{"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9864:3:8","subExpression":{"id":1576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9864:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1578,"nodeType":"ExpressionStatement","src":"9864:3:8"},"nodeType":"ForStatement","src":"9832:140:8"},{"expression":{"hexValue":"66616c7365","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9988:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1552,"id":1591,"nodeType":"Return","src":"9981:12:8"}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9506:69:8","text":"  @dev See {ITrustedIssuersRegistry-hasClaimTopic}."},"functionSelector":"34a89987","id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"hasClaimTopic","nameLocation":"9589:13:8","nodeType":"FunctionDefinition","overrides":{"id":1549,"nodeType":"OverrideSpecifier","overrides":[],"src":"9655:8:8"},"parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"_issuer","nameLocation":"9611:7:8","nodeType":"VariableDeclaration","scope":1593,"src":"9603:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"_claimTopic","nameLocation":"9628:11:8","nodeType":"VariableDeclaration","scope":1593,"src":"9620:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"9620:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9602:38:8"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"9673:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"9673:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9672:6:8"},"scope":1594,"src":"9580:420:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1595,"src":"4097:5905:8","usedErrors":[]}],"src":"3818:6185:8"},"id":8},"contracts/registry/interface/ITrustedIssuersRegistry.sol":{"ast":{"absolutePath":"contracts/registry/interface/ITrustedIssuersRegistry.sol","exportedSymbols":{"IClaimIssuer":[59],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"ITrustedIssuersRegistry":[1695]},"id":1696,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1596,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3818:23:9"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","file":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","id":1597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1696,"sourceUnit":60,"src":"3843:67:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITrustedIssuersRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1695,"linearizedBaseContracts":[1695],"name":"ITrustedIssuersRegistry","nameLocation":"3922:23:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"3952:321:9","text":"  this event is emitted when a trusted issuer is added in the registry.\n  the event is emitted by the addTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"eventSelector":"fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872","id":1606,"name":"TrustedIssuerAdded","nameLocation":"4284:18:9","nodeType":"EventDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"indexed":true,"mutability":"mutable","name":"trustedIssuer","nameLocation":"4324:13:9","nodeType":"VariableDeclaration","scope":1606,"src":"4303:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1600,"nodeType":"UserDefinedTypeName","pathNode":{"id":1599,"name":"IClaimIssuer","nameLocations":["4303:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4303:12:9"},"referencedDeclaration":59,"src":"4303:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":1604,"indexed":false,"mutability":"mutable","name":"claimTopics","nameLocation":"4349:11:9","nodeType":"VariableDeclaration","scope":1606,"src":"4339:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1603,"nodeType":"ArrayTypeName","src":"4339:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4302:59:9"},"src":"4278:84:9"},{"anonymous":false,"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"4368:242:9","text":"  this event is emitted when a trusted issuer is removed from the registry.\n  the event is emitted by the removeTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"},"eventSelector":"2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321","id":1612,"name":"TrustedIssuerRemoved","nameLocation":"4621:20:9","nodeType":"EventDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"indexed":true,"mutability":"mutable","name":"trustedIssuer","nameLocation":"4663:13:9","nodeType":"VariableDeclaration","scope":1612,"src":"4642:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1609,"nodeType":"UserDefinedTypeName","pathNode":{"id":1608,"name":"IClaimIssuer","nameLocations":["4642:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4642:12:9"},"referencedDeclaration":59,"src":"4642:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"4641:36:9"},"src":"4615:63:9"},{"anonymous":false,"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"4684:348:9","text":"  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n  the event is emitted by the updateIssuerClaimTopics function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"eventSelector":"ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf","id":1621,"name":"ClaimTopicsUpdated","nameLocation":"5043:18:9","nodeType":"EventDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"indexed":true,"mutability":"mutable","name":"trustedIssuer","nameLocation":"5083:13:9","nodeType":"VariableDeclaration","scope":1621,"src":"5062:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1615,"nodeType":"UserDefinedTypeName","pathNode":{"id":1614,"name":"IClaimIssuer","nameLocations":["5062:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5062:12:9"},"referencedDeclaration":59,"src":"5062:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":1619,"indexed":false,"mutability":"mutable","name":"claimTopics","nameLocation":"5108:11:9","nodeType":"VariableDeclaration","scope":1621,"src":"5098:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ArrayTypeName","src":"5098:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5061:59:9"},"src":"5037:84:9"},{"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"5127:651:9","text":"  @dev registers a ClaimIssuer contract as trusted claim issuer.\n  Requires that a ClaimIssuer contract doesn't already exist\n  Requires that the claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  Requires that there is no more than 50 Trusted issuers\n  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerAdded` event"},"functionSelector":"9f63ea98","id":1631,"implemented":false,"kind":"function","modifiers":[],"name":"addTrustedIssuer","nameLocation":"5792:16:9","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"5822:14:9","nodeType":"VariableDeclaration","scope":1631,"src":"5809:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1624,"nodeType":"UserDefinedTypeName","pathNode":{"id":1623,"name":"IClaimIssuer","nameLocations":["5809:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5809:12:9"},"referencedDeclaration":59,"src":"5809:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"_claimTopics","nameLocation":"5857:12:9","nodeType":"VariableDeclaration","scope":1631,"src":"5838:31:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1627,"nodeType":"ArrayTypeName","src":"5838:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5808:62:9"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"5879:0:9"},"scope":1695,"src":"5783:97:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"5886:353:9","text":"  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n  Requires that the claim issuer contract to be registered first\n  @param _trustedIssuer the claim issuer to remove.\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerRemoved` event"},"functionSelector":"b93d28eb","id":1638,"implemented":false,"kind":"function","modifiers":[],"name":"removeTrustedIssuer","nameLocation":"6253:19:9","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"6286:14:9","nodeType":"VariableDeclaration","scope":1638,"src":"6273:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1634,"nodeType":"UserDefinedTypeName","pathNode":{"id":1633,"name":"IClaimIssuer","nameLocations":["6273:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6273:12:9"},"referencedDeclaration":59,"src":"6273:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"6272:29:9"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[],"src":"6310:0:9"},"scope":1695,"src":"6244:67:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"6317:591:9","text":"  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n  Requires that this ClaimIssuer contract already exists in the registry\n  Requires that the provided claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  @param _trustedIssuer the claim issuer to update.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `ClaimTopicsUpdated` event"},"functionSelector":"04bc7e84","id":1648,"implemented":false,"kind":"function","modifiers":[],"name":"updateIssuerClaimTopics","nameLocation":"6922:23:9","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"6959:14:9","nodeType":"VariableDeclaration","scope":1648,"src":"6946:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1641,"nodeType":"UserDefinedTypeName","pathNode":{"id":1640,"name":"IClaimIssuer","nameLocations":["6946:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6946:12:9"},"referencedDeclaration":59,"src":"6946:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"_claimTopics","nameLocation":"6994:12:9","nodeType":"VariableDeclaration","scope":1648,"src":"6975:31:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"6975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ArrayTypeName","src":"6975:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6945:62:9"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"7016:0:9"},"scope":1695,"src":"6913:104:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"7023:138:9","text":"  @dev Function for getting all the trusted claim issuers stored.\n  @return array of all claim issuers registered."},"functionSelector":"d9dd24c5","id":1656,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedIssuers","nameLocation":"7175:17:9","nodeType":"FunctionDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"7192:2:9"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1656,"src":"7218:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"IClaimIssuer","nameLocations":["7218:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"7218:12:9"},"referencedDeclaration":59,"src":"7218:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1653,"nodeType":"ArrayTypeName","src":"7218:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"}],"src":"7217:23:9"},"scope":1695,"src":"7166:75:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"7247:271:9","text":"  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n  @param claimTopic the claim topic to get the trusted issuers for.\n  @return array of all claim issuer addresses that are allowed for the given claim topic."},"functionSelector":"52c111d1","id":1666,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedIssuersForClaimTopic","nameLocation":"7532:30:9","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"claimTopic","nameLocation":"7571:10:9","nodeType":"VariableDeclaration","scope":1666,"src":"7563:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7563:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7562:20:9"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"7606:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":1662,"nodeType":"UserDefinedTypeName","pathNode":{"id":1661,"name":"IClaimIssuer","nameLocations":["7606:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"7606:12:9"},"referencedDeclaration":59,"src":"7606:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1663,"nodeType":"ArrayTypeName","src":"7606:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"}],"src":"7605:23:9"},"scope":1695,"src":"7523:106:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"7635:197:9","text":"  @dev Checks if the ClaimIssuer contract is trusted\n  @param _issuer the address of the ClaimIssuer contract\n  @return true if the issuer is trusted, false otherwise."},"functionSelector":"ef2ed1a4","id":1674,"implemented":false,"kind":"function","modifiers":[],"name":"isTrustedIssuer","nameLocation":"7846:15:9","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"_issuer","nameLocation":"7870:7:9","nodeType":"VariableDeclaration","scope":1674,"src":"7862:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"7862:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7861:17:9"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1674,"src":"7902:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1671,"name":"bool","nodeType":"ElementaryTypeName","src":"7902:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7901:6:9"},"scope":1695,"src":"7837:71:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"7914:333:9","text":"  @dev Function for getting all the claim topic of trusted claim issuer\n  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n  @param _trustedIssuer the trusted issuer concerned.\n  @return The set of claim topics that the trusted issuer is allowed to emit"},"functionSelector":"c28fb278","id":1684,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedIssuerClaimTopics","nameLocation":"8261:27:9","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"8302:14:9","nodeType":"VariableDeclaration","scope":1684,"src":"8289:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":1677,"nodeType":"UserDefinedTypeName","pathNode":{"id":1676,"name":"IClaimIssuer","nameLocations":["8289:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"8289:12:9"},"referencedDeclaration":59,"src":"8289:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"8288:29:9"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"8341:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"8341:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ArrayTypeName","src":"8341:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8340:18:9"},"scope":1695,"src":"8252:107:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"8365:383:9","text":"  @dev Function for checking if the trusted claim issuer is allowed\n  to emit a certain claim topic\n  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n  @return true if the issuer is trusted for this claim topic."},"functionSelector":"34a89987","id":1694,"implemented":false,"kind":"function","modifiers":[],"name":"hasClaimTopic","nameLocation":"8762:13:9","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"_issuer","nameLocation":"8784:7:9","nodeType":"VariableDeclaration","scope":1694,"src":"8776:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"8776:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"_claimTopic","nameLocation":"8801:11:9","nodeType":"VariableDeclaration","scope":1694,"src":"8793:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"8793:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8775:38:9"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"8837:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1691,"name":"bool","nodeType":"ElementaryTypeName","src":"8837:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8836:6:9"},"scope":1695,"src":"8753:90:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1696,"src":"3912:4933:9","usedErrors":[]}],"src":"3818:5028:9"},"id":9},"contracts/registry/storage/TIRStorage.sol":{"ast":{"absolutePath":"contracts/registry/storage/TIRStorage.sol","exportedSymbols":{"IClaimIssuer":[59],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"TIRStorage":[1722]},"id":1723,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1697,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3818:23:10"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","file":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","id":1698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1723,"sourceUnit":60,"src":"3843:67:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"TIRStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1722,"linearizedBaseContracts":[1722],"name":"TIRStorage","nameLocation":"3921:10:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"3938:71:10","text":"@dev Array containing all TrustedIssuers identity contract address."},"id":1703,"mutability":"mutable","name":"_trustedIssuers","nameLocation":"4038:15:10","nodeType":"VariableDeclaration","scope":1722,"src":"4014:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":1701,"nodeType":"UserDefinedTypeName","pathNode":{"id":1700,"name":"IClaimIssuer","nameLocations":["4014:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4014:12:10"},"referencedDeclaration":59,"src":"4014:12:10","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1702,"nodeType":"ArrayTypeName","src":"4014:14:10","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"4060:84:10","text":"@dev Mapping between a trusted issuer address and its corresponding claimTopics."},"id":1709,"mutability":"mutable","name":"_trustedIssuerClaimTopics","nameLocation":"4188:25:10","nodeType":"VariableDeclaration","scope":1722,"src":"4149:64:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":1708,"keyType":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"4157:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4149:29:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"4168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ArrayTypeName","src":"4168:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"4220:78:10","text":"@dev Mapping between a claim topic and the allowed trusted issuers for it."},"id":1716,"mutability":"mutable","name":"_claimTopicsToTrustedIssuers","nameLocation":"4347:28:10","nodeType":"VariableDeclaration","scope":1722,"src":"4303:72:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[])"},"typeName":{"id":1715,"keyType":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4303:34:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$","typeString":"mapping(uint256 => contract IClaimIssuer[])"},"valueType":{"baseType":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"IClaimIssuer","nameLocations":["4322:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4322:12:10"},"referencedDeclaration":59,"src":"4322:12:10","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":1714,"nodeType":"ArrayTypeName","src":"4322:14:10","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"4382:174:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."},"id":1721,"mutability":"mutable","name":"__gap","nameLocation":"4581:5:10","nodeType":"VariableDeclaration","scope":1722,"src":"4561:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4561:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1720,"length":{"hexValue":"3439","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4569:2:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"4561:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1723,"src":"3912:677:10","usedErrors":[]}],"src":"3818:772:10"},"id":10},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2395],"ContextUpgradeable":[2065],"Initializable":[2023],"OwnableUpgradeable":[1854]},"id":1855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1724,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:11"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1725,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1855,"sourceUnit":2066,"src":"127:41:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1726,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1855,"sourceUnit":2024,"src":"169:42:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1728,"name":"Initializable","nameLocations":["748:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2023,"src":"748:13:11"},"id":1729,"nodeType":"InheritanceSpecifier","src":"748:13:11"},{"baseName":{"id":1730,"name":"ContextUpgradeable","nameLocations":["763:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":2065,"src":"763:18:11"},"id":1731,"nodeType":"InheritanceSpecifier","src":"763:18:11"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"213:494:11","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1854,"linearizedBaseContracts":[1854,2065,2023],"name":"OwnableUpgradeable","nameLocation":"726:18:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1733,"mutability":"mutable","name":"_owner","nameLocation":"804:6:11","nodeType":"VariableDeclaration","scope":1854,"src":"788:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1739,"name":"OwnershipTransferred","nameLocation":"823:20:11","nodeType":"EventDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:11","nodeType":"VariableDeclaration","scope":1739,"src":"844:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1737,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:11","nodeType":"VariableDeclaration","scope":1739,"src":"875:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:11"},"src":"817:84:11"},{"body":{"id":1748,"nodeType":"Block","src":"1055:43:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1745,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"1065:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"1065:26:11"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"907:91:11","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1749,"implemented":true,"kind":"function","modifiers":[{"id":1743,"kind":"modifierInvocation","modifierName":{"id":1742,"name":"onlyInitializing","nameLocations":["1038:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1968,"src":"1038:16:11"},"nodeType":"ModifierInvocation","src":"1038:16:11"}],"name":"__Ownable_init","nameLocation":"1012:14:11","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[],"src":"1026:2:11"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"1055:0:11"},"scope":1854,"src":"1003:95:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"1166:49:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1755,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"1195:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1754,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"1176:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"1176:32:11"}]},"id":1760,"implemented":true,"kind":"function","modifiers":[{"id":1752,"kind":"modifierInvocation","modifierName":{"id":1751,"name":"onlyInitializing","nameLocations":["1149:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1968,"src":"1149:16:11"},"nodeType":"ModifierInvocation","src":"1149:16:11"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:11","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"1137:2:11"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"1166:0:11"},"scope":1854,"src":"1104:111:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1767,"nodeType":"Block","src":"1324:41:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1763,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1334:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"1334:13:11"},{"id":1766,"nodeType":"PlaceholderStatement","src":"1357:1:11"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"1221:77:11","text":" @dev Throws if called by any account other than the owner."},"id":1768,"name":"onlyOwner","nameLocation":"1312:9:11","nodeType":"ModifierDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"1321:2:11"},"src":"1303:62:11","virtual":false,"visibility":"internal"},{"body":{"id":1776,"nodeType":"Block","src":"1496:30:11","statements":[{"expression":{"id":1774,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1513:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1773,"id":1775,"nodeType":"Return","src":"1506:13:11"}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"1371:65:11","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:11","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"1455:2:11"},"returnParameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"1487:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:11"},"scope":1854,"src":"1441:85:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1790,"nodeType":"Block","src":"1644:85:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1782,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"1662:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1784,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"1673:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"1654:68:11"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"1532:62:11","text":" @dev Throws if the sender is not the owner."},"id":1791,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:11","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"1619:2:11"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"1644:0:11"},"scope":1854,"src":"1599:130:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1804,"nodeType":"Block","src":"2118:47:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:11","typeDescriptions":{}}},"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1797,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"2128:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"2128:30:11"}]},"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"1735:324:11","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1805,"implemented":true,"kind":"function","modifiers":[{"id":1795,"kind":"modifierInvocation","modifierName":{"id":1794,"name":"onlyOwner","nameLocations":["2108:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"2108:9:11"},"nodeType":"ModifierInvocation","src":"2108:9:11"}],"name":"renounceOwnership","nameLocation":"2073:17:11","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[],"src":"2090:2:11"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[],"src":"2118:0:11"},"scope":1854,"src":"2064:101:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1827,"nodeType":"Block","src":"2384:128:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1814,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2402:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:11","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1822,"nodeType":"ExpressionStatement","src":"2394:73:11"},{"expression":{"arguments":[{"id":1824,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2496:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1823,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"2477:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1826,"nodeType":"ExpressionStatement","src":"2477:28:11"}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"2171:138:11","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1828,"implemented":true,"kind":"function","modifiers":[{"id":1811,"kind":"modifierInvocation","modifierName":{"id":1810,"name":"onlyOwner","nameLocations":["2374:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"2374:9:11"},"nodeType":"ModifierInvocation","src":"2374:9:11"}],"name":"transferOwnership","nameLocation":"2323:17:11","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:11","nodeType":"VariableDeclaration","scope":1828,"src":"2341:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:11"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"2384:0:11"},"scope":1854,"src":"2314:198:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1847,"nodeType":"Block","src":"2729:124:11","statements":[{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:11","nodeType":"VariableDeclaration","scope":1847,"src":"2739:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1837,"initialValue":{"id":1836,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2758:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:11"},{"expression":{"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1838,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2774:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1839,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2783:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1841,"nodeType":"ExpressionStatement","src":"2774:17:11"},{"eventCall":{"arguments":[{"id":1843,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2827:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1844,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2837:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1842,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2806:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"EmitStatement","src":"2801:45:11"}]},"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"2518:143:11","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:11","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:11","nodeType":"VariableDeclaration","scope":1848,"src":"2694:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:11"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[],"src":"2729:0:11"},"scope":1854,"src":"2666:187:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"2859:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1853,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:11","nodeType":"VariableDeclaration","scope":1854,"src":"3118:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"length":{"hexValue":"3439","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1855,"src":"708:2438:11","usedErrors":[]}],"src":"102:3045:11"},"id":11},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2395],"Initializable":[2023]},"id":2024,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1856,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:12"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":2396,"src":"138:44:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"184:2209:12","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":2023,"linearizedBaseContracts":[2023],"name":"Initializable","nameLocation":"2412:13:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"2432:109:12","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":1861,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:12","nodeType":"VariableDeclaration","scope":2023,"src":"2546:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1860,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"2579:91:12","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1864,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:12","nodeType":"VariableDeclaration","scope":2023,"src":"2675:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1863,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"2708:90:12","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":1869,"name":"Initialized","nameLocation":"2809:11:12","nodeType":"EventDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:12","nodeType":"VariableDeclaration","scope":1869,"src":"2821:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1866,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:12"},"src":"2803:33:12"},{"body":{"id":1924,"nodeType":"Block","src":"3269:483:12","statements":[{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:12","nodeType":"VariableDeclaration","scope":1924,"src":"3279:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1872,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1876,"initialValue":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:12","subExpression":{"id":1874,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3302:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3347:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"3365:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:12","subExpression":{"arguments":[{"arguments":[{"id":1888,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$2023","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$2023","typeString":"contract Initializable"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:12","typeDescriptions":{}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1884,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"3388:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2395_$","typeString":"type(library AddressUpgradeable)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"3388:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"3436:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"3325:201:12"},{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"3536:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1904,"nodeType":"ExpressionStatement","src":"3536:16:12"},{"condition":{"id":1905,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3566:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1911,"nodeType":"IfStatement","src":"3562:65:12","trueBody":{"id":1910,"nodeType":"Block","src":"3582:45:12","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1906,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3596:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1909,"nodeType":"ExpressionStatement","src":"3596:20:12"}]}},{"id":1912,"nodeType":"PlaceholderStatement","src":"3636:1:12"},{"condition":{"id":1913,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3651:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1923,"nodeType":"IfStatement","src":"3647:99:12","trueBody":{"id":1922,"nodeType":"Block","src":"3667:79:12","statements":[{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1914,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3681:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"ExpressionStatement","src":"3681:21:12"},{"eventCall":{"arguments":[{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1918,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3721:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"EmitStatement","src":"3716:19:12"}]}}]},"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"2842:399:12","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":1925,"name":"initializer","nameLocation":"3255:11:12","nodeType":"ModifierDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[],"src":"3266:2:12"},"src":"3246:506:12","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"4863:255:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:12","subExpression":{"id":1931,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4882:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"4899:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1934,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"4914:7:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1939,"nodeType":"ExpressionStatement","src":"4873:99:12"},{"expression":{"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1940,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"4982:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1941,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"4997:7:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1943,"nodeType":"ExpressionStatement","src":"4982:22:12"},{"expression":{"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1944,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5014:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1947,"nodeType":"ExpressionStatement","src":"5014:20:12"},{"id":1948,"nodeType":"PlaceholderStatement","src":"5044:1:12"},{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1949,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5055:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"nodeType":"ExpressionStatement","src":"5055:21:12"},{"eventCall":{"arguments":[{"id":1954,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"5103:7:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1953,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5091:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"EmitStatement","src":"5086:25:12"}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"3758:1062:12","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1958,"name":"reinitializer","nameLocation":"4834:13:12","nodeType":"ModifierDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"version","nameLocation":"4854:7:12","nodeType":"VariableDeclaration","scope":1958,"src":"4848:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1927,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:12"},"src":"4825:293:12","virtual":false,"visibility":"internal"},{"body":{"id":1967,"nodeType":"Block","src":"5356:97:12","statements":[{"expression":{"arguments":[{"id":1962,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5374:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1961,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"5366:69:12"},{"id":1966,"nodeType":"PlaceholderStatement","src":"5445:1:12"}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"5124:199:12","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1968,"name":"onlyInitializing","nameLocation":"5337:16:12","nodeType":"ModifierDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[],"src":"5353:2:12"},"src":"5328:125:12","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"5988:231:12","statements":[{"expression":{"arguments":[{"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:12","subExpression":{"id":1973,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"6007:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1972,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"5998:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"6078:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1980,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:12","memberName":"max","nodeType":"MemberAccess","src":"6094:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"nodeType":"IfStatement","src":"6074:139:12","trueBody":{"id":2001,"nodeType":"Block","src":"6111:102:12","statements":[{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1985,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"6125:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1987,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:12","memberName":"max","nodeType":"MemberAccess","src":"6140:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1992,"nodeType":"ExpressionStatement","src":"6125:30:12"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1995,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:12","memberName":"max","nodeType":"MemberAccess","src":"6186:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1993,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"6174:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"EmitStatement","src":"6169:33:12"}]}}]},"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"5459:475:12","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:12","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[],"src":"5968:2:12"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[],"src":"5988:0:12"},"scope":2023,"src":"5939:280:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2012,"nodeType":"Block","src":"6393:36:12","statements":[{"expression":{"id":2010,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"6410:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2009,"id":2011,"nodeType":"Return","src":"6403:19:12"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"6225:99:12","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:12","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"6360:2:12"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"6386:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2007,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:12"},"scope":2023,"src":"6329:100:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"6601:37:12","statements":[{"expression":{"id":2019,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"6618:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2018,"id":2020,"nodeType":"Return","src":"6611:20:12"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"6435:105:12","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:12","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[],"src":"6569:2:12"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"6595:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2016,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:12"},"scope":2023,"src":"6545:93:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2024,"src":"2394:4246:12","usedErrors":[]}],"src":"113:6528:12"},"id":12},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2395]},"id":2396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2067,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2395,"linearizedBaseContracts":[2395],"name":"AddressUpgradeable","nameLocation":"202:18:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2082,"nodeType":"Block","src":"1489:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2076,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1713:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:13","memberName":"code","nodeType":"MemberAccess","src":"1713:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:13","memberName":"length","nodeType":"MemberAccess","src":"1713:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2075,"id":2081,"nodeType":"Return","src":"1706:30:13"}]},"documentation":{"id":2069,"nodeType":"StructuredDocumentation","src":"227:1191:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2083,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"account","nameLocation":"1451:7:13","nodeType":"VariableDeclaration","scope":2083,"src":"1443:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:13"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"1483:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2073,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:13"},"scope":2395,"src":"1423:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"2729:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2094,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2395","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2395","typeString":"library AddressUpgradeable"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:13","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:13","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2772:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"2739:73:13"},{"assignments":[2103,null],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"success","nameLocation":"2829:7:13","nodeType":"VariableDeclaration","scope":2116,"src":"2824:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2102,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2110,"initialValue":{"arguments":[{"hexValue":"","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2104,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2842:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:13","memberName":"call","nodeType":"MemberAccess","src":"2842:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2106,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2864:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:13"},{"expression":{"arguments":[{"id":2112,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"2893:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"2885:78:13"}]},"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"1749:904:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:13","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:13","nodeType":"VariableDeclaration","scope":2117,"src":"2677:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"amount","nameLocation":"2712:6:13","nodeType":"VariableDeclaration","scope":2117,"src":"2704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:13"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"2729:0:13"},"scope":2395,"src":"2658:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"3801:96:13","statements":[{"expression":{"arguments":[{"id":2128,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3840:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2129,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3848:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2127,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2175,2219],"referencedDeclaration":2219,"src":"3818:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2126,"id":2133,"nodeType":"Return","src":"3811:79:13"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"2976:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:13","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"target","nameLocation":"3742:6:13","nodeType":"VariableDeclaration","scope":2135,"src":"3734:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"data","nameLocation":"3763:4:13","nodeType":"VariableDeclaration","scope":2135,"src":"3750:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:13"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"3787:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2124,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:13"},"scope":2395,"src":"3712:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"4266:76:13","statements":[{"expression":{"arguments":[{"id":2148,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4305:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2149,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4313:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2151,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"4322:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2147,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2175,2219],"referencedDeclaration":2219,"src":"4283:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2146,"id":2153,"nodeType":"Return","src":"4276:59:13"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"3903:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:13","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"target","nameLocation":"4158:6:13","nodeType":"VariableDeclaration","scope":2155,"src":"4150:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"data","nameLocation":"4187:4:13","nodeType":"VariableDeclaration","scope":2155,"src":"4174:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:13","nodeType":"VariableDeclaration","scope":2155,"src":"4201:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2141,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:13"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2155,"src":"4252:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:13"},"scope":2395,"src":"4119:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"4817:111:13","statements":[{"expression":{"arguments":[{"id":2168,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4856:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2169,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4864:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2167,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2175,2219],"referencedDeclaration":2219,"src":"4834:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2166,"id":2173,"nodeType":"Return","src":"4827:94:13"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"4348:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:13","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"target","nameLocation":"4743:6:13","nodeType":"VariableDeclaration","scope":2175,"src":"4735:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"data","nameLocation":"4764:4:13","nodeType":"VariableDeclaration","scope":2175,"src":"4751:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"value","nameLocation":"4778:5:13","nodeType":"VariableDeclaration","scope":2175,"src":"4770:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:13"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"4803:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:13"},"scope":2395,"src":"4704:224:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"5355:267:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2192,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2395","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2395","typeString":"library AddressUpgradeable"}],"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:13","typeDescriptions":{}}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:13","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5398:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"ExpressionStatement","src":"5365:81:13"},{"assignments":[2201,2203],"declarations":[{"constant":false,"id":2201,"mutability":"mutable","name":"success","nameLocation":"5462:7:13","nodeType":"VariableDeclaration","scope":2218,"src":"5457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:13","nodeType":"VariableDeclaration","scope":2218,"src":"5471:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[{"id":2208,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"5524:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2204,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5498:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:13","memberName":"call","nodeType":"MemberAccess","src":"5498:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5517:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:13"},{"expression":{"arguments":[{"id":2212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5573:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"5581:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2214,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5590:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2215,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5602:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2211,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5546:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2188,"id":2217,"nodeType":"Return","src":"5539:76:13"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"4934:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:13","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"target","nameLocation":"5224:6:13","nodeType":"VariableDeclaration","scope":2219,"src":"5216:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"data","nameLocation":"5253:4:13","nodeType":"VariableDeclaration","scope":2219,"src":"5240:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"value","nameLocation":"5275:5:13","nodeType":"VariableDeclaration","scope":2219,"src":"5267:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:13","nodeType":"VariableDeclaration","scope":2219,"src":"5290:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2183,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:13"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"5341:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2186,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:13"},"scope":2395,"src":"5176:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"5899:97:13","statements":[{"expression":{"arguments":[{"id":2230,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"5935:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"5943:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2229,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2236,2265],"referencedDeclaration":2265,"src":"5916:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2228,"id":2234,"nodeType":"Return","src":"5909:80:13"}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"5628:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:13","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"target","nameLocation":"5835:6:13","nodeType":"VariableDeclaration","scope":2236,"src":"5827:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"data","nameLocation":"5856:4:13","nodeType":"VariableDeclaration","scope":2236,"src":"5843:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2223,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:13"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"5885:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:13"},"scope":2395,"src":"5799:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2264,"nodeType":"Block","src":"6338:168:13","statements":[{"assignments":[2249,2251],"declarations":[{"constant":false,"id":2249,"mutability":"mutable","name":"success","nameLocation":"6354:7:13","nodeType":"VariableDeclaration","scope":2264,"src":"6349:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2248,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:13","nodeType":"VariableDeclaration","scope":2264,"src":"6363:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2250,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2256,"initialValue":{"arguments":[{"id":2254,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"6408:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2252,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"6390:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:13"},{"expression":{"arguments":[{"id":2258,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"6457:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2259,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"6465:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2260,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"6474:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2261,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"6486:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2257,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"6430:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2247,"id":2263,"nodeType":"Return","src":"6423:76:13"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"6002:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2265,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:13","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"target","nameLocation":"6225:6:13","nodeType":"VariableDeclaration","scope":2265,"src":"6217:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"data","nameLocation":"6254:4:13","nodeType":"VariableDeclaration","scope":2265,"src":"6241:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:13","nodeType":"VariableDeclaration","scope":2265,"src":"6268:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2242,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:13"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2265,"src":"6324:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:13"},"scope":2395,"src":"6180:326:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2281,"nodeType":"Block","src":"6782:101:13","statements":[{"expression":{"arguments":[{"id":2276,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"6820:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6828:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2275,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2282,2311],"referencedDeclaration":2311,"src":"6799:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2274,"id":2280,"nodeType":"Return","src":"6792:84:13"}]},"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"6512:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:13","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"target","nameLocation":"6723:6:13","nodeType":"VariableDeclaration","scope":2282,"src":"6715:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"data","nameLocation":"6744:4:13","nodeType":"VariableDeclaration","scope":2282,"src":"6731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2269,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:13"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"6768:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2272,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:13"},"scope":2395,"src":"6685:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2310,"nodeType":"Block","src":"7224:170:13","statements":[{"assignments":[2295,2297],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"success","nameLocation":"7240:7:13","nodeType":"VariableDeclaration","scope":2310,"src":"7235:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2294,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:13","nodeType":"VariableDeclaration","scope":2310,"src":"7249:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2296,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2302,"initialValue":{"arguments":[{"id":2300,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7296:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2298,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"7276:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:13"},{"expression":{"arguments":[{"id":2304,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"7345:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2305,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"7353:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2306,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"7362:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2307,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7374:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2303,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"7318:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2293,"id":2309,"nodeType":"Return","src":"7311:76:13"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"6889:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2311,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:13","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"target","nameLocation":"7116:6:13","nodeType":"VariableDeclaration","scope":2311,"src":"7108:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"data","nameLocation":"7145:4:13","nodeType":"VariableDeclaration","scope":2311,"src":"7132:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:13","nodeType":"VariableDeclaration","scope":2311,"src":"7159:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2288,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:13"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2311,"src":"7210:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2291,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:13"},"scope":2395,"src":"7069:325:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"7876:434:13","statements":[{"condition":{"id":2325,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7890:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2347,"nodeType":"Block","src":"8246:58:13","statements":[{"expression":{"arguments":[{"id":2343,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"8268:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2344,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"8280:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2342,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8260:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2346,"nodeType":"ExpressionStatement","src":"8260:33:13"}]},"id":2348,"nodeType":"IfStatement","src":"7886:418:13","trueBody":{"id":2341,"nodeType":"Block","src":"7899:341:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2326,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"7917:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:13","memberName":"length","nodeType":"MemberAccess","src":"7917:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"7913:286:13","trueBody":{"id":2337,"nodeType":"Block","src":"7941:258:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2332,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"8143:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2331,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"8132:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2330,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2336,"nodeType":"ExpressionStatement","src":"8124:60:13"}]}},{"expression":{"id":2339,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"8219:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2324,"id":2340,"nodeType":"Return","src":"8212:17:13"}]}}]},"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"7400:277:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:13","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"target","nameLocation":"7735:6:13","nodeType":"VariableDeclaration","scope":2350,"src":"7727:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"success","nameLocation":"7756:7:13","nodeType":"VariableDeclaration","scope":2350,"src":"7751:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2315,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:13","nodeType":"VariableDeclaration","scope":2350,"src":"7773:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2317,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:13","nodeType":"VariableDeclaration","scope":2350,"src":"7806:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:13"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2350,"src":"7862:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2322,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:13"},"scope":2395,"src":"7682:628:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"8691:135:13","statements":[{"condition":{"id":2362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"8705:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2371,"nodeType":"Block","src":"8762:58:13","statements":[{"expression":{"arguments":[{"id":2367,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"8784:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2368,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8796:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2366,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8776:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"8776:33:13"}]},"id":2372,"nodeType":"IfStatement","src":"8701:119:13","trueBody":{"id":2365,"nodeType":"Block","src":"8714:42:13","statements":[{"expression":{"id":2363,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"8735:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2361,"id":2364,"nodeType":"Return","src":"8728:17:13"}]}}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"8316:210:13","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:13","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"success","nameLocation":"8571:7:13","nodeType":"VariableDeclaration","scope":2374,"src":"8566:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2352,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:13","nodeType":"VariableDeclaration","scope":2374,"src":"8588:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2354,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:13","nodeType":"VariableDeclaration","scope":2374,"src":"8621:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2356,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:13"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2374,"src":"8677:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2359,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:13"},"scope":2395,"src":"8531:295:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2393,"nodeType":"Block","src":"8915:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2381,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8991:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:13","memberName":"length","nodeType":"MemberAccess","src":"8991:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2391,"nodeType":"Block","src":"9321:45:13","statements":[{"expression":{"arguments":[{"id":2388,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"9342:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2387,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"9335:20:13"}]},"id":2392,"nodeType":"IfStatement","src":"8987:379:13","trueBody":{"id":2386,"nodeType":"Block","src":"9014:301:13","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:13"},"nodeType":"YulFunctionCall","src":"9213:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:13"},"nodeType":"YulFunctionCall","src":"9254:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:13"},"nodeType":"YulFunctionCall","src":"9247:44:13"},"nodeType":"YulExpressionStatement","src":"9247:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2376,"isOffset":false,"isSlot":false,"src":"9219:10:13","valueSize":1},{"declaration":2376,"isOffset":false,"isSlot":false,"src":"9262:10:13","valueSize":1}],"id":2385,"nodeType":"InlineAssembly","src":"9163:142:13"}]}}]},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:13","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:13","nodeType":"VariableDeclaration","scope":2394,"src":"8849:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2375,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:13","nodeType":"VariableDeclaration","scope":2394,"src":"8874:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2377,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:13"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[],"src":"8915:0:13"},"scope":2395,"src":"8832:540:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2396,"src":"194:9180:13","usedErrors":[]}],"src":"101:9274:13"},"id":13},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2395],"ContextUpgradeable":[2065],"Initializable":[2023]},"id":2066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2025,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2066,"sourceUnit":2024,"src":"110:42:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2028,"name":"Initializable","nameLocations":["691:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2023,"src":"691:13:14"},"id":2029,"nodeType":"InheritanceSpecifier","src":"691:13:14"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"154:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2065,"linearizedBaseContracts":[2065,2023],"name":"ContextUpgradeable","nameLocation":"669:18:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2034,"nodeType":"Block","src":"763:7:14","statements":[]},"id":2035,"implemented":true,"kind":"function","modifiers":[{"id":2032,"kind":"modifierInvocation","modifierName":{"id":2031,"name":"onlyInitializing","nameLocations":["746:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":1968,"src":"746:16:14"},"nodeType":"ModifierInvocation","src":"746:16:14"}],"name":"__Context_init","nameLocation":"720:14:14","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"734:2:14"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"763:0:14"},"scope":2065,"src":"711:59:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"838:7:14","statements":[]},"id":2041,"implemented":true,"kind":"function","modifiers":[{"id":2038,"kind":"modifierInvocation","modifierName":{"id":2037,"name":"onlyInitializing","nameLocations":["821:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":1968,"src":"821:16:14"},"nodeType":"ModifierInvocation","src":"821:16:14"}],"name":"__Context_init_unchained","nameLocation":"785:24:14","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"809:2:14"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[],"src":"838:0:14"},"scope":2065,"src":"776:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"912:34:14","statements":[{"expression":{"expression":{"id":2046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:14","memberName":"sender","nodeType":"MemberAccess","src":"929:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2045,"id":2048,"nodeType":"Return","src":"922:17:14"}]},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:14","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[],"src":"869:2:14"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:14"},"scope":2065,"src":"850:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2058,"nodeType":"Block","src":"1019:32:14","statements":[{"expression":{"expression":{"id":2055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:14","memberName":"data","nodeType":"MemberAccess","src":"1036:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2054,"id":2057,"nodeType":"Return","src":"1029:15:14"}]},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:14","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"969:2:14"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"1003:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:14"},"scope":2065,"src":"952:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"1057:254:14","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2064,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:14","nodeType":"VariableDeclaration","scope":2065,"src":"1316:25:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"length":{"hexValue":"3530","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2066,"src":"651:693:14","usedErrors":[]}],"src":"86:1259:14"},"id":14}},"contracts":{"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol":{"IClaimIssuer":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes","name":"signature","type":"bytes"}],"name":"ClaimRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_keyType","type":"uint256"}],"name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"sig","type":"bytes"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"}],"name":"getRecoveredAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"isClaimRevoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IIdentity","name":"_identity","type":"address"},{"internalType":"uint256","name":"claimTopic","type":"uint256"},{"internalType":"bytes","name":"sig","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"isClaimValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"},{"internalType":"address","name":"_identity","type":"address"}],"name":"revokeClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"revokeClaimBySignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"ClaimRevoked(bytes)":{"details":"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."}},"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"addKey(bytes32,uint256,uint256)":{"details":"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"details":"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"},"execute(address,uint256,bytes)":{"details":"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"},"getClaim(bytes32)":{"details":"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"getClaimIdsByTopic(uint256)":{"details":"Returns an array of claim IDs by topic."},"getKey(bytes32)":{"details":"Returns the full key data, if present in the identity."},"getKeyPurposes(bytes32)":{"details":"Returns the list of purposes associated with a key."},"getKeysByPurpose(uint256)":{"details":"Returns an array of public key bytes32 held by this identity."},"getRecoveredAddress(bytes,bytes32)":{"details":"returns the address that signed the given data","params":{"dataHash":"the data that was signed returns the address that signed dataHash and created the signature sig","sig":"the signature of the data"}},"isClaimRevoked(bytes)":{"details":"Returns revocation status of a claim.","params":{"_sig":"the signature of the claim"},"returns":{"_0":"isRevoked true if the claim is revoked and false otherwise"}},"isClaimValid(address,uint256,bytes,bytes)":{"details":"Checks if a claim is valid.","params":{"_identity":"the identity contract related to the claim","claimTopic":"the claim topic of the claim","data":"the data field of the claim","sig":"the signature of the claim"},"returns":{"_0":"claimValid true if the claim is valid, false otherwise"}},"keyHasPurpose(bytes32,uint256)":{"details":"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"removeClaim(bytes32)":{"details":"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"removeKey(bytes32,uint256)":{"details":"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"revokeClaim(bytes32,address)":{"details":"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.","params":{"_claimId":"the id of the claim","_identity":"the address of the identity contract"},"returns":{"_0":"isRevoked true when the claim is revoked"}},"revokeClaimBySignature(bytes)":{"details":"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.","params":{"signature":"the signature of the claim"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","getRecoveredAddress(bytes,bytes32)":"c3b129e3","isClaimRevoked(bytes)":"2646b264","isClaimValid(address,uint256,bytes,bytes)":"c0969a6e","keyHasPurpose(bytes32,uint256)":"d202158d","removeClaim(bytes32)":"4eee424a","removeKey(bytes32,uint256)":"53d413c5","revokeClaim(bytes32,address)":"73c33708","revokeClaimBySignature(bytes)":"9f7f9edd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"revokeClaim(bytes32,address)":{"notice":"will fetch the claim from the identity contract (unsafe)."}},"version":1}}},"@onchain-id/solidity/contracts/interface/IERC734.sol":{"IERC734":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_keyType","type":"uint256"}],"name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"interface of the ERC734 (Key Holder) standard as defined in the EIP.","events":{"Approved(uint256,bool)":{"details":"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."},"Executed(uint256,address,uint256,bytes)":{"details":"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."},"ExecutionFailed(uint256,address,uint256,bytes)":{"details":"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"},"ExecutionRequested(uint256,address,uint256,bytes)":{"details":"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."},"KeyAdded(bytes32,uint256,uint256)":{"details":"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."},"KeyRemoved(bytes32,uint256,uint256)":{"details":"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."}},"kind":"dev","methods":{"addKey(bytes32,uint256,uint256)":{"details":"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"details":"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"},"execute(address,uint256,bytes)":{"details":"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"},"getKey(bytes32)":{"details":"Returns the full key data, if present in the identity."},"getKeyPurposes(bytes32)":{"details":"Returns the list of purposes associated with a key."},"getKeysByPurpose(uint256)":{"details":"Returns an array of public key bytes32 held by this identity."},"keyHasPurpose(bytes32,uint256)":{"details":"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"removeKey(bytes32,uint256)":{"details":"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","keyHasPurpose(bytes32,uint256)":"d202158d","removeKey(bytes32,uint256)":"53d413c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@onchain-id/solidity/contracts/interface/IERC735.sol":{"IERC735":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"interface of the ERC735 (Claim Holder) standard as defined in the EIP.","events":{"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)":{"details":"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."},"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)":{"details":"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."},"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)":{"details":"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."}},"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"getClaim(bytes32)":{"details":"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"getClaimIdsByTopic(uint256)":{"details":"Returns an array of claim IDs by topic."},"removeClaim(bytes32)":{"details":"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","removeClaim(bytes32)":"4eee424a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@onchain-id/solidity/contracts/interface/IIdentity.sol":{"IIdentity":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_keyType","type":"uint256"}],"name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"addKey(bytes32,uint256,uint256)":{"details":"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"details":"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"},"execute(address,uint256,bytes)":{"details":"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"},"getClaim(bytes32)":{"details":"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"getClaimIdsByTopic(uint256)":{"details":"Returns an array of claim IDs by topic."},"getKey(bytes32)":{"details":"Returns the full key data, if present in the identity."},"getKeyPurposes(bytes32)":{"details":"Returns the list of purposes associated with a key."},"getKeysByPurpose(uint256)":{"details":"Returns an array of public key bytes32 held by this identity."},"keyHasPurpose(bytes32,uint256)":{"details":"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"removeClaim(bytes32)":{"details":"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"removeKey(bytes32,uint256)":{"details":"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","keyHasPurpose(bytes32,uint256)":"d202158d","removeClaim(bytes32)":"4eee424a","removeKey(bytes32,uint256)":"53d413c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/registry/implementation/TrustedIssuersRegistry.sol":{"TrustedIssuersRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"}],"name":"ClaimTopicsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"}],"name":"TrustedIssuerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"}],"name":"TrustedIssuerRemoved","type":"event"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"},{"internalType":"uint256[]","name":"_claimTopics","type":"uint256[]"}],"name":"addTrustedIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"}],"name":"getTrustedIssuerClaimTopics","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedIssuers","outputs":[{"internalType":"contract IClaimIssuer[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"claimTopic","type":"uint256"}],"name":"getTrustedIssuersForClaimTopic","outputs":[{"internalType":"contract IClaimIssuer[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"},{"internalType":"uint256","name":"_claimTopic","type":"uint256"}],"name":"hasClaimTopic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"}],"name":"isTrustedIssuer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"}],"name":"removeTrustedIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"},{"internalType":"uint256[]","name":"_claimTopics","type":"uint256[]"}],"name":"updateIssuerClaimTopics","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addTrustedIssuer(address,uint256[])":{"details":"See {ITrustedIssuersRegistry-addTrustedIssuer}."},"getTrustedIssuerClaimTopics(address)":{"details":"See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."},"getTrustedIssuers()":{"details":"See {ITrustedIssuersRegistry-getTrustedIssuers}."},"getTrustedIssuersForClaimTopic(uint256)":{"details":"See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."},"hasClaimTopic(address,uint256)":{"details":"See {ITrustedIssuersRegistry-hasClaimTopic}."},"isTrustedIssuer(address)":{"details":"See {ITrustedIssuersRegistry-isTrustedIssuer}."},"owner()":{"details":"Returns the address of the current owner."},"removeTrustedIssuer(address)":{"details":"See {ITrustedIssuersRegistry-removeTrustedIssuer}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateIssuerClaimTopics(address,uint256[])":{"details":"See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1451 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB93D28EB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB93D28EB EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC28FB278 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD9DD24C5 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xEF2ED1A4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x52C111D1 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x9F63EA98 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x67D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0xCC PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x109 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xCC PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP1 PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D20746F706963732063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x444 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x38C PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH2 0x39C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x41D JUMPI PUSH2 0x41D PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH2 0x44E DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x325 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x464 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x490 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x500 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x494 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 DUP5 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x59F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x603 JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5D8 JUMPI PUSH2 0x5D8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x5F1 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x60B JUMP JUMPDEST DUP1 PUSH2 0x5FB DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BD JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x653 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x699 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7472757374656420636C61696D20746F706963732063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x32 GT PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E2035302074727573746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2069737375657273 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x8FF97419363FFD7000167F130EF7168FBEA05FAF9251824CA5043F113CC6A7C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x864 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x8D4 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x868 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x920 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAA JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA98 JUMPI PUSH1 0x65 PUSH2 0x9F6 PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xA32 JUMPI PUSH2 0xA32 PUSH2 0x1329 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x65 DUP1 SLOAD DUP1 PUSH2 0xA71 JUMPI PUSH2 0xA71 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xAAA JUMP JUMPDEST DUP1 PUSH2 0xAA2 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9AA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC37 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB7F PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB8F JUMPI PUSH2 0xB8F PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xC10 JUMPI PUSH2 0xC10 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xC49 JUMP JUMPDEST DUP1 PUSH2 0xC41 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB18 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xC57 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC81 SWAP2 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD6C JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE0D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xE27 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEB5 PUSH2 0x104E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF34 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0xEFB DUP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1075 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F CALLER PUSH2 0xFFC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x10E3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10E3 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH2 0x10EF SWAP3 SWAP2 POP PUSH2 0x110D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEFB SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x110E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1157 DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11DD DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1220 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6F70696373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x133F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xAC PUSH13 0x8A1E3CA2A4DE595C51DEBF0049 0xC8 SWAP10 0x4A MOD NUMBER 0xB4 0xC2 CHAINID 0x5F POP 0xDB TIMESTAMP NOT 0xEC PUSH14 0x8C64736F6C634300081100330000 ","sourceMap":"4097:5905:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_1749":{"entryPoint":4174,"id":1749,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_1760":{"entryPoint":null,"id":1760,"parameterSlots":0,"returnSlots":0},"@_checkOwner_1791":{"entryPoint":4002,"id":1791,"parameterSlots":0,"returnSlots":0},"@_msgSender_2050":{"entryPoint":null,"id":2050,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1848":{"entryPoint":4092,"id":1848,"parameterSlots":1,"returnSlots":0},"@addTrustedIssuer_1123":{"entryPoint":1681,"id":1123,"parameterSlots":3,"returnSlots":0},"@getTrustedIssuerClaimTopics_1542":{"entryPoint":3257,"id":1542,"parameterSlots":1,"returnSlots":1},"@getTrustedIssuersForClaimTopic_1488":{"entryPoint":1553,"id":1488,"parameterSlots":1,"returnSlots":1},"@getTrustedIssuers_1472":{"entryPoint":3467,"id":1472,"parameterSlots":0,"returnSlots":1},"@hasClaimTopic_1593":{"entryPoint":1361,"id":1593,"parameterSlots":2,"returnSlots":1},"@init_1017":{"entryPoint":3565,"id":1017,"parameterSlots":0,"returnSlots":0},"@isContract_2083":{"entryPoint":null,"id":2083,"parameterSlots":1,"returnSlots":1},"@isTrustedIssuer_1510":{"entryPoint":3838,"id":1510,"parameterSlots":1,"returnSlots":1},"@owner_1777":{"entryPoint":null,"id":1777,"parameterSlots":0,"returnSlots":1},"@removeTrustedIssuer_1290":{"entryPoint":2328,"id":1290,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_1805":{"entryPoint":1661,"id":1805,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1828":{"entryPoint":3884,"id":1828,"parameterSlots":1,"returnSlots":0},"@updateIssuerClaimTopics_1460":{"entryPoint":437,"id":1460,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4543,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_IClaimIssuer_$59":{"entryPoint":4689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IClaimIssuer_$59t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":4407,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":4587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5015,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4836,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4949,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4990,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4927,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":4968,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4905,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_contract_IClaimIssuer":{"entryPoint":4386,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9650:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"73:86:15","statements":[{"body":{"nodeType":"YulBlock","src":"137:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"146:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"149:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"139:6:15"},"nodeType":"YulFunctionCall","src":"139:12:15"},"nodeType":"YulExpressionStatement","src":"139:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"96:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"107:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"122:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"127:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"118:3:15"},"nodeType":"YulFunctionCall","src":"118:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"131:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"114:3:15"},"nodeType":"YulFunctionCall","src":"114:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"103:3:15"},"nodeType":"YulFunctionCall","src":"103:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"93:2:15"},"nodeType":"YulFunctionCall","src":"93:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"86:6:15"},"nodeType":"YulFunctionCall","src":"86:50:15"},"nodeType":"YulIf","src":"83:70:15"}]},"name":"validator_revert_contract_IClaimIssuer","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62:5:15","type":""}],"src":"14:145:15"},{"body":{"nodeType":"YulBlock","src":"305:642:15","statements":[{"body":{"nodeType":"YulBlock","src":"351:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"360:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"353:6:15"},"nodeType":"YulFunctionCall","src":"353:12:15"},"nodeType":"YulExpressionStatement","src":"353:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"326:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"335:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"322:3:15"},"nodeType":"YulFunctionCall","src":"322:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"347:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"318:3:15"},"nodeType":"YulFunctionCall","src":"318:32:15"},"nodeType":"YulIf","src":"315:52:15"},{"nodeType":"YulVariableDeclaration","src":"376:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"402:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"389:12:15"},"nodeType":"YulFunctionCall","src":"389:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"380:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"460:5:15"}],"functionName":{"name":"validator_revert_contract_IClaimIssuer","nodeType":"YulIdentifier","src":"421:38:15"},"nodeType":"YulFunctionCall","src":"421:45:15"},"nodeType":"YulExpressionStatement","src":"421:45:15"},{"nodeType":"YulAssignment","src":"475:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"485:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"475:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"499:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"530:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"541:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"526:3:15"},"nodeType":"YulFunctionCall","src":"526:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"513:12:15"},"nodeType":"YulFunctionCall","src":"513:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"503:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"554:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"564:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"558:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"609:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"618:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"621:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"611:6:15"},"nodeType":"YulFunctionCall","src":"611:12:15"},"nodeType":"YulExpressionStatement","src":"611:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"597:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"605:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"594:2:15"},"nodeType":"YulFunctionCall","src":"594:14:15"},"nodeType":"YulIf","src":"591:34:15"},{"nodeType":"YulVariableDeclaration","src":"634:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"648:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"659:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"644:3:15"},"nodeType":"YulFunctionCall","src":"644:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"638:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"714:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"723:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"726:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"716:6:15"},"nodeType":"YulFunctionCall","src":"716:12:15"},"nodeType":"YulExpressionStatement","src":"716:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"693:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"697:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"689:3:15"},"nodeType":"YulFunctionCall","src":"689:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"704:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"685:3:15"},"nodeType":"YulFunctionCall","src":"685:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"678:6:15"},"nodeType":"YulFunctionCall","src":"678:35:15"},"nodeType":"YulIf","src":"675:55:15"},{"nodeType":"YulVariableDeclaration","src":"739:30:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"766:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"753:12:15"},"nodeType":"YulFunctionCall","src":"753:16:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"743:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"796:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"805:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"808:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"798:6:15"},"nodeType":"YulFunctionCall","src":"798:12:15"},"nodeType":"YulExpressionStatement","src":"798:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"784:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"792:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"781:2:15"},"nodeType":"YulFunctionCall","src":"781:14:15"},"nodeType":"YulIf","src":"778:34:15"},{"body":{"nodeType":"YulBlock","src":"870:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"879:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"882:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"872:6:15"},"nodeType":"YulFunctionCall","src":"872:12:15"},"nodeType":"YulExpressionStatement","src":"872:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"835:2:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"843:1:15","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"846:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"839:3:15"},"nodeType":"YulFunctionCall","src":"839:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:15"},"nodeType":"YulFunctionCall","src":"831:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"827:3:15"},"nodeType":"YulFunctionCall","src":"827:32:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"861:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"824:2:15"},"nodeType":"YulFunctionCall","src":"824:45:15"},"nodeType":"YulIf","src":"821:65:15"},{"nodeType":"YulAssignment","src":"895:21:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"909:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"913:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"905:3:15"},"nodeType":"YulFunctionCall","src":"905:11:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"895:6:15"}]},{"nodeType":"YulAssignment","src":"925:16:15","value":{"name":"length","nodeType":"YulIdentifier","src":"935:6:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"925:6:15"}]}]},"name":"abi_decode_tuple_t_contract$_IClaimIssuer_$59t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"255:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"266:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"278:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"286:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"294:6:15","type":""}],"src":"164:783:15"},{"body":{"nodeType":"YulBlock","src":"1039:242:15","statements":[{"body":{"nodeType":"YulBlock","src":"1085:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1094:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1097:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1087:6:15"},"nodeType":"YulFunctionCall","src":"1087:12:15"},"nodeType":"YulExpressionStatement","src":"1087:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1069:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1056:3:15"},"nodeType":"YulFunctionCall","src":"1056:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1081:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1052:3:15"},"nodeType":"YulFunctionCall","src":"1052:32:15"},"nodeType":"YulIf","src":"1049:52:15"},{"nodeType":"YulVariableDeclaration","src":"1110:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:15"},"nodeType":"YulFunctionCall","src":"1123:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1114:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1194:5:15"}],"functionName":{"name":"validator_revert_contract_IClaimIssuer","nodeType":"YulIdentifier","src":"1155:38:15"},"nodeType":"YulFunctionCall","src":"1155:45:15"},"nodeType":"YulExpressionStatement","src":"1155:45:15"},{"nodeType":"YulAssignment","src":"1209:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1219:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1209:6:15"}]},{"nodeType":"YulAssignment","src":"1233:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1260:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1271:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1256:3:15"},"nodeType":"YulFunctionCall","src":"1256:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1243:12:15"},"nodeType":"YulFunctionCall","src":"1243:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1233:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"997:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1008:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1020:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1028:6:15","type":""}],"src":"952:329:15"},{"body":{"nodeType":"YulBlock","src":"1381:92:15","statements":[{"nodeType":"YulAssignment","src":"1391:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1414:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:15"},"nodeType":"YulFunctionCall","src":"1399:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1391:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1433:9:15"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1458:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1451:6:15"},"nodeType":"YulFunctionCall","src":"1451:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1444:6:15"},"nodeType":"YulFunctionCall","src":"1444:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1426:6:15"},"nodeType":"YulFunctionCall","src":"1426:41:15"},"nodeType":"YulExpressionStatement","src":"1426:41:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1350:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1361:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1372:4:15","type":""}],"src":"1286:187:15"},{"body":{"nodeType":"YulBlock","src":"1548:110:15","statements":[{"body":{"nodeType":"YulBlock","src":"1594:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1603:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1606:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1596:6:15"},"nodeType":"YulFunctionCall","src":"1596:12:15"},"nodeType":"YulExpressionStatement","src":"1596:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1569:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1578:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1565:3:15"},"nodeType":"YulFunctionCall","src":"1565:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1561:3:15"},"nodeType":"YulFunctionCall","src":"1561:32:15"},"nodeType":"YulIf","src":"1558:52:15"},{"nodeType":"YulAssignment","src":"1619:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1642:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1629:12:15"},"nodeType":"YulFunctionCall","src":"1629:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1619:6:15"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1514:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1525:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1537:6:15","type":""}],"src":"1478:180:15"},{"body":{"nodeType":"YulBlock","src":"1833:507:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1843:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1853:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1847:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1864:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1882:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1893:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:15"},"nodeType":"YulFunctionCall","src":"1878:18:15"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1868:6:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1923:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:21:15"},"nodeType":"YulExpressionStatement","src":"1905:21:15"},{"nodeType":"YulVariableDeclaration","src":"1935:17:15","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1946:6:15"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1939:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1961:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1981:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1975:5:15"},"nodeType":"YulFunctionCall","src":"1975:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1965:6:15","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2004:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"2012:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1997:6:15"},"nodeType":"YulFunctionCall","src":"1997:22:15"},"nodeType":"YulExpressionStatement","src":"1997:22:15"},{"nodeType":"YulAssignment","src":"2028:25:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2039:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2050:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2035:3:15"},"nodeType":"YulFunctionCall","src":"2035:18:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2028:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"2062:29:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2080:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2088:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2076:3:15"},"nodeType":"YulFunctionCall","src":"2076:15:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2066:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2100:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2109:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2104:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2168:146:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2189:3:15"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2204:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2198:5:15"},"nodeType":"YulFunctionCall","src":"2198:13:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2221:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2226:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2217:3:15"},"nodeType":"YulFunctionCall","src":"2217:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"2230:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2213:3:15"},"nodeType":"YulFunctionCall","src":"2213:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2194:3:15"},"nodeType":"YulFunctionCall","src":"2194:39:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2182:6:15"},"nodeType":"YulFunctionCall","src":"2182:52:15"},"nodeType":"YulExpressionStatement","src":"2182:52:15"},{"nodeType":"YulAssignment","src":"2247:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2258:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2263:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2254:3:15"},"nodeType":"YulFunctionCall","src":"2254:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2247:3:15"}]},{"nodeType":"YulAssignment","src":"2279:25:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2293:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2301:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:15"},"nodeType":"YulFunctionCall","src":"2289:15:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2279:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2130:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2133:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2127:2:15"},"nodeType":"YulFunctionCall","src":"2127:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2141:18:15","statements":[{"nodeType":"YulAssignment","src":"2143:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2152:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"2155:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:15"},"nodeType":"YulFunctionCall","src":"2148:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2143:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2123:3:15","statements":[]},"src":"2119:195:15"},{"nodeType":"YulAssignment","src":"2323:11:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"2331:3:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2323:4:15"}]}]},"name":"abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1802:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1813:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1824:4:15","type":""}],"src":"1663:677:15"},{"body":{"nodeType":"YulBlock","src":"2446:102:15","statements":[{"nodeType":"YulAssignment","src":"2456:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2468:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2479:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2464:3:15"},"nodeType":"YulFunctionCall","src":"2464:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2456:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2513:6:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2529:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2534:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2525:3:15"},"nodeType":"YulFunctionCall","src":"2525:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"2538:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2521:3:15"},"nodeType":"YulFunctionCall","src":"2521:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2509:3:15"},"nodeType":"YulFunctionCall","src":"2509:32:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2491:6:15"},"nodeType":"YulFunctionCall","src":"2491:51:15"},"nodeType":"YulExpressionStatement","src":"2491:51:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2415:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2426:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2437:4:15","type":""}],"src":"2345:203:15"},{"body":{"nodeType":"YulBlock","src":"2642:191:15","statements":[{"body":{"nodeType":"YulBlock","src":"2688:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2697:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2700:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2690:6:15"},"nodeType":"YulFunctionCall","src":"2690:12:15"},"nodeType":"YulExpressionStatement","src":"2690:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2663:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2672:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2659:3:15"},"nodeType":"YulFunctionCall","src":"2659:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2684:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2655:3:15"},"nodeType":"YulFunctionCall","src":"2655:32:15"},"nodeType":"YulIf","src":"2652:52:15"},{"nodeType":"YulVariableDeclaration","src":"2713:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2739:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2726:12:15"},"nodeType":"YulFunctionCall","src":"2726:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2717:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2797:5:15"}],"functionName":{"name":"validator_revert_contract_IClaimIssuer","nodeType":"YulIdentifier","src":"2758:38:15"},"nodeType":"YulFunctionCall","src":"2758:45:15"},"nodeType":"YulExpressionStatement","src":"2758:45:15"},{"nodeType":"YulAssignment","src":"2812:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2822:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"name":"abi_decode_tuple_t_contract$_IClaimIssuer_$59","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2608:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2619:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2631:6:15","type":""}],"src":"2553:280:15"},{"body":{"nodeType":"YulBlock","src":"2989:481:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2999:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3009:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3003:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3020:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3038:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3049:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3034:3:15"},"nodeType":"YulFunctionCall","src":"3034:18:15"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3024:6:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3079:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3061:6:15"},"nodeType":"YulFunctionCall","src":"3061:21:15"},"nodeType":"YulExpressionStatement","src":"3061:21:15"},{"nodeType":"YulVariableDeclaration","src":"3091:17:15","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3102:6:15"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3095:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3117:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3137:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3131:5:15"},"nodeType":"YulFunctionCall","src":"3131:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3121:6:15","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3160:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"3168:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3153:6:15"},"nodeType":"YulFunctionCall","src":"3153:22:15"},"nodeType":"YulExpressionStatement","src":"3153:22:15"},{"nodeType":"YulAssignment","src":"3184:25:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3195:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3206:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3191:3:15"},"nodeType":"YulFunctionCall","src":"3191:18:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"3218:29:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3236:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3244:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:15"},"nodeType":"YulFunctionCall","src":"3232:15:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3222:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3256:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3265:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3260:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3324:120:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3345:3:15"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3356:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3350:5:15"},"nodeType":"YulFunctionCall","src":"3350:13:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3338:6:15"},"nodeType":"YulFunctionCall","src":"3338:26:15"},"nodeType":"YulExpressionStatement","src":"3338:26:15"},{"nodeType":"YulAssignment","src":"3377:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3388:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3393:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3384:3:15"},"nodeType":"YulFunctionCall","src":"3384:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3377:3:15"}]},{"nodeType":"YulAssignment","src":"3409:25:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3423:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3431:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3419:3:15"},"nodeType":"YulFunctionCall","src":"3419:15:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3409:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3286:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"3289:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3283:2:15"},"nodeType":"YulFunctionCall","src":"3283:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3297:18:15","statements":[{"nodeType":"YulAssignment","src":"3299:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3308:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"3311:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3304:3:15"},"nodeType":"YulFunctionCall","src":"3304:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3299:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"3279:3:15","statements":[]},"src":"3275:169:15"},{"nodeType":"YulAssignment","src":"3453:11:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"3461:3:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3453:4:15"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2958:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2969:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2980:4:15","type":""}],"src":"2838:632:15"},{"body":{"nodeType":"YulBlock","src":"3545:191:15","statements":[{"body":{"nodeType":"YulBlock","src":"3591:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3600:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3603:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3593:6:15"},"nodeType":"YulFunctionCall","src":"3593:12:15"},"nodeType":"YulExpressionStatement","src":"3593:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3566:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3575:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3562:3:15"},"nodeType":"YulFunctionCall","src":"3562:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3587:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3558:3:15"},"nodeType":"YulFunctionCall","src":"3558:32:15"},"nodeType":"YulIf","src":"3555:52:15"},{"nodeType":"YulVariableDeclaration","src":"3616:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3642:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3629:12:15"},"nodeType":"YulFunctionCall","src":"3629:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3620:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3700:5:15"}],"functionName":{"name":"validator_revert_contract_IClaimIssuer","nodeType":"YulIdentifier","src":"3661:38:15"},"nodeType":"YulFunctionCall","src":"3661:45:15"},"nodeType":"YulExpressionStatement","src":"3661:45:15"},{"nodeType":"YulAssignment","src":"3715:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"3725:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3715:6:15"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3511:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3522:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3534:6:15","type":""}],"src":"3475:261:15"},{"body":{"nodeType":"YulBlock","src":"3915:181:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3932:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3925:6:15"},"nodeType":"YulFunctionCall","src":"3925:21:15"},"nodeType":"YulExpressionStatement","src":"3925:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3966:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3977:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3962:3:15"},"nodeType":"YulFunctionCall","src":"3962:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:15","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3955:6:15"},"nodeType":"YulFunctionCall","src":"3955:30:15"},"nodeType":"YulExpressionStatement","src":"3955:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4005:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4016:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4001:3:15"},"nodeType":"YulFunctionCall","src":"4001:18:15"},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"4021:33:15","type":"","value":"invalid argument - zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3994:6:15"},"nodeType":"YulFunctionCall","src":"3994:61:15"},"nodeType":"YulExpressionStatement","src":"3994:61:15"},{"nodeType":"YulAssignment","src":"4064:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4076:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4087:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4072:3:15"},"nodeType":"YulFunctionCall","src":"4072:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4064:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3892:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3906:4:15","type":""}],"src":"3741:355:15"},{"body":{"nodeType":"YulBlock","src":"4275:170:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4303:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4285:6:15"},"nodeType":"YulFunctionCall","src":"4285:21:15"},"nodeType":"YulExpressionStatement","src":"4285:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4326:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4337:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4322:3:15"},"nodeType":"YulFunctionCall","src":"4322:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"4342:2:15","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4315:6:15"},"nodeType":"YulFunctionCall","src":"4315:30:15"},"nodeType":"YulExpressionStatement","src":"4315:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4365:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4376:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4361:3:15"},"nodeType":"YulFunctionCall","src":"4361:18:15"},{"hexValue":"4e4f542061207472757374656420697373756572","kind":"string","nodeType":"YulLiteral","src":"4381:22:15","type":"","value":"NOT a trusted issuer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4354:6:15"},"nodeType":"YulFunctionCall","src":"4354:50:15"},"nodeType":"YulExpressionStatement","src":"4354:50:15"},{"nodeType":"YulAssignment","src":"4413:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4421:3:15"},"nodeType":"YulFunctionCall","src":"4421:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4413:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4252:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4266:4:15","type":""}],"src":"4101:344:15"},{"body":{"nodeType":"YulBlock","src":"4624:227:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4641:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4652:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:15"},"nodeType":"YulFunctionCall","src":"4634:21:15"},"nodeType":"YulExpressionStatement","src":"4634:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4675:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4686:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4671:3:15"},"nodeType":"YulFunctionCall","src":"4671:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"4691:2:15","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4664:6:15"},"nodeType":"YulFunctionCall","src":"4664:30:15"},"nodeType":"YulExpressionStatement","src":"4664:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4714:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4725:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4710:3:15"},"nodeType":"YulFunctionCall","src":"4710:18:15"},{"hexValue":"63616e6e6f742068617665206d6f7265207468616e20313520636c61696d2074","kind":"string","nodeType":"YulLiteral","src":"4730:34:15","type":"","value":"cannot have more than 15 claim t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4703:6:15"},"nodeType":"YulFunctionCall","src":"4703:62:15"},"nodeType":"YulExpressionStatement","src":"4703:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4785:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4796:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:15"},"nodeType":"YulFunctionCall","src":"4781:18:15"},{"hexValue":"6f70696373","kind":"string","nodeType":"YulLiteral","src":"4801:7:15","type":"","value":"opics"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4774:6:15"},"nodeType":"YulFunctionCall","src":"4774:35:15"},"nodeType":"YulExpressionStatement","src":"4774:35:15"},{"nodeType":"YulAssignment","src":"4818:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4830:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4841:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4826:3:15"},"nodeType":"YulFunctionCall","src":"4826:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4818:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4601:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4615:4:15","type":""}],"src":"4450:401:15"},{"body":{"nodeType":"YulBlock","src":"5030:178:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5047:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5058:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5040:6:15"},"nodeType":"YulFunctionCall","src":"5040:21:15"},"nodeType":"YulExpressionStatement","src":"5040:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5081:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5092:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:15"},"nodeType":"YulFunctionCall","src":"5077:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"5097:2:15","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5070:6:15"},"nodeType":"YulFunctionCall","src":"5070:30:15"},"nodeType":"YulExpressionStatement","src":"5070:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5120:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5131:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5116:3:15"},"nodeType":"YulFunctionCall","src":"5116:18:15"},{"hexValue":"636c61696d20746f706963732063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"5136:30:15","type":"","value":"claim topics cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5109:6:15"},"nodeType":"YulFunctionCall","src":"5109:58:15"},"nodeType":"YulExpressionStatement","src":"5109:58:15"},{"nodeType":"YulAssignment","src":"5176:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5188:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5199:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5184:3:15"},"nodeType":"YulFunctionCall","src":"5184:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5176:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5007:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5021:4:15","type":""}],"src":"4856:352:15"},{"body":{"nodeType":"YulBlock","src":"5245:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5262:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5269:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5274:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5265:3:15"},"nodeType":"YulFunctionCall","src":"5265:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5255:6:15"},"nodeType":"YulFunctionCall","src":"5255:31:15"},"nodeType":"YulExpressionStatement","src":"5255:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5302:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5305:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5295:6:15"},"nodeType":"YulFunctionCall","src":"5295:15:15"},"nodeType":"YulExpressionStatement","src":"5295:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5326:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5329:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5319:6:15"},"nodeType":"YulFunctionCall","src":"5319:15:15"},"nodeType":"YulExpressionStatement","src":"5319:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5213:127:15"},{"body":{"nodeType":"YulBlock","src":"5377:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5394:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5401:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5406:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5397:3:15"},"nodeType":"YulFunctionCall","src":"5397:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5387:6:15"},"nodeType":"YulFunctionCall","src":"5387:31:15"},"nodeType":"YulExpressionStatement","src":"5387:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5434:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5437:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5427:6:15"},"nodeType":"YulFunctionCall","src":"5427:15:15"},"nodeType":"YulExpressionStatement","src":"5427:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5458:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5461:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5451:6:15"},"nodeType":"YulFunctionCall","src":"5451:15:15"},"nodeType":"YulExpressionStatement","src":"5451:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5345:127:15"},{"body":{"nodeType":"YulBlock","src":"5526:79:15","statements":[{"nodeType":"YulAssignment","src":"5536:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5548:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"5551:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5544:3:15"},"nodeType":"YulFunctionCall","src":"5544:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5536:4:15"}]},{"body":{"nodeType":"YulBlock","src":"5577:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5579:16:15"},"nodeType":"YulFunctionCall","src":"5579:18:15"},"nodeType":"YulExpressionStatement","src":"5579:18:15"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5568:4:15"},{"name":"x","nodeType":"YulIdentifier","src":"5574:1:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5565:2:15"},"nodeType":"YulFunctionCall","src":"5565:11:15"},"nodeType":"YulIf","src":"5562:37:15"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5508:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"5511:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5517:4:15","type":""}],"src":"5477:128:15"},{"body":{"nodeType":"YulBlock","src":"5642:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5666:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5671:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5662:3:15"},"nodeType":"YulFunctionCall","src":"5662:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5652:6:15"},"nodeType":"YulFunctionCall","src":"5652:31:15"},"nodeType":"YulExpressionStatement","src":"5652:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5699:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5702:4:15","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5692:6:15"},"nodeType":"YulFunctionCall","src":"5692:15:15"},"nodeType":"YulExpressionStatement","src":"5692:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5723:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5726:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5716:6:15"},"nodeType":"YulFunctionCall","src":"5716:15:15"},"nodeType":"YulExpressionStatement","src":"5716:15:15"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"5610:127:15"},{"body":{"nodeType":"YulBlock","src":"5789:88:15","statements":[{"body":{"nodeType":"YulBlock","src":"5820:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5822:16:15"},"nodeType":"YulFunctionCall","src":"5822:18:15"},"nodeType":"YulExpressionStatement","src":"5822:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5805:5:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5816:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5812:3:15"},"nodeType":"YulFunctionCall","src":"5812:6:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5802:2:15"},"nodeType":"YulFunctionCall","src":"5802:17:15"},"nodeType":"YulIf","src":"5799:43:15"},{"nodeType":"YulAssignment","src":"5851:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5862:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"5869:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:15"},"nodeType":"YulFunctionCall","src":"5858:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5851:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5771:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5781:3:15","type":""}],"src":"5742:135:15"},{"body":{"nodeType":"YulBlock","src":"6043:282:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6071:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6053:6:15"},"nodeType":"YulFunctionCall","src":"6053:21:15"},"nodeType":"YulExpressionStatement","src":"6053:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:15"},"nodeType":"YulFunctionCall","src":"6090:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"6110:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6083:6:15"},"nodeType":"YulFunctionCall","src":"6083:34:15"},"nodeType":"YulExpressionStatement","src":"6083:34:15"},{"body":{"nodeType":"YulBlock","src":"6161:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6170:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6173:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6163:6:15"},"nodeType":"YulFunctionCall","src":"6163:12:15"},"nodeType":"YulExpressionStatement","src":"6163:12:15"}]},"condition":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6132:6:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6148:3:15","type":"","value":"251"},{"kind":"number","nodeType":"YulLiteral","src":"6153:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6144:3:15"},"nodeType":"YulFunctionCall","src":"6144:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"6157:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6140:3:15"},"nodeType":"YulFunctionCall","src":"6140:19:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6129:2:15"},"nodeType":"YulFunctionCall","src":"6129:31:15"},"nodeType":"YulIf","src":"6126:51:15"},{"nodeType":"YulVariableDeclaration","src":"6186:28:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6204:1:15","type":"","value":"5"},{"name":"value1","nodeType":"YulIdentifier","src":"6207:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6200:3:15"},"nodeType":"YulFunctionCall","src":"6200:14:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6190:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6240:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6251:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6236:3:15"},"nodeType":"YulFunctionCall","src":"6236:18:15"},{"name":"value0","nodeType":"YulIdentifier","src":"6256:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"6264:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6223:12:15"},"nodeType":"YulFunctionCall","src":"6223:48:15"},"nodeType":"YulExpressionStatement","src":"6223:48:15"},{"nodeType":"YulAssignment","src":"6280:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6296:9:15"},{"name":"length","nodeType":"YulIdentifier","src":"6307:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6292:3:15"},"nodeType":"YulFunctionCall","src":"6292:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"6316:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6288:3:15"},"nodeType":"YulFunctionCall","src":"6288:31:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6280:4:15"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6004:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6015:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6023:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6034:4:15","type":""}],"src":"5882:443:15"},{"body":{"nodeType":"YulBlock","src":"6504:179:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6521:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6532:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6514:6:15"},"nodeType":"YulFunctionCall","src":"6514:21:15"},"nodeType":"YulExpressionStatement","src":"6514:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6555:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6566:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6551:3:15"},"nodeType":"YulFunctionCall","src":"6551:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"6571:2:15","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6544:6:15"},"nodeType":"YulFunctionCall","src":"6544:30:15"},"nodeType":"YulExpressionStatement","src":"6544:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6594:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6605:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:15"},"nodeType":"YulFunctionCall","src":"6590:18:15"},{"hexValue":"747275737465642049737375657220616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"6610:31:15","type":"","value":"trusted Issuer already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6583:6:15"},"nodeType":"YulFunctionCall","src":"6583:59:15"},"nodeType":"YulExpressionStatement","src":"6583:59:15"},{"nodeType":"YulAssignment","src":"6651:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6663:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6674:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6659:3:15"},"nodeType":"YulFunctionCall","src":"6659:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6651:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6481:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6495:4:15","type":""}],"src":"6330:353:15"},{"body":{"nodeType":"YulBlock","src":"6862:226:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6879:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6890:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6872:6:15"},"nodeType":"YulFunctionCall","src":"6872:21:15"},"nodeType":"YulExpressionStatement","src":"6872:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6913:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6924:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6909:3:15"},"nodeType":"YulFunctionCall","src":"6909:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:15","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6902:6:15"},"nodeType":"YulFunctionCall","src":"6902:30:15"},"nodeType":"YulExpressionStatement","src":"6902:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6952:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6963:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6948:3:15"},"nodeType":"YulFunctionCall","src":"6948:18:15"},{"hexValue":"7472757374656420636c61696d20746f706963732063616e6e6f742062652065","kind":"string","nodeType":"YulLiteral","src":"6968:34:15","type":"","value":"trusted claim topics cannot be e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6941:6:15"},"nodeType":"YulFunctionCall","src":"6941:62:15"},"nodeType":"YulExpressionStatement","src":"6941:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7023:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7034:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7019:3:15"},"nodeType":"YulFunctionCall","src":"7019:18:15"},{"hexValue":"6d707479","kind":"string","nodeType":"YulLiteral","src":"7039:6:15","type":"","value":"mpty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7012:6:15"},"nodeType":"YulFunctionCall","src":"7012:34:15"},"nodeType":"YulExpressionStatement","src":"7012:34:15"},{"nodeType":"YulAssignment","src":"7055:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7067:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7078:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7063:3:15"},"nodeType":"YulFunctionCall","src":"7063:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7055:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6839:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6853:4:15","type":""}],"src":"6688:400:15"},{"body":{"nodeType":"YulBlock","src":"7267:230:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7284:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7295:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:15"},"nodeType":"YulFunctionCall","src":"7277:21:15"},"nodeType":"YulExpressionStatement","src":"7277:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7329:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:15"},"nodeType":"YulFunctionCall","src":"7314:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"7334:2:15","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7307:6:15"},"nodeType":"YulFunctionCall","src":"7307:30:15"},"nodeType":"YulExpressionStatement","src":"7307:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7357:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7368:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7353:3:15"},"nodeType":"YulFunctionCall","src":"7353:18:15"},{"hexValue":"63616e6e6f742068617665206d6f7265207468616e2035302074727573746564","kind":"string","nodeType":"YulLiteral","src":"7373:34:15","type":"","value":"cannot have more than 50 trusted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7346:6:15"},"nodeType":"YulFunctionCall","src":"7346:62:15"},"nodeType":"YulExpressionStatement","src":"7346:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7428:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7439:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7424:3:15"},"nodeType":"YulFunctionCall","src":"7424:18:15"},{"hexValue":"2069737375657273","kind":"string","nodeType":"YulLiteral","src":"7444:10:15","type":"","value":" issuers"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7417:6:15"},"nodeType":"YulFunctionCall","src":"7417:38:15"},"nodeType":"YulExpressionStatement","src":"7417:38:15"},{"nodeType":"YulAssignment","src":"7464:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7476:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7487:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7472:3:15"},"nodeType":"YulFunctionCall","src":"7472:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7464:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7244:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7258:4:15","type":""}],"src":"7093:404:15"},{"body":{"nodeType":"YulBlock","src":"7676:178:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7704:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7686:6:15"},"nodeType":"YulFunctionCall","src":"7686:21:15"},"nodeType":"YulExpressionStatement","src":"7686:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7727:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7738:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7723:3:15"},"nodeType":"YulFunctionCall","src":"7723:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"7743:2:15","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7716:6:15"},"nodeType":"YulFunctionCall","src":"7716:30:15"},"nodeType":"YulExpressionStatement","src":"7716:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7766:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7777:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7762:3:15"},"nodeType":"YulFunctionCall","src":"7762:18:15"},{"hexValue":"747275737465642049737375657220646f65736e2774206578697374","kind":"string","nodeType":"YulLiteral","src":"7782:30:15","type":"","value":"trusted Issuer doesn't exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7755:6:15"},"nodeType":"YulFunctionCall","src":"7755:58:15"},"nodeType":"YulExpressionStatement","src":"7755:58:15"},{"nodeType":"YulAssignment","src":"7822:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7834:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7845:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7830:3:15"},"nodeType":"YulFunctionCall","src":"7830:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7822:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7653:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7667:4:15","type":""}],"src":"7502:352:15"},{"body":{"nodeType":"YulBlock","src":"8033:236:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8050:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8061:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8043:6:15"},"nodeType":"YulFunctionCall","src":"8043:21:15"},"nodeType":"YulExpressionStatement","src":"8043:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8084:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8095:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8080:3:15"},"nodeType":"YulFunctionCall","src":"8080:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"8100:2:15","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8073:6:15"},"nodeType":"YulFunctionCall","src":"8073:30:15"},"nodeType":"YulExpressionStatement","src":"8073:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8123:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8119:3:15"},"nodeType":"YulFunctionCall","src":"8119:18:15"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"8139:34:15","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8112:6:15"},"nodeType":"YulFunctionCall","src":"8112:62:15"},"nodeType":"YulExpressionStatement","src":"8112:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8194:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8205:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8190:3:15"},"nodeType":"YulFunctionCall","src":"8190:18:15"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"8210:16:15","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8183:6:15"},"nodeType":"YulFunctionCall","src":"8183:44:15"},"nodeType":"YulExpressionStatement","src":"8183:44:15"},{"nodeType":"YulAssignment","src":"8236:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8248:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8259:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8244:3:15"},"nodeType":"YulFunctionCall","src":"8244:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8236:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8010:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8024:4:15","type":""}],"src":"7859:410:15"},{"body":{"nodeType":"YulBlock","src":"8381:87:15","statements":[{"nodeType":"YulAssignment","src":"8391:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8403:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8414:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8399:3:15"},"nodeType":"YulFunctionCall","src":"8399:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8391:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8433:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8448:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8456:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8444:3:15"},"nodeType":"YulFunctionCall","src":"8444:17:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8426:6:15"},"nodeType":"YulFunctionCall","src":"8426:36:15"},"nodeType":"YulExpressionStatement","src":"8426:36:15"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8350:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8361:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8372:4:15","type":""}],"src":"8274:194:15"},{"body":{"nodeType":"YulBlock","src":"8647:228:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8664:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8675:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8657:6:15"},"nodeType":"YulFunctionCall","src":"8657:21:15"},"nodeType":"YulExpressionStatement","src":"8657:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8698:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8709:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8694:3:15"},"nodeType":"YulFunctionCall","src":"8694:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"8714:2:15","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8687:6:15"},"nodeType":"YulFunctionCall","src":"8687:30:15"},"nodeType":"YulExpressionStatement","src":"8687:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8737:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8748:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8733:3:15"},"nodeType":"YulFunctionCall","src":"8733:18:15"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8753:34:15","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8726:6:15"},"nodeType":"YulFunctionCall","src":"8726:62:15"},"nodeType":"YulExpressionStatement","src":"8726:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8808:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8819:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8804:3:15"},"nodeType":"YulFunctionCall","src":"8804:18:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8824:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8797:6:15"},"nodeType":"YulFunctionCall","src":"8797:36:15"},"nodeType":"YulExpressionStatement","src":"8797:36:15"},{"nodeType":"YulAssignment","src":"8842:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8854:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8865:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8850:3:15"},"nodeType":"YulFunctionCall","src":"8850:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8842:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8624:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8638:4:15","type":""}],"src":"8473:402:15"},{"body":{"nodeType":"YulBlock","src":"9054:182:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9071:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9082:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9064:6:15"},"nodeType":"YulFunctionCall","src":"9064:21:15"},"nodeType":"YulExpressionStatement","src":"9064:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9105:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9116:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9101:3:15"},"nodeType":"YulFunctionCall","src":"9101:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9121:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9094:6:15"},"nodeType":"YulFunctionCall","src":"9094:30:15"},"nodeType":"YulExpressionStatement","src":"9094:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9144:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9155:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9140:3:15"},"nodeType":"YulFunctionCall","src":"9140:18:15"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9160:34:15","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9133:6:15"},"nodeType":"YulFunctionCall","src":"9133:62:15"},"nodeType":"YulExpressionStatement","src":"9133:62:15"},{"nodeType":"YulAssignment","src":"9204:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9216:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9227:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9212:3:15"},"nodeType":"YulFunctionCall","src":"9212:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9204:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9031:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9045:4:15","type":""}],"src":"8880:356:15"},{"body":{"nodeType":"YulBlock","src":"9415:233:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9432:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9443:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9425:6:15"},"nodeType":"YulFunctionCall","src":"9425:21:15"},"nodeType":"YulExpressionStatement","src":"9425:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9466:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9477:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:15"},"nodeType":"YulFunctionCall","src":"9462:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9482:2:15","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9455:6:15"},"nodeType":"YulFunctionCall","src":"9455:30:15"},"nodeType":"YulExpressionStatement","src":"9455:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9505:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9516:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9501:3:15"},"nodeType":"YulFunctionCall","src":"9501:18:15"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"9521:34:15","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9494:6:15"},"nodeType":"YulFunctionCall","src":"9494:62:15"},"nodeType":"YulExpressionStatement","src":"9494:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9576:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9587:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9572:3:15"},"nodeType":"YulFunctionCall","src":"9572:18:15"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"9592:13:15","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9565:6:15"},"nodeType":"YulFunctionCall","src":"9565:41:15"},"nodeType":"YulExpressionStatement","src":"9565:41:15"},{"nodeType":"YulAssignment","src":"9615:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9627:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9638:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9623:3:15"},"nodeType":"YulFunctionCall","src":"9623:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9615:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9392:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9406:4:15","type":""}],"src":"9241:407:15"}]},"contents":"{\n    { }\n    function validator_revert_contract_IClaimIssuer(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$59t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$59(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NOT a trusted issuer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"cannot have more than 15 claim t\")\n        mstore(add(headStart, 96), \"opics\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"claim topics cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value1)\n        calldatacopy(add(headStart, 64), value0, length)\n        tail := add(add(headStart, length), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"trusted Issuer already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"trusted claim topics cannot be e\")\n        mstore(add(headStart, 96), \"mpty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"cannot have more than 50 trusted\")\n        mstore(add(headStart, 96), \" issuers\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"trusted Issuer doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB93D28EB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB93D28EB EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC28FB278 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD9DD24C5 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xEF2ED1A4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x52C111D1 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x9F63EA98 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x67D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0xCC PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x109 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xCC PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP1 PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D20746F706963732063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x444 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x38C PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH2 0x39C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x41D JUMPI PUSH2 0x41D PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH2 0x44E DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x325 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x464 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x490 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x500 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x494 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 DUP5 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x59F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x603 JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5D8 JUMPI PUSH2 0x5D8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x5F1 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x60B JUMP JUMPDEST DUP1 PUSH2 0x5FB DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BD JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x653 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x699 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7472757374656420636C61696D20746F706963732063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x32 GT PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E2035302074727573746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2069737375657273 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x8FF97419363FFD7000167F130EF7168FBEA05FAF9251824CA5043F113CC6A7C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x864 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x8D4 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x868 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x920 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAA JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA98 JUMPI PUSH1 0x65 PUSH2 0x9F6 PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xA32 JUMPI PUSH2 0xA32 PUSH2 0x1329 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x65 DUP1 SLOAD DUP1 PUSH2 0xA71 JUMPI PUSH2 0xA71 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xAAA JUMP JUMPDEST DUP1 PUSH2 0xAA2 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9AA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC37 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB7F PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB8F JUMPI PUSH2 0xB8F PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xC10 JUMPI PUSH2 0xC10 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xC49 JUMP JUMPDEST DUP1 PUSH2 0xC41 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB18 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xC57 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC81 SWAP2 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD6C JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE0D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xE27 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEB5 PUSH2 0x104E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF34 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0xEFB DUP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1075 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F CALLER PUSH2 0xFFC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x10E3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10E3 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH2 0x10EF SWAP3 SWAP2 POP PUSH2 0x110D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEFB SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x110E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1157 DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11DD DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1220 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6F70696373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x133F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xAC PUSH13 0x8A1E3CA2A4DE595C51DEBF0049 0xC8 SWAP10 0x4A MOD NUMBER 0xB4 0xC2 CHAINID 0x5F POP 0xDB TIMESTAMP NOT 0xEC PUSH14 0x8C64736F6C634300081100330000 ","sourceMap":"4097:5905:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6884:1449;;;;;;:::i;:::-;;:::i;:::-;;9580:420;;;;;;:::i;:::-;;:::i;:::-;;;1451:14:15;;1444:22;1426:41;;1414:2;1399:18;9580:420:8;;;;;;;;8637:179;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2064:101:11:-;;;:::i;1441:85::-;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:11;;;2491:51:15;;2479:2;2464:18;1441:85:11;2345:203:15;4347:919:8;;;;;;:::i;:::-;;:::i;5352:1442::-;;;;;;:::i;:::-;;:::i;9197:303::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8417:123::-;;;:::i;4194:70::-;;;:::i;8898:205::-;;;;;;:::i;:::-;;:::i;2314:198:11:-;;;;;;:::i;:::-;;:::i;6884:1449:8:-;1334:13:11;:11;:13::i;:::-;-1:-1:-1;;;;;7025:37:8;::::1;7017:81;;;;-1:-1:-1::0;;;7017:81:8::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;7116:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;;7108:95:::1;;;::::0;-1:-1:-1;;;7108:95:8;;4303:2:15;7108:95:8::1;::::0;::::1;4285:21:15::0;4342:2;4322:18;;;4315:30;-1:-1:-1;;;4361:18:15;;;4354:50;4421:18;;7108:95:8::1;4101:344:15::0;7108:95:8::1;7244:2;7221:25:::0;::::1;;7213:75;;;;-1:-1:-1::0;;;7213:75:8::1;;;;;;;:::i;:::-;7306:23:::0;7298:64:::1;;;::::0;-1:-1:-1;;;7298:64:8;;5058:2:15;7298:64:8::1;::::0;::::1;5040:21:15::0;5097:2;5077:18;;;5070:30;5136;5116:18;;;5109:58;5184:18;;7298:64:8::1;4856:352:15::0;7298:64:8::1;7378:9;7373:666;-1:-1:-1::0;;;;;7397:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;7393:61;::::1;7373:666;;;-1:-1:-1::0;;;;;7496:50:8;::::1;7475:18;7496:50:::0;;;:25:::1;:50;::::0;;;;:53;;7547:1;;7496:53;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;7586:40;;;:28:::1;:40:::0;;;;;;:47;7496:53;;-1:-1:-1;7586:47:8;7647:382:::1;7671:12;7667:1;:16;7647:382;;;7712:40;::::0;;;:28:::1;:40;::::0;;;;:43;;-1:-1:-1;;;;;7712:61:8;::::1;::::0;:40;7753:1;;7712:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;7712:43:8::1;:61:::0;7708:307:::1;;7843:40;::::0;;;:28:::1;:40;::::0;;;;7884:16:::1;7899:1;7884:12:::0;:16:::1;:::i;:::-;7843:58;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;7797:40;;;:28:::1;:40:::0;;;;;;;:43;;-1:-1:-1;;;;;7843:58:8;;::::1;::::0;7838:1;;7797:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:104:::0;;-1:-1:-1;;;;;;7797:104:8::1;-1:-1:-1::0;;;;;7797:104:8;;;::::1;::::0;;;::::1;::::0;;;7923:40;;;:28:::1;:40:::0;;;;;;:46;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;7923:46:8;;;;;-1:-1:-1;;;;;;7923:46:8::1;::::0;;;;;7991:5:::1;;7708:307;7685:3:::0;::::1;::::0;::::1;:::i;:::-;;;;7647:382;;;;7461:578;;7456:3;;;;;:::i;:::-;;;;7373:666;;;-1:-1:-1::0;;;;;;8048:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:65:::1;::::0;8101:12;;8048:65:::1;:::i;:::-;;8128:9;8123:141;8143:23:::0;;::::1;8123:141;;;8187:28;:45;8216:12;;8229:1;8216:15;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;8187:45:::0;;-1:-1:-1;8187:45:8;;::::1;::::0;;;;;;-1:-1:-1;8187:45:8;;;:66;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;8187:66:8::1;-1:-1:-1::0;;;;;8187:66:8;::::1;;::::0;;8168:3;::::1;::::0;::::1;:::i;:::-;;;;8123:141;;;;8297:14;-1:-1:-1::0;;;;;8278:48:8::1;;8313:12;;8278:48;;;;;;;:::i;:::-;;;;;;;;6884:1449:::0;;;:::o;9580:420::-;-1:-1:-1;;;;;9706:34:8;;9673:4;9706:34;;;:25;:34;;;;;;;;:41;;9757:65;;;;;;;;;;;;;;;9706:41;9673:4;;9757:65;9706:34;:41;;9757:65;;9706:34;:41;9757:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9837:9;9832:140;9856:6;9852:1;:10;9832:140;;;9905:11;9887;9899:1;9887:14;;;;;;;;:::i;:::-;;;;;;;:29;9883:79;;9943:4;9936:11;;;;;;;9883:79;9864:3;;;;:::i;:::-;;;;9832:140;;;;9988:5;9981:12;;;;9580:420;;;;;:::o;8637:179::-;8769:40;;;;:28;:40;;;;;;;;;8762:47;;;;;;;;;;;;;;;;;8729:21;;8762:47;;;8769:40;8762:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8762:47:8;;;;;;;;;;;;;;;;;;;;;;;8637:179;;;:::o;2064:101:11:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;4347:919:8:-;1334:13:11;:11;:13::i;:::-;-1:-1:-1;;;;;4481:37:8;::::1;4473:81;;;;-1:-1:-1::0;;;4473:81:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4572:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;4564:104:::1;;;::::0;-1:-1:-1;;;4564:104:8;;6532:2:15;4564:104:8::1;::::0;::::1;6514:21:15::0;6571:2;6551:18;;;6544:30;6610:31;6590:18;;;6583:59;6659:18;;4564:104:8::1;6330:353:15::0;4564:104:8::1;4686:23:::0;4678:72:::1;;;::::0;-1:-1:-1;;;4678:72:8;;6890:2:15;4678:72:8::1;::::0;::::1;6872:21:15::0;6929:2;6909:18;;;6902:30;6968:34;6948:18;;;6941:62;-1:-1:-1;;;7019:18:15;;;7012:34;7063:19;;4678:72:8::1;6688:400:15::0;4678:72:8::1;4791:2;4768:25:::0;::::1;;4760:75;;;;-1:-1:-1::0;;;4760:75:8::1;;;;;;;:::i;:::-;4853:15;:22:::0;4878:2:::1;-1:-1:-1::0;4845:80:8::1;;;::::0;-1:-1:-1;;;4845:80:8;;7295:2:15;4845:80:8::1;::::0;::::1;7277:21:15::0;7334:2;7314:18;;;7307:30;7373:34;7353:18;;;7346:62;-1:-1:-1;;;7424:18:15;;;7417:38;7472:19;;4845:80:8::1;7093:404:15::0;4845:80:8::1;4935:15;:36:::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;4935:36:8::1;-1:-1:-1::0;;;;;4935:36:8;::::1;::::0;;::::1;::::0;;;-1:-1:-1;4981:50:8;;;:25:::1;4935:36;4981:50:::0;;;;:65:::1;::::0;5034:12;;4981:65:::1;:::i;:::-;;5061:9;5056:141;5076:23:::0;;::::1;5056:141;;;5120:28;:45;5149:12;;5162:1;5149:15;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;5120:45:::0;;-1:-1:-1;5120:45:8;;::::1;::::0;;;;;;-1:-1:-1;5120:45:8;;;:66;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5120:66:8::1;-1:-1:-1::0;;;;;5120:66:8;::::1;;::::0;;5101:3;::::1;::::0;::::1;:::i;:::-;;;;5056:141;;;;5230:14;-1:-1:-1::0;;;;;5211:48:8::1;;5246:12;;5211:48;;;;;;;:::i;5352:1442::-:0;1334:13:11;:11;:13::i;:::-;-1:-1:-1;;;;;5456:37:8;::::1;5448:81;;;;-1:-1:-1::0;;;5448:81:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5547:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;;5539:95:::1;;;::::0;-1:-1:-1;;;5539:95:8;;4303:2:15;5539:95:8::1;::::0;::::1;4285:21:15::0;4342:2;4322:18;;;4315:30;-1:-1:-1;;;4361:18:15;;;4354:50;4421:18;;5539:95:8::1;4101:344:15::0;5539:95:8::1;5661:15;:22:::0;5644:14:::1;5693:246;5717:6;5713:1;:10;5693:246;;;5770:14;-1:-1:-1::0;;;;;5748:36:8::1;:15;5764:1;5748:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5748:18:8::1;:36:::0;5744:185:::1;;5825:15;5841:10;5850:1;5841:6:::0;:10:::1;:::i;:::-;5825:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;5804:15:::1;:18:::0;;-1:-1:-1;;;;;5825:27:8;;::::1;::::0;5820:1;;5804:18;::::1;;;;;:::i;:::-;;;;;;;;;:48;;;;;-1:-1:-1::0;;;;;5804:48:8::1;;;;;-1:-1:-1::0;;;;;5804:48:8::1;;;;;;5870:15;:21;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;5870:21:8;;;;;-1:-1:-1;;;;;;5870:21:8::1;::::0;;;;;5909:5:::1;;5744:185;5725:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5693:246;;;;5953:23;5948:722;-1:-1:-1::0;;;;;6000:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;5982:75;::::1;5948:722;;;-1:-1:-1::0;;;;;6113:50:8;::::1;6092:18;6113:50:::0;;;:25:::1;:50;::::0;;;;:67;;6164:15;;6113:67;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;6217:40;;;:28:::1;:40:::0;;;;;;:47;6113:67;;-1:-1:-1;6217:47:8;6278:382:::1;6302:12;6298:1;:16;6278:382;;;6343:40;::::0;;;:28:::1;:40;::::0;;;;:43;;-1:-1:-1;;;;;6343:61:8;::::1;::::0;:40;6384:1;;6343:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6343:43:8::1;:61:::0;6339:307:::1;;6474:40;::::0;;;:28:::1;:40;::::0;;;;6515:16:::1;6530:1;6515:12:::0;:16:::1;:::i;:::-;6474:58;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;6428:40;;;:28:::1;:40:::0;;;;;;;:43;;-1:-1:-1;;;;;6474:58:8;;::::1;::::0;6469:1;;6428:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:104:::0;;-1:-1:-1;;;;;;6428:104:8::1;-1:-1:-1::0;;;;;6428:104:8;;;::::1;::::0;;;::::1;::::0;;;6554:40;;;:28:::1;:40:::0;;;;;;:46;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6554:46:8;;;;;-1:-1:-1;;;;;;6554:46:8::1;::::0;;;;;6622:5:::1;;6339:307;6316:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6278:382;;;;6078:592;;6059:17;;;;;:::i;:::-;;;;5948:722;;;-1:-1:-1::0;;;;;;6686:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;6679:57:::1;::::0;::::1;:::i;:::-;6751:36;::::0;-1:-1:-1;;;;;6751:36:8;::::1;::::0;::::1;::::0;;;::::1;5438:1356;5352:1442:::0;:::o;9197:303::-;-1:-1:-1;;;;;9331:50:8;;;;;;:25;:50;;;;;:57;9295:16;;9331:62;9323:103;;;;-1:-1:-1;;;9323:103:8;;7704:2:15;9323:103:8;;;7686:21:15;7743:2;7723:18;;;7716:30;7782;7762:18;;;7755:58;7830:18;;9323:103:8;7502:352:15;9323:103:8;-1:-1:-1;;;;;9443:50:8;;;;;;:25;:50;;;;;;;;;9436:57;;;;;;;;;;;;;;;;;9443:50;;9436:57;;9443:50;9436:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9197:303;;;:::o;8417:123::-;8478:21;8518:15;8511:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8511:22:8;;;;;;;;;;;;;;;;;;;;;;;8417:123;:::o;4194:70::-;3279:19:12;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:12;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:12;1713:19:13;:23;;;3387:66:12;;-1:-1:-1;3436:12:12;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:12;;8061:2:15;3325:201:12;;;8043:21:15;8100:2;8080:18;;;8073:30;8139:34;8119:18;;;8112:62;-1:-1:-1;;;8190:18:15;;;8183:44;8244:19;;3325:201:12;7859:410:15;3325:201:12;3536:12;:16;;-1:-1:-1;;3536:16:12;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:12;;;;;3562:65;4241:16:8::1;:14;:16::i;:::-;3651:14:12::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:12;;;3721:14;;-1:-1:-1;8426:36:15;;3721:14:12;;8414:2:15;8399:18;3721:14:12;;;;;;;3647:99;3269:483;4194:70:8:o;8898:205::-;-1:-1:-1;;;;;8992:34:8;;8972:4;8992:34;;;:25;:34;;;;;:41;:45;8988:87;;-1:-1:-1;9060:4:8;;8898:205;-1:-1:-1;8898:205:8:o;8988:87::-;-1:-1:-1;9091:5:8;;8898:205;-1:-1:-1;8898:205:8:o;2314:198:11:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:11;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:11;;8675:2:15;2394:73:11::1;::::0;::::1;8657:21:15::0;8714:2;8694:18;;;8687:30;8753:34;8733:18;;;8726:62;-1:-1:-1;;;8804:18:15;;;8797:36;8850:19;;2394:73:11::1;8473:402:15::0;2394:73:11::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:11;929:10:14;1662:23:11;1654:68;;;;-1:-1:-1;;;1654:68:11;;9082:2:15;1654:68:11;;;9064:21:15;;;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;9212:18;;1654:68:11;8880:356:15;2666:187:11;2758:6;;;-1:-1:-1;;;;;2774:17:11;;;-1:-1:-1;;;;;;2774:17:11;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:12;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:12;;;;;;;:::i;:::-;1065:26:11::1;5374:13:12::0;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:12;;;;;;;:::i;:::-;1176:32:11::1;929:10:14::0;1176:18:11::1;:32::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:145:15;-1:-1:-1;;;;;103:31:15;;93:42;;83:70;;149:1;146;139:12;164:783;278:6;286;294;347:2;335:9;326:7;322:23;318:32;315:52;;;363:1;360;353:12;315:52;402:9;389:23;421:45;460:5;421:45;:::i;:::-;485:5;-1:-1:-1;541:2:15;526:18;;513:32;564:18;594:14;;;591:34;;;621:1;618;611:12;591:34;659:6;648:9;644:22;634:32;;704:7;697:4;693:2;689:13;685:27;675:55;;726:1;723;716:12;675:55;766:2;753:16;792:2;784:6;781:14;778:34;;;808:1;805;798:12;778:34;861:7;856:2;846:6;843:1;839:14;835:2;831:23;827:32;824:45;821:65;;;882:1;879;872:12;821:65;913:2;909;905:11;895:21;;935:6;925:16;;;;;164:783;;;;;:::o;952:329::-;1020:6;1028;1081:2;1069:9;1060:7;1056:23;1052:32;1049:52;;;1097:1;1094;1087:12;1049:52;1136:9;1123:23;1155:45;1194:5;1155:45;:::i;:::-;1219:5;1271:2;1256:18;;;;1243:32;;-1:-1:-1;;;952:329:15:o;1478:180::-;1537:6;1590:2;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;-1:-1:-1;1629:23:15;;1478:180;-1:-1:-1;1478:180:15:o;1663:677::-;1853:2;1905:21;;;1975:13;;1878:18;;;1997:22;;;1824:4;;1853:2;2076:15;;;;2050:2;2035:18;;;1824:4;2119:195;2133:6;2130:1;2127:13;2119:195;;;2198:13;;-1:-1:-1;;;;;2194:39:15;2182:52;;2289:15;;;;2254:12;;;;2230:1;2148:9;2119:195;;;-1:-1:-1;2331:3:15;;1663:677;-1:-1:-1;;;;;;1663:677:15:o;2553:280::-;2631:6;2684:2;2672:9;2663:7;2659:23;2655:32;2652:52;;;2700:1;2697;2690:12;2652:52;2739:9;2726:23;2758:45;2797:5;2758:45;:::i;:::-;2822:5;2553:280;-1:-1:-1;;;2553:280:15:o;2838:632::-;3009:2;3061:21;;;3131:13;;3034:18;;;3153:22;;;2980:4;;3009:2;3232:15;;;;3206:2;3191:18;;;2980:4;3275:169;3289:6;3286:1;3283:13;3275:169;;;3350:13;;3338:26;;3419:15;;;;3384:12;;;;3311:1;3304:9;3275:169;;3741:355;3943:2;3925:21;;;3982:2;3962:18;;;3955:30;4021:33;4016:2;4001:18;;3994:61;4087:2;4072:18;;3741:355::o;4450:401::-;4652:2;4634:21;;;4691:2;4671:18;;;4664:30;4730:34;4725:2;4710:18;;4703:62;-1:-1:-1;;;4796:2:15;4781:18;;4774:35;4841:3;4826:19;;4450:401::o;5213:127::-;5274:10;5269:3;5265:20;5262:1;5255:31;5305:4;5302:1;5295:15;5329:4;5326:1;5319:15;5345:127;5406:10;5401:3;5397:20;5394:1;5387:31;5437:4;5434:1;5427:15;5461:4;5458:1;5451:15;5477:128;5544:9;;;5565:11;;;5562:37;;;5579:18;;:::i;5610:127::-;5671:10;5666:3;5662:20;5659:1;5652:31;5702:4;5699:1;5692:15;5726:4;5723:1;5716:15;5742:135;5781:3;5802:17;;;5799:43;;5822:18;;:::i;:::-;-1:-1:-1;5869:1:15;5858:13;;5742:135::o;5882:443::-;6071:2;6053:21;;;6090:18;;6083:34;;;-1:-1:-1;;;;;;6129:31:15;;6126:51;;;6173:1;6170;6163:12;6126:51;6207:6;6204:1;6200:14;6264:6;6256;6251:2;6240:9;6236:18;6223:48;6292:22;;;;6316:2;6288:31;;5882:443;-1:-1:-1;;;5882:443:15:o;9241:407::-;9443:2;9425:21;;;9482:2;9462:18;;;9455:30;9521:34;9516:2;9501:18;;9494:62;-1:-1:-1;;;9587:2:15;9572:18;;9565:41;9638:3;9623:19;;9241:407::o"},"methodIdentifiers":{"addTrustedIssuer(address,uint256[])":"9f63ea98","getTrustedIssuerClaimTopics(address)":"c28fb278","getTrustedIssuers()":"d9dd24c5","getTrustedIssuersForClaimTopic(uint256)":"52c111d1","hasClaimTopic(address,uint256)":"34a89987","init()":"e1c7392a","isTrustedIssuer(address)":"ef2ed1a4","owner()":"8da5cb5b","removeTrustedIssuer(address)":"b93d28eb","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateIssuerClaimTopics(address,uint256[])":"04bc7e84"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-addTrustedIssuer}.\"},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\"},\"getTrustedIssuers()\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuers}.\"},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\"},\"hasClaimTopic(address,uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-hasClaimTopic}.\"},\"isTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-isTrustedIssuer}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-removeTrustedIssuer}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/implementation/TrustedIssuersRegistry.sol\":\"TrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"contracts/registry/implementation/TrustedIssuersRegistry.sol\":{\"keccak256\":\"0x3fc430a428a0dc4e56a4b3b4083288caad373d9176e87628048ba73cc5125cb6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7ed10f10eaae9f195e63bb9fdb26082e44db0d14b051e142fb07cfb4684c8eb0\",\"dweb:/ipfs/QmQjLbbzekpZqXnB9JgbkipkhRTCR1ajNm4kRLoK4WUNGe\"]},\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"contracts/registry/storage/TIRStorage.sol\":{\"keccak256\":\"0x320af082f922d7c88ea00846398d23b9480e91a237424a2307a5bb0895eecb06\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://abd64af2d878cb98d57bad8fdd15af0a0c777ca1335a00e2907d98322fad914a\",\"dweb:/ipfs/QmaYbKrxc5vAzZTvtSHbRuxHShAJUnojyoafaSpujd2W42\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"events":{"ClaimTopicsUpdated(address,uint256[])":{"notice":"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"TrustedIssuerAdded(address,uint256[])":{"notice":"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"TrustedIssuerRemoved(address)":{"notice":"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"}},"kind":"user","methods":{},"version":1}}},"contracts/registry/interface/ITrustedIssuersRegistry.sol":{"ITrustedIssuersRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"}],"name":"ClaimTopicsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"}],"name":"TrustedIssuerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"}],"name":"TrustedIssuerRemoved","type":"event"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"},{"internalType":"uint256[]","name":"_claimTopics","type":"uint256[]"}],"name":"addTrustedIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"}],"name":"getTrustedIssuerClaimTopics","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedIssuers","outputs":[{"internalType":"contract IClaimIssuer[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"claimTopic","type":"uint256"}],"name":"getTrustedIssuersForClaimTopic","outputs":[{"internalType":"contract IClaimIssuer[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"},{"internalType":"uint256","name":"_claimTopic","type":"uint256"}],"name":"hasClaimTopic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"}],"name":"isTrustedIssuer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"}],"name":"removeTrustedIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"},{"internalType":"uint256[]","name":"_claimTopics","type":"uint256[]"}],"name":"updateIssuerClaimTopics","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addTrustedIssuer(address,uint256[])":{"details":"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers","params":{"_claimTopics":"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event","_trustedIssuer":"The ClaimIssuer contract address of the trusted claim issuer."}},"getTrustedIssuerClaimTopics(address)":{"details":"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.","params":{"_trustedIssuer":"the trusted issuer concerned."},"returns":{"_0":"The set of claim topics that the trusted issuer is allowed to emit"}},"getTrustedIssuers()":{"details":"Function for getting all the trusted claim issuers stored.","returns":{"_0":"array of all claim issuers registered."}},"getTrustedIssuersForClaimTopic(uint256)":{"details":"Function for getting all the trusted issuer allowed for a given claim topic.","params":{"claimTopic":"the claim topic to get the trusted issuers for."},"returns":{"_0":"array of all claim issuer addresses that are allowed for the given claim topic."}},"hasClaimTopic(address,uint256)":{"details":"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic","params":{"_claimTopic":"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it","_issuer":"the address of the trusted issuer's ClaimIssuer contract"},"returns":{"_0":"true if the issuer is trusted for this claim topic."}},"isTrustedIssuer(address)":{"details":"Checks if the ClaimIssuer contract is trusted","params":{"_issuer":"the address of the ClaimIssuer contract"},"returns":{"_0":"true if the issuer is trusted, false otherwise."}},"removeTrustedIssuer(address)":{"details":"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first","params":{"_trustedIssuer":"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event"}},"updateIssuerClaimTopics(address,uint256[])":{"details":"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics","params":{"_claimTopics":"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event","_trustedIssuer":"the claim issuer to update."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addTrustedIssuer(address,uint256[])":"9f63ea98","getTrustedIssuerClaimTopics(address)":"c28fb278","getTrustedIssuers()":"d9dd24c5","getTrustedIssuersForClaimTopic(uint256)":"52c111d1","hasClaimTopic(address,uint256)":"34a89987","isTrustedIssuer(address)":"ef2ed1a4","removeTrustedIssuer(address)":"b93d28eb","updateIssuerClaimTopics(address,uint256[])":"04bc7e84"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event\",\"_trustedIssuer\":\"The ClaimIssuer contract address of the trusted claim issuer.\"}},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\",\"params\":{\"_trustedIssuer\":\"the trusted issuer concerned.\"},\"returns\":{\"_0\":\"The set of claim topics that the trusted issuer is allowed to emit\"}},\"getTrustedIssuers()\":{\"details\":\"Function for getting all the trusted claim issuers stored.\",\"returns\":{\"_0\":\"array of all claim issuers registered.\"}},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"Function for getting all the trusted issuer allowed for a given claim topic.\",\"params\":{\"claimTopic\":\"the claim topic to get the trusted issuers for.\"},\"returns\":{\"_0\":\"array of all claim issuer addresses that are allowed for the given claim topic.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic\",\"params\":{\"_claimTopic\":\"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\",\"_issuer\":\"the address of the trusted issuer's ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted for this claim topic.\"}},\"isTrustedIssuer(address)\":{\"details\":\"Checks if the ClaimIssuer contract is trusted\",\"params\":{\"_issuer\":\"the address of the ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted, false otherwise.\"}},\"removeTrustedIssuer(address)\":{\"details\":\"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first\",\"params\":{\"_trustedIssuer\":\"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event\"}},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event\",\"_trustedIssuer\":\"the claim issuer to update.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}","userdoc":{"events":{"ClaimTopicsUpdated(address,uint256[])":{"notice":"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"TrustedIssuerAdded(address,uint256[])":{"notice":"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"TrustedIssuerRemoved(address)":{"notice":"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"}},"kind":"user","methods":{},"version":1}}},"contracts/registry/storage/TIRStorage.sol":{"TIRStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain."},"_claimTopicsToTrustedIssuers":{"details":"Mapping between a claim topic and the allowed trusted issuers for it."},"_trustedIssuerClaimTopics":{"details":"Mapping between a trusted issuer address and its corresponding claimTopics."},"_trustedIssuers":{"details":"Array containing all TrustedIssuers identity contract address."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220873e25f315e4863ae420bbcf10aeffbed755365177264e4af997a4310b3f538d64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 RETURNDATACOPY 0x25 RETURN ISZERO 0xE4 DUP7 GASPRICE 0xE4 KECCAK256 0xBB 0xCF LT 0xAE SELFDESTRUCT 0xBE 0xD7 SSTORE CALLDATASIZE MLOAD PUSH24 0x264E4AF997A4310B3F538D64736F6C634300081100330000 ","sourceMap":"3912:677:10:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220873e25f315e4863ae420bbcf10aeffbed755365177264e4af997a4310b3f538d64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 RETURNDATACOPY 0x25 RETURN ISZERO 0xE4 DUP7 GASPRICE 0xE4 KECCAK256 0xBB 0xCF LT 0xAE SELFDESTRUCT 0xBE 0xD7 SSTORE CALLDATASIZE MLOAD PUSH24 0x264E4AF997A4310B3F538D64736F6C634300081100330000 ","sourceMap":"3912:677:10:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"},\"_claimTopicsToTrustedIssuers\":{\"details\":\"Mapping between a claim topic and the allowed trusted issuers for it.\"},\"_trustedIssuerClaimTopics\":{\"details\":\"Mapping between a trusted issuer address and its corresponding claimTopics.\"},\"_trustedIssuers\":{\"details\":\"Array containing all TrustedIssuers identity contract address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/storage/TIRStorage.sol\":\"TIRStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"contracts/registry/storage/TIRStorage.sol\":{\"keccak256\":\"0x320af082f922d7c88ea00846398d23b9480e91a237424a2307a5bb0895eecb06\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://abd64af2d878cb98d57bad8fdd15af0a0c777ca1335a00e2907d98322fad914a\",\"dweb:/ipfs/QmaYbKrxc5vAzZTvtSHbRuxHShAJUnojyoafaSpujd2W42\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f90afe6578d079bf183d14233e04d993ee0b7bf197d6a55e87dbc0c3f934d6cb64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EXP INVALID PUSH6 0x78D079BF183D EQ 0x23 RETURNDATACOPY DIV 0xD9 SWAP4 0xEE SIGNEXTEND PUSH28 0xF197D6A55E87DBC0C3F934D6CB64736F6C6343000811003300000000 ","sourceMap":"194:9180:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f90afe6578d079bf183d14233e04d993ee0b7bf197d6a55e87dbc0c3f934d6cb64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EXP INVALID PUSH6 0x78D079BF183D EQ 0x23 RETURNDATACOPY DIV 0xD9 SWAP4 0xEE SIGNEXTEND PUSH28 0xF197D6A55E87DBC0C3F934D6CB64736F6C6343000811003300000000 ","sourceMap":"194:9180:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}}}}}