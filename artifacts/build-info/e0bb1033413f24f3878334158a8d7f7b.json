{"id":"e0bb1033413f24f3878334158a8d7f7b","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\n}\n"},"@onchain-id/solidity/contracts/interface/IERC734.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"},"@onchain-id/solidity/contracts/interface/IERC735.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"},"@onchain-id/solidity/contracts/interface/IIdentity.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"contracts/compliance/modular/IModularCompliance.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ninterface IModularCompliance {\n\n    /// events\n\n    /**\n     *  @dev Event emitted for each executed interaction with a module contract.\n     *  For gas efficiency, only the interaction calldata selector (first 4\n     *  bytes) is included in the event. For interactions without calldata or\n     *  whose calldata is shorter than 4 bytes, the selector will be `0`.\n     */\n    event ModuleInteraction(address indexed target, bytes4 selector);\n\n    /**\n     *  this event is emitted when a token has been bound to the compliance contract\n     *  the event is emitted by the bindToken function\n     *  `_token` is the address of the token to bind\n     */\n    event TokenBound(address _token);\n\n    /**\n     *  this event is emitted when a token has been unbound from the compliance contract\n     *  the event is emitted by the unbindToken function\n     *  `_token` is the address of the token to unbind\n     */\n    event TokenUnbound(address _token);\n\n    /**\n     *  this event is emitted when a module has been added to the list of modules bound to the compliance contract\n     *  the event is emitted by the addModule function\n     *  `_module` is the address of the compliance module\n     */\n    event ModuleAdded(address indexed _module);\n\n    /**\n     *  this event is emitted when a module has been removed from the list of modules bound to the compliance contract\n     *  the event is emitted by the removeModule function\n     *  `_module` is the address of the compliance module\n     */\n    event ModuleRemoved(address indexed _module);\n\n    /// functions\n\n    /**\n     *  @dev binds a token to the compliance contract\n     *  @param _token address of the token to bind\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a TokenBound event\n     */\n    function bindToken(address _token) external;\n\n    /**\n     *  @dev unbinds a token from the compliance contract\n     *  @param _token address of the token to unbind\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a TokenUnbound event\n     */\n    function unbindToken(address _token) external;\n\n    /**\n     *  @dev adds a module to the list of compliance modules\n     *  @param _module address of the module to add\n     *  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a ModuleAdded event\n     */\n    function addModule(address _module) external;\n\n    /**\n     *  @dev removes a module from the list of compliance modules\n     *  @param _module address of the module to remove\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a ModuleRemoved event\n     */\n    function removeModule(address _module) external;\n\n    /**\n     *  @dev calls any function on bound modules\n     *  can be called only on bound modules\n     *  @param callData the bytecode for interaction with the module, abi encoded\n     *  @param _module The address of the module\n     *  This function can be called only by the modular compliance owner\n     *  emits a `ModuleInteraction` event\n     */\n    function callModuleFunction(bytes calldata callData, address _module) external;\n\n    /**\n     *  @dev function called whenever tokens are transferred\n     *  from one wallet to another\n     *  this function can update state variables in the modules bound to the compliance\n     *  these state variables being used by the module checks to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the modules\n     *  This function can be called ONLY by the token contract bound to the compliance\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     *  This function calls moduleTransferAction() on each module bound to the compliance contract\n     */\n    function transferred(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external;\n\n    /**\n     *  @dev function called whenever tokens are created on a wallet\n     *  this function can update state variables in the modules bound to the compliance\n     *  these state variables being used by the module checks to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the modules\n     *  This function can be called ONLY by the token contract bound to the compliance\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the minting\n     *  This function calls moduleMintAction() on each module bound to the compliance contract\n     */\n    function created(address _to, uint256 _amount) external;\n\n    /**\n     *  @dev function called whenever tokens are destroyed from a wallet\n     *  this function can update state variables in the modules bound to the compliance\n     *  these state variables being used by the module checks to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the modules\n     *  This function can be called ONLY by the token contract bound to the compliance\n     *  @param _from The address on which tokens are burnt\n     *  @param _amount The amount of tokens involved in the burn\n     *  This function calls moduleBurnAction() on each module bound to the compliance contract\n     */\n    function destroyed(address _from, uint256 _amount) external;\n\n    /**\n     *  @dev checks that the transfer is compliant.\n     *  default compliance always returns true\n     *  READ ONLY FUNCTION, this function cannot be used to increment\n     *  counters, emit events, ...\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     *  This function will call moduleCheck() on every module bound to the compliance\n     *  If each of the module checks return TRUE, this function will return TRUE as well\n     *  returns FALSE otherwise\n     */\n    function canTransfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external view returns (bool);\n\n    /**\n     *  @dev getter for the modules bound to the compliance contract\n     *  returns address array of module contracts bound to the compliance\n     */\n    function getModules() external view returns (address[] memory);\n\n    /**\n     *  @dev getter for the address of the token bound\n     *  returns the address of the token\n     */\n    function getTokenBound() external view returns (address);\n\n    /**\n     *  @dev checks if a module is bound to the compliance contract\n     *  returns true if module is bound, false otherwise\n     */\n    function isModuleBound(address _module) external view returns (bool);\n}\n"},"contracts/compliance/modular/MCStorage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ncontract MCStorage {\n    /// token linked to the compliance contract\n    address internal _tokenBound;\n\n    /// Array of modules bound to the compliance\n    address[] internal _modules;\n\n    /// Mapping of module binding status\n    mapping(address => bool) internal _moduleBound;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}\n"},"contracts/compliance/modular/ModularCompliance.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"../../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../../token/IToken.sol\";\nimport \"./IModularCompliance.sol\";\nimport \"./MCStorage.sol\";\nimport \"./modules/IModule.sol\";\n\ncontract ModularCompliance is IModularCompliance, OwnableUpgradeable, MCStorage {\n    /// modifiers\n\n    /**\n     * @dev Throws if called by any address that is not a token bound to the compliance.\n     */\n    modifier onlyToken() {\n        require(msg.sender == _tokenBound, \"error : this address is not a token bound to the compliance contract\");\n        _;\n    }\n\n    function init() external initializer {\n        __Ownable_init();\n    }\n\n    /**\n     *  @dev See {IModularCompliance-bindToken}.\n     */\n    function bindToken(address _token) external override {\n        require(owner() == msg.sender || (_tokenBound == address(0) && msg.sender == _token), \"only owner or token can call\");\n        require(_token != address(0), \"invalid argument - zero address\");\n        _tokenBound = _token;\n        emit TokenBound(_token);\n    }\n\n    /**\n     *  @dev See {IModularCompliance-unbindToken}.\n     */\n    function unbindToken(address _token) external override {\n        require(owner() == msg.sender || msg.sender == _token, \"only owner or token can call\");\n        require(_token == _tokenBound, \"This token is not bound\");\n        require(_token != address(0), \"invalid argument - zero address\");\n        delete _tokenBound;\n        emit TokenUnbound(_token);\n    }\n\n    /**\n     *  @dev See {IModularCompliance-addModule}.\n     */\n    function addModule(address _module) external override onlyOwner {\n        require(_module != address(0), \"invalid argument - zero address\");\n        require(!_moduleBound[_module], \"module already bound\");\n        require(_modules.length <= 24, \"cannot add more than 25 modules\");\n        IModule module = IModule(_module);\n        if (!module.isPlugAndPlay()) {\n            require(module.canComplianceBind(address(this)), \"compliance is not suitable for binding to the module\");\n        }\n\n        module.bindCompliance(address(this));\n        _modules.push(_module);\n        _moduleBound[_module] = true;\n        emit ModuleAdded(_module);\n    }\n\n    /**\n     *  @dev See {IModularCompliance-removeModule}.\n     */\n    function removeModule(address _module) external override onlyOwner {\n        require(_module != address(0), \"invalid argument - zero address\");\n        require(_moduleBound[_module], \"module not bound\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_modules[i] == _module) {\n                IModule(_module).unbindCompliance(address(this));\n                _modules[i] = _modules[length - 1];\n                _modules.pop();\n                _moduleBound[_module] = false;\n                emit ModuleRemoved(_module);\n                break;\n            }\n        }\n    }\n\n    /**\n     *  @dev See {IModularCompliance-transferred}.\n     */\n    function transferred(address _from, address _to, uint256 _value) external override onlyToken {\n        require(_from != address(0) && _to != address(0), \"invalid argument - zero address\");\n        require(_value > 0, \"invalid argument - no value transfer\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            IModule(_modules[i]).moduleTransferAction(_from, _to, _value);\n        }\n    }\n\n    /**\n     *  @dev See {IModularCompliance-created}.\n     */\n    function created(address _to, uint256 _value) external override onlyToken {\n        require(_to != address(0), \"invalid argument - zero address\");\n        require(_value > 0, \"invalid argument - no value mint\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            IModule(_modules[i]).moduleMintAction(_to, _value);\n        }\n    }\n\n    /**\n     *  @dev See {IModularCompliance-destroyed}.\n     */\n    function destroyed(address _from, uint256 _value) external override onlyToken {\n        require(_from != address(0), \"invalid argument - zero address\");\n        require(_value > 0, \"invalid argument - no value burn\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            IModule(_modules[i]).moduleBurnAction(_from, _value);\n        }\n    }\n\n    /**\n     *  @dev see {IModularCompliance-callModuleFunction}.\n     */\n    function callModuleFunction(bytes calldata callData, address _module) external override onlyOwner {\n        require(_moduleBound[_module], \"call only on bound module\");\n        // NOTE: Use assembly to call the interaction instead of a low level\n        // call for two reasons:\n        // - We don't want to copy the return data, since we discard it for\n        // interactions.\n        // - Solidity will under certain conditions generate code to copy input\n        // calldata twice to memory (the second being a \"memcopy loop\").\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let freeMemoryPointer := mload(0x40)\n            calldatacopy(freeMemoryPointer, callData.offset, callData.length)\n            if iszero(call(gas(), _module, 0, freeMemoryPointer, callData.length, 0, 0)) {\n                returndatacopy(0, 0, returndatasize())\n                revert(0, returndatasize())\n            }\n        }\n\n        emit ModuleInteraction(_module, _selector(callData));\n    }\n\n    /**\n     *  @dev See {IModularCompliance-isModuleBound}.\n     */\n    function isModuleBound(address _module) external view override returns (bool) {\n        return _moduleBound[_module];\n    }\n\n    /**\n     *  @dev See {IModularCompliance-getModules}.\n     */\n    function getModules() external view override returns (address[] memory) {\n        return _modules;\n    }\n\n    /**\n     *  @dev See {IModularCompliance-getTokenBound}.\n     */\n    function getTokenBound() external view override returns (address) {\n        return _tokenBound;\n    }\n\n    /**\n     *  @dev See {IModularCompliance-canTransfer}.\n     */\n    function canTransfer(address _from, address _to, uint256 _value) external view override returns (bool) {\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (!IModule(_modules[i]).moduleCheck(_from, _to, _value, address(this))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /// @dev Extracts the Solidity ABI selector for the specified interaction.\n    /// @param callData Interaction data.\n    /// @return result The 4 byte function selector of the call encoded in\n    /// this interaction.\n    function _selector(bytes calldata callData) internal pure returns (bytes4 result) {\n        if (callData.length >= 4) {\n            // NOTE: Read the first word of the interaction's calldata. The\n            // value does not need to be shifted since `bytesN` values are left\n            // aligned, and the value does not need to be masked since masking\n            // occurs when the value is accessed and not stored:\n            // <https://docs.soliditylang.org/en/v0.7.6/abi-spec.html#encoding-of-indexed-event-parameters>\n            // <https://docs.soliditylang.org/en/v0.7.6/assembly.html#access-to-external-variables-functions-and-libraries>\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                result := calldataload(callData.offset)\n            }\n        }\n    }\n}\n"},"contracts/compliance/modular/modules/IModule.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ninterface IModule {\n    /// events\n\n    /**\n     *  this event is emitted when the compliance contract is bound to the module.\n     *  the event is emitted by the bindCompliance function\n     *  `_compliance` is the address of the compliance contract being bound\n     */\n    event ComplianceBound(address indexed _compliance);\n\n    /**\n     *  this event is emitted when the compliance contract is unbound from the module.\n     *  the event is emitted by the unbindCompliance function\n     *  `_compliance` is the address of the compliance contract being unbound\n     */\n    event ComplianceUnbound(address indexed _compliance);\n\n    /// functions\n\n    /**\n     *  @dev binds the module to a compliance contract\n     *  once the module is bound, the compliance contract can interact with the module\n     *  this function can be called ONLY by the compliance contract itself (_compliance), through the\n     *  addModule function, which calls bindCompliance\n     *  the module cannot be already bound to the compliance\n     *  @param _compliance address of the compliance contract\n     *  Emits a ComplianceBound event\n     */\n    function bindCompliance(address _compliance) external;\n\n    /**\n     *  @dev unbinds the module from a compliance contract\n     *  once the module is unbound, the compliance contract cannot interact with the module anymore\n     *  this function can be called ONLY by the compliance contract itself (_compliance), through the\n     *  removeModule function, which calls unbindCompliance\n     *  @param _compliance address of the compliance contract\n     *  Emits a ComplianceUnbound event\n     */\n    function unbindCompliance(address _compliance) external;\n\n    /**\n     *  @dev action performed on the module during a transfer action\n     *  this function is used to update variables of the module upon transfer if it is required\n     *  if the module does not require state updates in case of transfer, this function remains empty\n     *  This function can be called ONLY by the compliance contract itself (_compliance)\n     *  This function can be called only on a compliance contract that is bound to the module\n     *  @param _from address of the transfer sender\n     *  @param _to address of the transfer receiver\n     *  @param _value amount of tokens sent\n     */\n    function moduleTransferAction(address _from, address _to, uint256 _value) external;\n\n    /**\n     *  @dev action performed on the module during a mint action\n     *  this function is used to update variables of the module upon minting if it is required\n     *  if the module does not require state updates in case of mint, this function remains empty\n     *  This function can be called ONLY by the compliance contract itself (_compliance)\n     *  This function can be called only on a compliance contract that is bound to the module\n     *  @param _to address used for minting\n     *  @param _value amount of tokens minted\n     */\n    function moduleMintAction(address _to, uint256 _value) external;\n\n    /**\n     *  @dev action performed on the module during a burn action\n     *  this function is used to update variables of the module upon burning if it is required\n     *  if the module does not require state updates in case of burn, this function remains empty\n     *  This function can be called ONLY by the compliance contract itself (_compliance)\n     *  This function can be called only on a compliance contract that is bound to the module\n     *  @param _from address on which tokens are burnt\n     *  @param _value amount of tokens burnt\n     */\n    function moduleBurnAction(address _from, uint256 _value) external;\n\n    /**\n     *  @dev compliance check on the module for a specific transaction on a specific compliance contract\n     *  this function is used to check if the transfer is allowed by the module\n     *  This function can be called only on a compliance contract that is bound to the module\n     *  @param _from address of the transfer sender\n     *  @param _to address of the transfer receiver\n     *  @param _value amount of tokens sent\n     *  @param _compliance address of the compliance contract concerned by the transfer action\n     *  the function returns TRUE if the module allows the transfer, FALSE otherwise\n     */\n    function moduleCheck(address _from, address _to, uint256 _value, address _compliance) external view returns (bool);\n\n    /**\n     *  @dev getter for compliance binding status on module\n     *  @param _compliance address of the compliance contract\n     */\n    function isComplianceBound(address _compliance) external view returns (bool);\n\n    /**\n     *  @dev checks whether compliance is suitable to bind to the module.\n     *  @param _compliance address of the compliance contract\n     */\n    function canComplianceBind(address _compliance) external view returns (bool);\n\n    /**\n     *  @dev getter for module plug & play status\n     */\n    function isPlugAndPlay() external pure returns (bool);\n\n    /**\n     *  @dev getter for the name of the module\n     *  @return _name the name of the module\n     */\n    function name() external pure returns (string memory _name);\n}\n"},"contracts/registry/interface/IClaimTopicsRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ninterface IClaimTopicsRegistry {\n    /**\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n     *  the event is emitted by the 'addClaimTopic' function\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\n     */\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    /**\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n     *  the event is emitted by the 'removeClaimTopic' function\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\n     */\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    /**\n     * @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n     * Only owner can call.\n     * emits `ClaimTopicAdded` event\n     * cannot add more than 15 topics for 1 token as adding more could create gas issues\n     * @param _claimTopic The claim topic index\n     */\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n     *  Only owner can call.\n     *  emits `ClaimTopicRemoved` event\n     *  @param _claimTopic The claim topic index\n     */\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Get the trusted claim topics for the security token\n     *  @return Array of trusted claim topics\n     */\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"},"contracts/registry/interface/IIdentityRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"./ITrustedIssuersRegistry.sol\";\nimport \"./IClaimTopicsRegistry.sol\";\nimport \"./IIdentityRegistryStorage.sol\";\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistry {\n    /**\n     *  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\n     */\n    event ClaimTopicsRegistrySet(address indexed claimTopicsRegistry);\n\n    /**\n     *  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `identityStorage` is the address of the Identity Registry Storage contract\n     */\n    event IdentityStorageSet(address indexed identityStorage);\n\n    /**\n     *  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\n     */\n    event TrustedIssuersRegistrySet(address indexed trustedIssuersRegistry);\n\n    /**\n     *  this event is emitted when an Identity is registered into the Identity Registry.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityRegistered(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the Identity Registry.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityRemoved(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityUpdated(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryUpdated(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  @dev Register an identity contract corresponding to a user address.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityRegistered` event\n     */\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the identity registry.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityRemoved` event\n     */\n    function deleteIdentity(address _userAddress) external;\n\n    /**\n     *  @dev Replace the actual identityRegistryStorage contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _identityRegistryStorage The address of the new Identity Registry Storage\n     *  emits `IdentityStorageSet` event\n     */\n    function setIdentityRegistryStorage(address _identityRegistryStorage) external;\n\n    /**\n     *  @dev Replace the actual claimTopicsRegistry contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _claimTopicsRegistry The address of the new claim Topics Registry\n     *  emits `ClaimTopicsRegistrySet` event\n     */\n    function setClaimTopicsRegistry(address _claimTopicsRegistry) external;\n\n    /**\n     *  @dev Replace the actual trustedIssuersRegistry contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\n     *  emits `TrustedIssuersRegistrySet` event\n     */\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryUpdated` event\n     */\n    function updateCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityUpdated` event\n     */\n    function updateIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @dev function allowing to register identities in batch\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  Requires that none of the users has an identity contract already registered.\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses of the users\n     *  @param _identities The addresses of the corresponding identity contracts\n     *  @param _countries The countries of the corresponding investors\n     *  emits _userAddresses.length `IdentityRegistered` events\n     */\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external;\n\n    /**\n     *  @dev This functions checks whether a wallet has its Identity registered or not\n     *  in the Identity Registry.\n     *  @param _userAddress The address of the user to be checked.\n     *  @return 'True' if the address is contained in the Identity Registry, 'false' if not.\n     */\n    function contains(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev This functions checks whether an identity contract\n     *  corresponding to the provided user address has the required claims or not based\n     *  on the data fetched from trusted issuers registry and from the claim topics registry\n     *  @param _userAddress The address of the user to be verified.\n     *  @return 'True' if the address is verified, 'false' if not.\n     */\n    function isVerified(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function identity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function investorCountry(address _userAddress) external view returns (uint16);\n\n    /**\n     *  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\n     */\n    function identityStorage() external view returns (IIdentityRegistryStorage);\n\n    /**\n     *  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\n     */\n    function issuersRegistry() external view returns (ITrustedIssuersRegistry);\n\n    /**\n     *  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\n     */\n    function topicsRegistry() external view returns (IClaimTopicsRegistry);\n}\n"},"contracts/registry/interface/IIdentityRegistryStorage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n\n    /// events\n\n    /**\n     *  this event is emitted when an Identity is registered into the storage contract.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityStored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the storage contract.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityUnstored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityModified(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryModified(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  this event is emitted when an Identity Registry is bound to the storage contract\n     *  the event is emitted by the 'addIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry added\n     */\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    /**\n     *  this event is emitted when an Identity Registry is unbound from the storage contract\n     *  the event is emitted by the 'removeIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry removed\n     */\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    /**\n     *  @dev adds an identity contract corresponding to a user address in the storage.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityStored` event\n     */\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the storage.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityUnstored` event\n     */\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryModified` event\n     */\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityModified` event\n     */\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n     *  cannot bind more than 300 IR to 1 IRS\n     *  @param _identityRegistry The identity registry address to add.\n     */\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n     *  @param _identityRegistry The identity registry address to remove.\n     */\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @dev Returns the identity registries linked to the storage contract\n     */\n    function linkedIdentityRegistries() external view returns (address[] memory);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedIdentity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedInvestorCountry(address _userAddress) external view returns (uint16);\n}\n"},"contracts/registry/interface/ITrustedIssuersRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    /**\n     *  this event is emitted when a trusted issuer is added in the registry.\n     *  the event is emitted by the addTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  this event is emitted when a trusted issuer is removed from the registry.\n     *  the event is emitted by the removeTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     */\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    /**\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n     *  the event is emitted by the updateIssuerClaimTopics function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\n     *  Requires that a ClaimIssuer contract doesn't already exist\n     *  Requires that the claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  Requires that there is no more than 50 Trusted issuers\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerAdded` event\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n     *  Requires that the claim issuer contract to be registered first\n     *  @param _trustedIssuer the claim issuer to remove.\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerRemoved` event\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    /**\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n     *  Requires that this ClaimIssuer contract already exists in the registry\n     *  Requires that the provided claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  @param _trustedIssuer the claim issuer to update.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `ClaimTopicsUpdated` event\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Function for getting all the trusted claim issuers stored.\n     *  @return array of all claim issuers registered.\n     */\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n     *  @param claimTopic the claim topic to get the trusted issuers for.\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Checks if the ClaimIssuer contract is trusted\n     *  @param _issuer the address of the ClaimIssuer contract\n     *  @return true if the issuer is trusted, false otherwise.\n     */\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    /**\n     *  @dev Function for getting all the claim topic of trusted claim issuer\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n     *  @param _trustedIssuer the trusted issuer concerned.\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\n\n    /**\n     *  @dev Function for checking if the trusted claim issuer is allowed\n     *  to emit a certain claim topic\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n     *  @return true if the issuer is trusted for this claim topic.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\n}\n"},"contracts/token/IToken.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"../registry/interface/IIdentityRegistry.sol\";\nimport \"../compliance/modular/IModularCompliance.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @dev interface\ninterface IToken is IERC20 {\n\n    /// events\n\n    /**\n     *  this event is emitted when the token information is updated.\n     *  the event is emitted by the token init function and by the setTokenInformation function\n     *  `_newName` is the name of the token\n     *  `_newSymbol` is the symbol of the token\n     *  `_newDecimals` is the decimals of the token\n     *  `_newVersion` is the version of the token, current version is 3.0\n     *  `_newOnchainID` is the address of the onchainID of the token\n     */\n    event UpdatedTokenInformation(string indexed _newName, string indexed _newSymbol, uint8 _newDecimals, string\n    _newVersion, address indexed _newOnchainID);\n\n    /**\n     *  this event is emitted when the IdentityRegistry has been set for the token\n     *  the event is emitted by the token constructor and by the setIdentityRegistry function\n     *  `_identityRegistry` is the address of the Identity Registry of the token\n     */\n    event IdentityRegistryAdded(address indexed _identityRegistry);\n\n    /**\n     *  this event is emitted when the Compliance has been set for the token\n     *  the event is emitted by the token constructor and by the setCompliance function\n     *  `_compliance` is the address of the Compliance contract of the token\n     */\n    event ComplianceAdded(address indexed _compliance);\n\n    /**\n     *  this event is emitted when an investor successfully recovers his tokens\n     *  the event is emitted by the recoveryAddress function\n     *  `_lostWallet` is the address of the wallet that the investor lost access to\n     *  `_newWallet` is the address of the wallet that the investor provided for the recovery\n     *  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery\n     */\n    event RecoverySuccess(address indexed _lostWallet, address indexed _newWallet, address indexed _investorOnchainID);\n\n    /**\n     *  this event is emitted when the wallet of an investor is frozen or unfrozen\n     *  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n     *  `_isFrozen` is the freezing status of the wallet\n     *  if `_isFrozen` equals `true` the wallet is frozen after emission of the event\n     *  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event\n     *  `_owner` is the address of the agent who called the function to freeze the wallet\n     */\n    event AddressFrozen(address indexed _userAddress, bool indexed _isFrozen, address indexed _owner);\n\n    /**\n     *  this event is emitted when a certain amount of tokens is frozen on a wallet\n     *  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n     *  `_amount` is the amount of tokens that are frozen\n     */\n    event TokensFrozen(address indexed _userAddress, uint256 _amount);\n\n    /**\n     *  this event is emitted when a certain amount of tokens is unfrozen on a wallet\n     *  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n     *  `_amount` is the amount of tokens that are unfrozen\n     */\n    event TokensUnfrozen(address indexed _userAddress, uint256 _amount);\n\n    /**\n     *  this event is emitted when the token is paused\n     *  the event is emitted by the pause function\n     *  `_userAddress` is the address of the wallet that called the pause function\n     */\n    event Paused(address _userAddress);\n\n    /**\n     *  this event is emitted when the token is unpaused\n     *  the event is emitted by the unpause function\n     *  `_userAddress` is the address of the wallet that called the unpause function\n     */\n    event Unpaused(address _userAddress);\n\n    /// functions\n\n    /**\n     *  @dev sets the token name\n     *  @param _name the name of token to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits a `UpdatedTokenInformation` event\n     */\n    function setName(string calldata _name) external;\n\n    /**\n     *  @dev sets the token symbol\n     *  @param _symbol the token symbol to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits a `UpdatedTokenInformation` event\n     */\n    function setSymbol(string calldata _symbol) external;\n\n    /**\n     *  @dev sets the onchain ID of the token\n     *  @param _onchainID the address of the onchain ID to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits a `UpdatedTokenInformation` event\n     */\n    function setOnchainID(address _onchainID) external;\n\n    /**\n     *  @dev pauses the token contract, when contract is paused investors cannot transfer tokens anymore\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `Paused` event\n     */\n    function pause() external;\n\n    /**\n     *  @dev unpauses the token contract, when contract is unpaused investors can transfer tokens\n     *  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits an `Unpaused` event\n     */\n    function unpause() external;\n\n    /**\n     *  @dev sets an address frozen status for this token.\n     *  @param _userAddress The address for which to update frozen status\n     *  @param _freeze Frozen status of the address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits an `AddressFrozen` event\n     */\n    function setAddressFrozen(address _userAddress, bool _freeze) external;\n\n    /**\n     *  @dev freezes token amount specified for given address.\n     *  @param _userAddress The address for which to update frozen tokens\n     *  @param _amount Amount of Tokens to be frozen\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensFrozen` event\n     */\n    function freezePartialTokens(address _userAddress, uint256 _amount) external;\n\n    /**\n     *  @dev unfreezes token amount specified for given address\n     *  @param _userAddress The address for which to update frozen tokens\n     *  @param _amount Amount of Tokens to be unfrozen\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event\n     */\n    function unfreezePartialTokens(address _userAddress, uint256 _amount) external;\n\n    /**\n     *  @dev sets the Identity Registry for the token\n     *  @param _identityRegistry the address of the Identity Registry to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits an `IdentityRegistryAdded` event\n     */\n    function setIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @dev sets the compliance contract of the token\n     *  @param _compliance the address of the compliance contract to set\n     *  Only the owner of the token smart contract can call this function\n     *  calls bindToken on the compliance contract\n     *  emits a `ComplianceAdded` event\n     */\n    function setCompliance(address _compliance) external;\n\n    /**\n     *  @dev force a transfer of tokens between 2 whitelisted wallets\n     *  In case the `from` address has not enough free tokens (unfrozen tokens)\n     *  but has a total balance higher or equal to the `amount`\n     *  the amount of frozen tokens is reduced in order to have enough free tokens\n     *  to proceed the transfer, in such a case, the remaining balance on the `from`\n     *  account is 100% composed of frozen tokens post-transfer.\n     *  Require that the `to` address is a verified address,\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The number of tokens to transfer\n     *  @return `true` if successful and revert if unsuccessful\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`\n     *  emits a `Transfer` event\n     */\n    function forcedTransfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external returns (bool);\n\n    /**\n     *  @dev mint tokens on a wallet\n     *  Improved version of default mint method. Tokens can be minted\n     *  to an address if only it is a verified address as per the security token.\n     *  @param _to Address to mint the tokens to.\n     *  @param _amount Amount of tokens to mint.\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `Transfer` event\n     */\n    function mint(address _to, uint256 _amount) external;\n\n    /**\n     *  @dev burn tokens on a wallet\n     *  In case the `account` address has not enough free tokens (unfrozen tokens)\n     *  but has a total balance higher or equal to the `value` amount\n     *  the amount of frozen tokens is reduced in order to have enough free tokens\n     *  to proceed the burn, in such a case, the remaining balance on the `account`\n     *  is 100% composed of frozen tokens post-transaction.\n     *  @param _userAddress Address to burn the tokens from.\n     *  @param _amount Amount of tokens to burn.\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`\n     *  emits a `Transfer` event\n     */\n    function burn(address _userAddress, uint256 _amount) external;\n\n    /**\n     *  @dev recovery function used to force transfer tokens from a\n     *  lost wallet to a new wallet for an investor.\n     *  @param _lostWallet the wallet that the investor lost\n     *  @param _newWallet the newly provided wallet on which tokens have to be transferred\n     *  @param _investorOnchainID the onchainID of the investor asking for a recovery\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful\n     *  emits a `Transfer` event if the recovery process is successful\n     *  emits a `RecoverySuccess` event if the recovery process is successful\n     *  emits a `RecoveryFails` event if the recovery process fails\n     */\n    function recoveryAddress(\n        address _lostWallet,\n        address _newWallet,\n        address _investorOnchainID\n    ) external returns (bool);\n\n    /**\n     *  @dev function allowing to issue transfers in batch\n     *  Require that the msg.sender and `to` addresses are not frozen.\n     *  Require that the total value should not exceed available balance.\n     *  Require that the `to` addresses are all verified addresses,\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _toList The addresses of the receivers\n     *  @param _amounts The number of tokens to transfer to the corresponding receiver\n     *  emits _toList.length `Transfer` events\n     */\n    function batchTransfer(address[] calldata _toList, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to issue forced transfers in batch\n     *  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.\n     *  Require that the `_toList` addresses are all verified addresses\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _fromList The addresses of the senders\n     *  @param _toList The addresses of the receivers\n     *  @param _amounts The number of tokens to transfer to the corresponding receiver\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`\n     *  emits _fromList.length `Transfer` events\n     */\n    function batchForcedTransfer(\n        address[] calldata _fromList,\n        address[] calldata _toList,\n        uint256[] calldata _amounts\n    ) external;\n\n    /**\n     *  @dev function allowing to mint tokens in batch\n     *  Require that the `_toList` addresses are all verified addresses\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _toList The addresses of the receivers\n     *  @param _amounts The number of tokens to mint to the corresponding receiver\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _toList.length `Transfer` events\n     */\n    function batchMint(address[] calldata _toList, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to burn tokens in batch\n     *  Require that the `_userAddresses` addresses are all verified addresses\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses of the wallets concerned by the burn\n     *  @param _amounts The number of tokens to burn from the corresponding wallets\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `Transfer` events\n     */\n    function batchBurn(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to set frozen addresses in batch\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses for which to update frozen status\n     *  @param _freeze Frozen status of the corresponding address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `AddressFrozen` events\n     */\n    function batchSetAddressFrozen(address[] calldata _userAddresses, bool[] calldata _freeze) external;\n\n    /**\n     *  @dev function allowing to freeze tokens partially in batch\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses on which tokens need to be frozen\n     *  @param _amounts the amount of tokens to freeze on the corresponding address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `TokensFrozen` events\n     */\n    function batchFreezePartialTokens(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to unfreeze tokens partially in batch\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses on which tokens need to be unfrozen\n     *  @param _amounts the amount of tokens to unfreeze on the corresponding address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `TokensUnfrozen` events\n     */\n    function batchUnfreezePartialTokens(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 1 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * balanceOf() and transfer().\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the address of the onchainID of the token.\n     * the onchainID of the token gives all the information available\n     * about the token and is managed by the token issuer or his agent.\n     */\n    function onchainID() external view returns (address);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the TREX version of the token.\n     * current version is 3.0.0\n     */\n    function version() external view returns (string memory);\n\n    /**\n     *  @dev Returns the Identity Registry linked to the token\n     */\n    function identityRegistry() external view returns (IIdentityRegistry);\n\n    /**\n     *  @dev Returns the Compliance contract linked to the token\n     */\n    function compliance() external view returns (IModularCompliance);\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() external view returns (bool);\n\n    /**\n     *  @dev Returns the freezing status of a wallet\n     *  if isFrozen returns `true` the wallet is frozen\n     *  if isFrozen returns `false` the wallet is not frozen\n     *  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by\n     *  a partial freeze or the whole token could be blocked by pause\n     *  @param _userAddress the address of the wallet on which isFrozen is called\n     */\n    function isFrozen(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev Returns the amount of tokens that are partially frozen on a wallet\n     *  the amount of frozen tokens is always <= to the total balance of the wallet\n     *  @param _userAddress the address of the wallet on which getFrozenTokens is called\n     */\n    function getFrozenTokens(address _userAddress) external view returns (uint256);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc"],"":["ast"]}}}},"output":{"sources":{"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","exportedSymbols":{"IClaimIssuer":[59],"IERC734":[206],"IERC735":[314],"IIdentity":[323]},"id":60,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:0"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IIdentity.sol","file":"./IIdentity.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":60,"sourceUnit":324,"src":"61:25:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3,"name":"IIdentity","nameLocations":["114:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"114:9:0"},"id":4,"nodeType":"InheritanceSpecifier","src":"114:9:0"}],"canonicalName":"IClaimIssuer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":59,"linearizedBaseContracts":[59,323,314,206],"name":"IClaimIssuer","nameLocation":"98:12:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"131:126:0","text":" @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."},"eventSelector":"7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569","id":9,"name":"ClaimRevoked","nameLocation":"268:12:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"signature","nameLocation":"295:9:0","nodeType":"VariableDeclaration","scope":9,"src":"281:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"281:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"280:25:0"},"src":"262:44:0"},{"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"312:351:0","text":" @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"},"functionSelector":"73c33708","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"revokeClaim","nameLocation":"677:11:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"_claimId","nameLocation":"697:8:0","nodeType":"VariableDeclaration","scope":19,"src":"689:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11,"name":"bytes32","nodeType":"ElementaryTypeName","src":"689:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"_identity","nameLocation":"715:9:0","nodeType":"VariableDeclaration","scope":19,"src":"707:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"688:37:0"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"743:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"743:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"742:6:0"},"scope":59,"src":"668:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"755:169:0","text":" @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"},"functionSelector":"9f7f9edd","id":25,"implemented":false,"kind":"function","modifiers":[],"name":"revokeClaimBySignature","nameLocation":"938:22:0","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"signature","nameLocation":"976:9:0","nodeType":"VariableDeclaration","scope":25,"src":"961:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":21,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"960:26:0"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"995:0:0"},"scope":59,"src":"929:67:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1002:181:0","text":" @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"},"functionSelector":"2646b264","id":33,"implemented":false,"kind":"function","modifiers":[],"name":"isClaimRevoked","nameLocation":"1197:14:0","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"_sig","nameLocation":"1227:4:0","nodeType":"VariableDeclaration","scope":33,"src":"1212:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"1212:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1211:21:0"},"returnParameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33,"src":"1256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30,"name":"bool","nodeType":"ElementaryTypeName","src":"1256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1255:6:0"},"scope":59,"src":"1188:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1268:334:0","text":" @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"},"functionSelector":"c0969a6e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"isClaimValid","nameLocation":"1616:12:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"_identity","nameLocation":"1648:9:0","nodeType":"VariableDeclaration","scope":48,"src":"1638:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":36,"nodeType":"UserDefinedTypeName","pathNode":{"id":35,"name":"IIdentity","nameLocations":["1638:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"1638:9:0"},"referencedDeclaration":323,"src":"1638:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"claimTopic","nameLocation":"1675:10:0","nodeType":"VariableDeclaration","scope":48,"src":"1667:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"sig","nameLocation":"1710:3:0","nodeType":"VariableDeclaration","scope":48,"src":"1695:18:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"1695:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"data","nameLocation":"1738:4:0","nodeType":"VariableDeclaration","scope":48,"src":"1723:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":42,"name":"bytes","nodeType":"ElementaryTypeName","src":"1723:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1628:115:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48,"src":"1771:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45,"name":"bool","nodeType":"ElementaryTypeName","src":"1771:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1770:6:0"},"scope":59,"src":"1607:170:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1783:240:0","text":" @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"},"functionSelector":"c3b129e3","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"getRecoveredAddress","nameLocation":"2037:19:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"sig","nameLocation":"2072:3:0","nodeType":"VariableDeclaration","scope":58,"src":"2057:18:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":50,"name":"bytes","nodeType":"ElementaryTypeName","src":"2057:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"dataHash","nameLocation":"2085:8:0","nodeType":"VariableDeclaration","scope":58,"src":"2077:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2056:38:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2118:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2117:9:0"},"scope":59,"src":"2028:99:0","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":60,"src":"88:2041:0","usedErrors":[]}],"src":"36:2094:0"},"id":0},"@onchain-id/solidity/contracts/interface/IERC734.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC734.sol","exportedSymbols":{"IERC734":[206]},"id":207,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":61,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC734","contractDependencies":[],"contractKind":"interface","documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"61:84:1","text":" @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."},"fullyImplemented":false,"id":206,"linearizedBaseContracts":[206],"name":"IERC734","nameLocation":"156:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"171:156:1","text":" @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."},"eventSelector":"b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8","id":69,"name":"Approved","nameLocation":"338:8:1","nodeType":"EventDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"363:11:1","nodeType":"VariableDeclaration","scope":69,"src":"347:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"381:8:1","nodeType":"VariableDeclaration","scope":69,"src":"376:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":66,"name":"bool","nodeType":"ElementaryTypeName","src":"376:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"346:44:1"},"src":"332:59:1"},{"anonymous":false,"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"397:214:1","text":" @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."},"eventSelector":"1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8","id":80,"name":"Executed","nameLocation":"622:8:1","nodeType":"EventDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"647:11:1","nodeType":"VariableDeclaration","scope":80,"src":"631:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"676:2:1","nodeType":"VariableDeclaration","scope":80,"src":"660:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"696:5:1","nodeType":"VariableDeclaration","scope":80,"src":"680:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":78,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"709:4:1","nodeType":"VariableDeclaration","scope":80,"src":"703:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":77,"name":"bytes","nodeType":"ElementaryTypeName","src":"703:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"630:84:1"},"src":"616:99:1"},{"anonymous":false,"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"721:171:1","text":" @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."},"eventSelector":"8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8","id":91,"name":"ExecutionRequested","nameLocation":"903:18:1","nodeType":"EventDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"938:11:1","nodeType":"VariableDeclaration","scope":91,"src":"922:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"967:2:1","nodeType":"VariableDeclaration","scope":91,"src":"951:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"987:5:1","nodeType":"VariableDeclaration","scope":91,"src":"971:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1000:4:1","nodeType":"VariableDeclaration","scope":91,"src":"994:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"994:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"921:84:1"},"src":"897:109:1"},{"anonymous":false,"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"1012:151:1","text":" @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"},"eventSelector":"e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68","id":102,"name":"ExecutionFailed","nameLocation":"1174:15:1","nodeType":"EventDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"indexed":true,"mutability":"mutable","name":"executionId","nameLocation":"1206:11:1","nodeType":"VariableDeclaration","scope":102,"src":"1190:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":96,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1235:2:1","nodeType":"VariableDeclaration","scope":102,"src":"1219:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":98,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1255:5:1","nodeType":"VariableDeclaration","scope":102,"src":"1239:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1268:4:1","nodeType":"VariableDeclaration","scope":102,"src":"1262:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":99,"name":"bytes","nodeType":"ElementaryTypeName","src":"1262:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1189:84:1"},"src":"1168:106:1"},{"anonymous":false,"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"1280:153:1","text":" @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."},"eventSelector":"480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9","id":111,"name":"KeyAdded","nameLocation":"1444:8:1","nodeType":"EventDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"indexed":true,"mutability":"mutable","name":"key","nameLocation":"1469:3:1","nodeType":"VariableDeclaration","scope":111,"src":"1453:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1453:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":107,"indexed":true,"mutability":"mutable","name":"purpose","nameLocation":"1490:7:1","nodeType":"VariableDeclaration","scope":111,"src":"1474:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1474:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"keyType","nameLocation":"1515:7:1","nodeType":"VariableDeclaration","scope":111,"src":"1499:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1452:71:1"},"src":"1438:86:1"},{"anonymous":false,"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"1530:160:1","text":" @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."},"eventSelector":"585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397","id":120,"name":"KeyRemoved","nameLocation":"1701:10:1","nodeType":"EventDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"indexed":true,"mutability":"mutable","name":"key","nameLocation":"1728:3:1","nodeType":"VariableDeclaration","scope":120,"src":"1712:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":116,"indexed":true,"mutability":"mutable","name":"purpose","nameLocation":"1749:7:1","nodeType":"VariableDeclaration","scope":120,"src":"1733:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1733:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"keyType","nameLocation":"1774:7:1","nodeType":"VariableDeclaration","scope":120,"src":"1758:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1711:71:1"},"src":"1695:88:1"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"1789:319:1","text":" @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."},"functionSelector":"1d381240","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"addKey","nameLocation":"2122:6:1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"_key","nameLocation":"2137:4:1","nodeType":"VariableDeclaration","scope":132,"src":"2129:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"_purpose","nameLocation":"2151:8:1","nodeType":"VariableDeclaration","scope":132,"src":"2143:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"_keyType","nameLocation":"2169:8:1","nodeType":"VariableDeclaration","scope":132,"src":"2161:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2161:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2128:50:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"success","nameLocation":"2202:7:1","nodeType":"VariableDeclaration","scope":132,"src":"2197:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"2197:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2196:14:1"},"scope":206,"src":"2113:98:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"2217:201:1","text":" @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"},"functionSelector":"747442d3","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2432:7:1","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"_id","nameLocation":"2448:3:1","nodeType":"VariableDeclaration","scope":142,"src":"2440:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"_approve","nameLocation":"2458:8:1","nodeType":"VariableDeclaration","scope":142,"src":"2453:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":136,"name":"bool","nodeType":"ElementaryTypeName","src":"2453:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2439:28:1"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"success","nameLocation":"2491:7:1","nodeType":"VariableDeclaration","scope":142,"src":"2486:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"2486:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2485:14:1"},"scope":206,"src":"2423:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2506:290:1","text":" @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."},"functionSelector":"53d413c5","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"removeKey","nameLocation":"2810:9:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"_key","nameLocation":"2828:4:1","nodeType":"VariableDeclaration","scope":152,"src":"2820:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"_purpose","nameLocation":"2842:8:1","nodeType":"VariableDeclaration","scope":152,"src":"2834:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2834:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2819:32:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"success","nameLocation":"2875:7:1","nodeType":"VariableDeclaration","scope":152,"src":"2870:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"2870:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2869:14:1"},"scope":206,"src":"2801:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"2890:481:1","text":" @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"},"functionSelector":"b61d27f6","id":164,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3385:7:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"_to","nameLocation":"3401:3:1","nodeType":"VariableDeclaration","scope":164,"src":"3393:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"_value","nameLocation":"3414:6:1","nodeType":"VariableDeclaration","scope":164,"src":"3406:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"_data","nameLocation":"3437:5:1","nodeType":"VariableDeclaration","scope":164,"src":"3422:20:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"3422:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3392:51:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"executionId","nameLocation":"3478:11:1","nodeType":"VariableDeclaration","scope":164,"src":"3470:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3469:21:1"},"scope":206,"src":"3376:115:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3497:78:1","text":" @dev Returns the full key data, if present in the identity."},"functionSelector":"12aaac70","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"getKey","nameLocation":"3589:6:1","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"_key","nameLocation":"3604:4:1","nodeType":"VariableDeclaration","scope":177,"src":"3596:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3595:14:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"purposes","nameLocation":"3650:8:1","nodeType":"VariableDeclaration","scope":177,"src":"3633:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":170,"nodeType":"ArrayTypeName","src":"3633:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"keyType","nameLocation":"3668:7:1","nodeType":"VariableDeclaration","scope":177,"src":"3660:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3660:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"key","nameLocation":"3685:3:1","nodeType":"VariableDeclaration","scope":177,"src":"3677:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3677:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3632:57:1"},"scope":206,"src":"3580:110:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"3696:75:1","text":" @dev Returns the list of purposes associated with a key."},"functionSelector":"fb307b34","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"getKeyPurposes","nameLocation":"3785:14:1","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"_key","nameLocation":"3808:4:1","nodeType":"VariableDeclaration","scope":186,"src":"3800:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3800:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3799:14:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"_purposes","nameLocation":"3853:9:1","nodeType":"VariableDeclaration","scope":186,"src":"3836:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3836:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":183,"nodeType":"ArrayTypeName","src":"3836:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3835:28:1"},"scope":206,"src":"3776:88:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"3870:85:1","text":" @dev Returns an array of public key bytes32 held by this identity."},"functionSelector":"9010f726","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"getKeysByPurpose","nameLocation":"3969:16:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"_purpose","nameLocation":"3994:8:1","nodeType":"VariableDeclaration","scope":195,"src":"3986:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:18:1"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"keys","nameLocation":"4044:4:1","nodeType":"VariableDeclaration","scope":195,"src":"4027:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4027:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":192,"nodeType":"ArrayTypeName","src":"4027:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4026:23:1"},"scope":206,"src":"3960:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"4056:127:1","text":" @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"functionSelector":"d202158d","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"keyHasPurpose","nameLocation":"4197:13:1","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"_key","nameLocation":"4219:4:1","nodeType":"VariableDeclaration","scope":205,"src":"4211:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4211:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"_purpose","nameLocation":"4233:8:1","nodeType":"VariableDeclaration","scope":205,"src":"4225:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4210:32:1"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"exists","nameLocation":"4271:6:1","nodeType":"VariableDeclaration","scope":205,"src":"4266:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":202,"name":"bool","nodeType":"ElementaryTypeName","src":"4266:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4265:13:1"},"scope":206,"src":"4188:91:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":207,"src":"146:4135:1","usedErrors":[]}],"src":"36:4246:1"},"id":1},"@onchain-id/solidity/contracts/interface/IERC735.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC735.sol","exportedSymbols":{"IERC735":[314]},"id":315,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":208,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC735","contractDependencies":[],"contractKind":"interface","documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"61:86:2","text":" @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."},"fullyImplemented":false,"id":314,"linearizedBaseContracts":[314],"name":"IERC735","nameLocation":"158:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"173:139:2","text":" @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."},"eventSelector":"46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5","id":226,"name":"ClaimAdded","nameLocation":"323:10:2","nodeType":"EventDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"359:7:2","nodeType":"VariableDeclaration","scope":226,"src":"343:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"343:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":true,"mutability":"mutable","name":"topic","nameLocation":"392:5:2","nodeType":"VariableDeclaration","scope":226,"src":"376:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"scheme","nameLocation":"415:6:2","nodeType":"VariableDeclaration","scope":226,"src":"407:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"447:6:2","nodeType":"VariableDeclaration","scope":226,"src":"431:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"469:9:2","nodeType":"VariableDeclaration","scope":226,"src":"463:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"463:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"494:4:2","nodeType":"VariableDeclaration","scope":226,"src":"488:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":221,"name":"bytes","nodeType":"ElementaryTypeName","src":"488:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":224,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"515:3:2","nodeType":"VariableDeclaration","scope":226,"src":"508:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":223,"name":"string","nodeType":"ElementaryTypeName","src":"508:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"333:186:2"},"src":"317:203:2"},{"anonymous":false,"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"526:146:2","text":" @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."},"eventSelector":"3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a","id":243,"name":"ClaimRemoved","nameLocation":"683:12:2","nodeType":"EventDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"721:7:2","nodeType":"VariableDeclaration","scope":243,"src":"705:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"705:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":true,"mutability":"mutable","name":"topic","nameLocation":"754:5:2","nodeType":"VariableDeclaration","scope":243,"src":"738:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":false,"mutability":"mutable","name":"scheme","nameLocation":"777:6:2","nodeType":"VariableDeclaration","scope":243,"src":"769:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":235,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"809:6:2","nodeType":"VariableDeclaration","scope":243,"src":"793:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"831:9:2","nodeType":"VariableDeclaration","scope":243,"src":"825:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":236,"name":"bytes","nodeType":"ElementaryTypeName","src":"825:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":239,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"856:4:2","nodeType":"VariableDeclaration","scope":243,"src":"850:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"850:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":241,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"877:3:2","nodeType":"VariableDeclaration","scope":243,"src":"870:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":240,"name":"string","nodeType":"ElementaryTypeName","src":"870:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"695:186:2"},"src":"677:205:2"},{"anonymous":false,"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"888:166:2","text":" @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."},"eventSelector":"3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13","id":260,"name":"ClaimChanged","nameLocation":"1065:12:2","nodeType":"EventDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"1103:7:2","nodeType":"VariableDeclaration","scope":260,"src":"1087:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1087:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":true,"mutability":"mutable","name":"topic","nameLocation":"1136:5:2","nodeType":"VariableDeclaration","scope":260,"src":"1120:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"scheme","nameLocation":"1159:6:2","nodeType":"VariableDeclaration","scope":260,"src":"1151:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"1191:6:2","nodeType":"VariableDeclaration","scope":260,"src":"1175:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"1213:9:2","nodeType":"VariableDeclaration","scope":260,"src":"1207:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"1207:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1238:4:2","nodeType":"VariableDeclaration","scope":260,"src":"1232:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":255,"name":"bytes","nodeType":"ElementaryTypeName","src":"1232:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"1259:3:2","nodeType":"VariableDeclaration","scope":260,"src":"1252:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":257,"name":"string","nodeType":"ElementaryTypeName","src":"1252:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1077:186:2"},"src":"1059:205:2"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1270:438:2","text":" @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"functionSelector":"b1a34e0d","id":278,"implemented":false,"kind":"function","modifiers":[],"name":"addClaim","nameLocation":"1722:8:2","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"_topic","nameLocation":"1748:6:2","nodeType":"VariableDeclaration","scope":278,"src":"1740:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"_scheme","nameLocation":"1772:7:2","nodeType":"VariableDeclaration","scope":278,"src":"1764:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"issuer","nameLocation":"1797:6:2","nodeType":"VariableDeclaration","scope":278,"src":"1789:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"_signature","nameLocation":"1828:10:2","nodeType":"VariableDeclaration","scope":278,"src":"1813:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":268,"name":"bytes","nodeType":"ElementaryTypeName","src":"1813:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"_data","nameLocation":"1863:5:2","nodeType":"VariableDeclaration","scope":278,"src":"1848:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"1848:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"_uri","nameLocation":"1894:4:2","nodeType":"VariableDeclaration","scope":278,"src":"1878:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"1878:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:169:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"claimRequestId","nameLocation":"1930:14:2","nodeType":"VariableDeclaration","scope":278,"src":"1922:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1921:24:2"},"scope":314,"src":"1713:233:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"1952:193:2","text":" @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"functionSelector":"4eee424a","id":286,"implemented":false,"kind":"function","modifiers":[],"name":"removeClaim","nameLocation":"2159:11:2","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"_claimId","nameLocation":"2179:8:2","nodeType":"VariableDeclaration","scope":286,"src":"2171:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:18:2"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"success","nameLocation":"2212:7:2","nodeType":"VariableDeclaration","scope":286,"src":"2207:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":283,"name":"bool","nodeType":"ElementaryTypeName","src":"2207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2206:14:2"},"scope":314,"src":"2150:71:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"2227:154:2","text":" @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"functionSelector":"c9100bcb","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"getClaim","nameLocation":"2395:8:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"_claimId","nameLocation":"2412:8:2","nodeType":"VariableDeclaration","scope":304,"src":"2404:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2404:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2403:18:2"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"topic","nameLocation":"2465:5:2","nodeType":"VariableDeclaration","scope":304,"src":"2457:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"scheme","nameLocation":"2488:6:2","nodeType":"VariableDeclaration","scope":304,"src":"2480:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"issuer","nameLocation":"2512:6:2","nodeType":"VariableDeclaration","scope":304,"src":"2504:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"signature","nameLocation":"2541:9:2","nodeType":"VariableDeclaration","scope":304,"src":"2528:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":297,"name":"bytes","nodeType":"ElementaryTypeName","src":"2528:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"data","nameLocation":"2573:4:2","nodeType":"VariableDeclaration","scope":304,"src":"2560:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"uri","nameLocation":"2601:3:2","nodeType":"VariableDeclaration","scope":304,"src":"2587:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"2587:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:158:2"},"scope":314,"src":"2386:220:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2612:63:2","text":" @dev Returns an array of claim IDs by topic."},"functionSelector":"80e9e9e1","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"getClaimIdsByTopic","nameLocation":"2689:18:2","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"_topic","nameLocation":"2716:6:2","nodeType":"VariableDeclaration","scope":313,"src":"2708:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2707:16:2"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"claimIds","nameLocation":"2763:8:2","nodeType":"VariableDeclaration","scope":313,"src":"2746:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2746:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":310,"nodeType":"ArrayTypeName","src":"2746:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2745:27:2"},"scope":314,"src":"2680:93:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":315,"src":"148:2627:2","usedErrors":[]}],"src":"36:2740:2"},"id":2},"@onchain-id/solidity/contracts/interface/IIdentity.sol":{"ast":{"absolutePath":"@onchain-id/solidity/contracts/interface/IIdentity.sol","exportedSymbols":{"IERC734":[206],"IERC735":[314],"IIdentity":[323]},"id":324,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":316,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:3"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC734.sol","file":"./IERC734.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":324,"sourceUnit":207,"src":"61:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@onchain-id/solidity/contracts/interface/IERC735.sol","file":"./IERC735.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":324,"sourceUnit":315,"src":"85:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":319,"name":"IERC734","nameLocations":["178:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"178:7:3"},"id":320,"nodeType":"InheritanceSpecifier","src":"178:7:3"},{"baseName":{"id":321,"name":"IERC735","nameLocations":["187:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":314,"src":"187:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"187:7:3"}],"canonicalName":"IIdentity","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":323,"linearizedBaseContracts":[323,314,206],"name":"IIdentity","nameLocation":"165:9:3","nodeType":"ContractDefinition","nodes":[],"scope":324,"src":"155:42:3","usedErrors":[]}],"src":"36:162:3"},"id":3},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[954],"ContextUpgradeable":[996],"Initializable":[624],"OwnableUpgradeable":[455]},"id":456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":325,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":456,"sourceUnit":997,"src":"127:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":456,"sourceUnit":625,"src":"169:42:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":329,"name":"Initializable","nameLocations":["748:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":624,"src":"748:13:4"},"id":330,"nodeType":"InheritanceSpecifier","src":"748:13:4"},{"baseName":{"id":331,"name":"ContextUpgradeable","nameLocations":["763:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":996,"src":"763:18:4"},"id":332,"nodeType":"InheritanceSpecifier","src":"763:18:4"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"213:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":455,"linearizedBaseContracts":[455,996,624],"name":"OwnableUpgradeable","nameLocation":"726:18:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":334,"mutability":"mutable","name":"_owner","nameLocation":"804:6:4","nodeType":"VariableDeclaration","scope":455,"src":"788:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":340,"name":"OwnershipTransferred","nameLocation":"823:20:4","nodeType":"EventDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:4","nodeType":"VariableDeclaration","scope":340,"src":"844:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:4","nodeType":"VariableDeclaration","scope":340,"src":"875:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:4"},"src":"817:84:4"},{"body":{"id":349,"nodeType":"Block","src":"1055:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1065:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"1065:26:4"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"907:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":350,"implemented":true,"kind":"function","modifiers":[{"id":344,"kind":"modifierInvocation","modifierName":{"id":343,"name":"onlyInitializing","nameLocations":["1038:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"1038:16:4"},"nodeType":"ModifierInvocation","src":"1038:16:4"}],"name":"__Ownable_init","nameLocation":"1012:14:4","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"1026:2:4"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"1055:0:4"},"scope":455,"src":"1003:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"1166:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":356,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"1195:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":355,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1176:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"1176:32:4"}]},"id":361,"implemented":true,"kind":"function","modifiers":[{"id":353,"kind":"modifierInvocation","modifierName":{"id":352,"name":"onlyInitializing","nameLocations":["1149:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"1149:16:4"},"nodeType":"ModifierInvocation","src":"1149:16:4"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:4","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1137:2:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"1166:0:4"},"scope":455,"src":"1104:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"1324:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1334:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"1334:13:4"},{"id":367,"nodeType":"PlaceholderStatement","src":"1357:1:4"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1221:77:4","text":" @dev Throws if called by any account other than the owner."},"id":369,"name":"onlyOwner","nameLocation":"1312:9:4","nodeType":"ModifierDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1321:2:4"},"src":"1303:62:4","virtual":false,"visibility":"internal"},{"body":{"id":377,"nodeType":"Block","src":"1496:30:4","statements":[{"expression":{"id":375,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1513:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":374,"id":376,"nodeType":"Return","src":"1506:13:4"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1371:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":378,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:4","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"1455:2:4"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"1487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:4"},"scope":455,"src":"1441:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":391,"nodeType":"Block","src":"1644:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1662:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":385,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"1673:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"1654:68:4"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"1532:62:4","text":" @dev Throws if the sender is not the owner."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:4","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"1619:2:4"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"1644:0:4"},"scope":455,"src":"1599:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"2118:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:4","typeDescriptions":{}}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":398,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2128:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"2128:30:4"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"1735:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":406,"implemented":true,"kind":"function","modifiers":[{"id":396,"kind":"modifierInvocation","modifierName":{"id":395,"name":"onlyOwner","nameLocations":["2108:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"2108:9:4"},"nodeType":"ModifierInvocation","src":"2108:9:4"}],"name":"renounceOwnership","nameLocation":"2073:17:4","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"2090:2:4"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2118:0:4"},"scope":455,"src":"2064:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":428,"nodeType":"Block","src":"2384:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":415,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2402:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:4","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":423,"nodeType":"ExpressionStatement","src":"2394:73:4"},{"expression":{"arguments":[{"id":425,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2496:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2477:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"2477:28:4"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"2171:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":429,"implemented":true,"kind":"function","modifiers":[{"id":412,"kind":"modifierInvocation","modifierName":{"id":411,"name":"onlyOwner","nameLocations":["2374:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"2374:9:4"},"nodeType":"ModifierInvocation","src":"2374:9:4"}],"name":"transferOwnership","nameLocation":"2323:17:4","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:4","nodeType":"VariableDeclaration","scope":429,"src":"2341:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:4"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"2384:0:4"},"scope":455,"src":"2314:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":448,"nodeType":"Block","src":"2729:124:4","statements":[{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:4","nodeType":"VariableDeclaration","scope":448,"src":"2739:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":438,"initialValue":{"id":437,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2758:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:4"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":439,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2774:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":440,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2783:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":442,"nodeType":"ExpressionStatement","src":"2774:17:4"},{"eventCall":{"arguments":[{"id":444,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2827:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2837:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":443,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2806:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"EmitStatement","src":"2801:45:4"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"2518:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":449,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:4","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:4","nodeType":"VariableDeclaration","scope":449,"src":"2694:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:4"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"2729:0:4"},"scope":455,"src":"2666:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"2859:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":454,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:4","nodeType":"VariableDeclaration","scope":455,"src":"3118:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"length":{"hexValue":"3439","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":456,"src":"708:2438:4","usedErrors":[]}],"src":"102:3045:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[954],"Initializable":[624]},"id":625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":457,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":625,"sourceUnit":955,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"184:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":624,"linearizedBaseContracts":[624],"name":"Initializable","nameLocation":"2412:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"2432:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":462,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:5","nodeType":"VariableDeclaration","scope":624,"src":"2546:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":461,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2579:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":465,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:5","nodeType":"VariableDeclaration","scope":624,"src":"2675:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":464,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"2708:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":470,"name":"Initialized","nameLocation":"2809:11:5","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":470,"src":"2821:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":467,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:5"},"src":"2803:33:5"},{"body":{"id":525,"nodeType":"Block","src":"3269:483:5","statements":[{"assignments":[474],"declarations":[{"constant":false,"id":474,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:5","nodeType":"VariableDeclaration","scope":525,"src":"3279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":473,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":477,"initialValue":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:5","subExpression":{"id":475,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3302:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3347:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3365:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:5","subExpression":{"arguments":[{"arguments":[{"id":489,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$624","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$624","typeString":"contract Initializable"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:5","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":485,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"3388:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$954_$","typeString":"type(library AddressUpgradeable)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":642,"src":"3388:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3436:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"3325:201:5"},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":502,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3536:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":505,"nodeType":"ExpressionStatement","src":"3536:16:5"},{"condition":{"id":506,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3566:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":512,"nodeType":"IfStatement","src":"3562:65:5","trueBody":{"id":511,"nodeType":"Block","src":"3582:45:5","statements":[{"expression":{"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":507,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3596:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":510,"nodeType":"ExpressionStatement","src":"3596:20:5"}]}},{"id":513,"nodeType":"PlaceholderStatement","src":"3636:1:5"},{"condition":{"id":514,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3651:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"nodeType":"IfStatement","src":"3647:99:5","trueBody":{"id":523,"nodeType":"Block","src":"3667:79:5","statements":[{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3681:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":518,"nodeType":"ExpressionStatement","src":"3681:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":519,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"EmitStatement","src":"3716:19:5"}]}}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"2842:399:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":526,"name":"initializer","nameLocation":"3255:11:5","nodeType":"ModifierDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[],"src":"3266:2:5"},"src":"3246:506:5","virtual":false,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"4863:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:5","subExpression":{"id":532,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4882:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4899:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":535,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4914:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"4873:99:5"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":541,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4982:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":542,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4997:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":544,"nodeType":"ExpressionStatement","src":"4982:22:5"},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5014:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"nodeType":"ExpressionStatement","src":"5014:20:5"},{"id":549,"nodeType":"PlaceholderStatement","src":"5044:1:5"},{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"ExpressionStatement","src":"5055:21:5"},{"eventCall":{"arguments":[{"id":555,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5103:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":554,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"5091:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"EmitStatement","src":"5086:25:5"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"3758:1062:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":559,"name":"reinitializer","nameLocation":"4834:13:5","nodeType":"ModifierDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"version","nameLocation":"4854:7:5","nodeType":"VariableDeclaration","scope":559,"src":"4848:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":528,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:5"},"src":"4825:293:5","virtual":false,"visibility":"internal"},{"body":{"id":568,"nodeType":"Block","src":"5356:97:5","statements":[{"expression":{"arguments":[{"id":563,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5374:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"ExpressionStatement","src":"5366:69:5"},{"id":567,"nodeType":"PlaceholderStatement","src":"5445:1:5"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"5124:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":569,"name":"onlyInitializing","nameLocation":"5337:16:5","nodeType":"ModifierDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"5353:2:5"},"src":"5328:125:5","virtual":false,"visibility":"internal"},{"body":{"id":604,"nodeType":"Block","src":"5988:231:5","statements":[{"expression":{"arguments":[{"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:5","subExpression":{"id":574,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6007:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"5998:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6078:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":581,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:5","memberName":"max","nodeType":"MemberAccess","src":"6094:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"IfStatement","src":"6074:139:5","trueBody":{"id":602,"nodeType":"Block","src":"6111:102:5","statements":[{"expression":{"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":586,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6125:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":588,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:5","memberName":"max","nodeType":"MemberAccess","src":"6140:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":593,"nodeType":"ExpressionStatement","src":"6125:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":596,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:5","memberName":"max","nodeType":"MemberAccess","src":"6186:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":594,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6174:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"EmitStatement","src":"6169:33:5"}]}}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"5459:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":605,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:5","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"5968:2:5"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"5988:0:5"},"scope":624,"src":"5939:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"6393:36:5","statements":[{"expression":{"id":611,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6410:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":610,"id":612,"nodeType":"Return","src":"6403:19:5"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"6225:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":614,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:5","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"6360:2:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"6386:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":608,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:5"},"scope":624,"src":"6329:100:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":622,"nodeType":"Block","src":"6601:37:5","statements":[{"expression":{"id":620,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6618:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":619,"id":621,"nodeType":"Return","src":"6611:20:5"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"6435:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":623,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:5","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"6569:2:5"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"6595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:5"},"scope":624,"src":"6545:93:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":625,"src":"2394:4246:5","usedErrors":[]}],"src":"113:6528:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[954]},"id":955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":626,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":954,"linearizedBaseContracts":[954],"name":"AddressUpgradeable","nameLocation":"202:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":641,"nodeType":"Block","src":"1489:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"1713:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:6","memberName":"code","nodeType":"MemberAccess","src":"1713:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:6","memberName":"length","nodeType":"MemberAccess","src":"1713:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":634,"id":640,"nodeType":"Return","src":"1706:30:6"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"227:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":642,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:6","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"account","nameLocation":"1451:7:6","nodeType":"VariableDeclaration","scope":642,"src":"1443:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:6"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":642,"src":"1483:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":632,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:6"},"scope":954,"src":"1423:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"2729:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}],"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:6","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2772:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"2739:73:6"},{"assignments":[662,null],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"success","nameLocation":"2829:7:6","nodeType":"VariableDeclaration","scope":675,"src":"2824:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":661,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":669,"initialValue":{"arguments":[{"hexValue":"","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":663,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2842:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:6","memberName":"call","nodeType":"MemberAccess","src":"2842:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2864:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:6"},{"expression":{"arguments":[{"id":671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2893:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"2885:78:6"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"1749:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:6","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:6","nodeType":"VariableDeclaration","scope":676,"src":"2677:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"amount","nameLocation":"2712:6:6","nodeType":"VariableDeclaration","scope":676,"src":"2704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"2729:0:6"},"scope":954,"src":"2658:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"3801:96:6","statements":[{"expression":{"arguments":[{"id":687,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3840:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3848:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":686,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[734,778],"referencedDeclaration":778,"src":"3818:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":685,"id":692,"nodeType":"Return","src":"3811:79:6"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"2976:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:6","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"target","nameLocation":"3742:6:6","nodeType":"VariableDeclaration","scope":694,"src":"3734:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"data","nameLocation":"3763:4:6","nodeType":"VariableDeclaration","scope":694,"src":"3750:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:6"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"3787:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:6"},"scope":954,"src":"3712:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":713,"nodeType":"Block","src":"4266:76:6","statements":[{"expression":{"arguments":[{"id":707,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4305:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4313:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":710,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4322:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":706,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[734,778],"referencedDeclaration":778,"src":"4283:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":705,"id":712,"nodeType":"Return","src":"4276:59:6"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"3903:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":714,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:6","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"target","nameLocation":"4158:6:6","nodeType":"VariableDeclaration","scope":714,"src":"4150:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"data","nameLocation":"4187:4:6","nodeType":"VariableDeclaration","scope":714,"src":"4174:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":698,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:6","nodeType":"VariableDeclaration","scope":714,"src":"4201:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":700,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:6"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":714,"src":"4252:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:6"},"scope":954,"src":"4119:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"4817:111:6","statements":[{"expression":{"arguments":[{"id":727,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4856:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4864:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":726,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[734,778],"referencedDeclaration":778,"src":"4834:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":725,"id":732,"nodeType":"Return","src":"4827:94:6"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"4348:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":734,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:6","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"target","nameLocation":"4743:6:6","nodeType":"VariableDeclaration","scope":734,"src":"4735:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"data","nameLocation":"4764:4:6","nodeType":"VariableDeclaration","scope":734,"src":"4751:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":718,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"value","nameLocation":"4778:5:6","nodeType":"VariableDeclaration","scope":734,"src":"4770:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:6"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"4803:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:6"},"scope":954,"src":"4704:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":777,"nodeType":"Block","src":"5355:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":751,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$954","typeString":"library AddressUpgradeable"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:6","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5365:81:6"},{"assignments":[760,762],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"success","nameLocation":"5462:7:6","nodeType":"VariableDeclaration","scope":777,"src":"5457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:6","nodeType":"VariableDeclaration","scope":777,"src":"5471:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":769,"initialValue":{"arguments":[{"id":767,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5524:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":763,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5498:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:6","memberName":"call","nodeType":"MemberAccess","src":"5498:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:6"},{"expression":{"arguments":[{"id":771,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5573:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5581:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":773,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5590:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":774,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5602:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":770,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5546:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":747,"id":776,"nodeType":"Return","src":"5539:76:6"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"4934:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:6","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"target","nameLocation":"5224:6:6","nodeType":"VariableDeclaration","scope":778,"src":"5216:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"data","nameLocation":"5253:4:6","nodeType":"VariableDeclaration","scope":778,"src":"5240:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"value","nameLocation":"5275:5:6","nodeType":"VariableDeclaration","scope":778,"src":"5267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:6","nodeType":"VariableDeclaration","scope":778,"src":"5290:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":742,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:6"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"5341:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:6"},"scope":954,"src":"5176:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"5899:97:6","statements":[{"expression":{"arguments":[{"id":789,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5935:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"5943:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":788,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[795,824],"referencedDeclaration":824,"src":"5916:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":787,"id":793,"nodeType":"Return","src":"5909:80:6"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"5628:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:6","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"target","nameLocation":"5835:6:6","nodeType":"VariableDeclaration","scope":795,"src":"5827:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"data","nameLocation":"5856:4:6","nodeType":"VariableDeclaration","scope":795,"src":"5843:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:6"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"5885:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:6"},"scope":954,"src":"5799:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"6338:168:6","statements":[{"assignments":[808,810],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"success","nameLocation":"6354:7:6","nodeType":"VariableDeclaration","scope":823,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":807,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:6","nodeType":"VariableDeclaration","scope":823,"src":"6363:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":815,"initialValue":{"arguments":[{"id":813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"6408:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":811,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6390:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:6"},{"expression":{"arguments":[{"id":817,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6457:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6465:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":819,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"6474:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":820,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"6486:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":816,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"6430:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":806,"id":822,"nodeType":"Return","src":"6423:76:6"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"6002:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:6","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"target","nameLocation":"6225:6:6","nodeType":"VariableDeclaration","scope":824,"src":"6217:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"data","nameLocation":"6254:4:6","nodeType":"VariableDeclaration","scope":824,"src":"6241:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:6","nodeType":"VariableDeclaration","scope":824,"src":"6268:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":801,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:6"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":824,"src":"6324:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":804,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:6"},"scope":954,"src":"6180:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"6782:101:6","statements":[{"expression":{"arguments":[{"id":835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6820:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6828:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":834,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[841,870],"referencedDeclaration":870,"src":"6799:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":833,"id":839,"nodeType":"Return","src":"6792:84:6"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"6512:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:6","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"target","nameLocation":"6723:6:6","nodeType":"VariableDeclaration","scope":841,"src":"6715:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"data","nameLocation":"6744:4:6","nodeType":"VariableDeclaration","scope":841,"src":"6731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:6"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"6768:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":831,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:6"},"scope":954,"src":"6685:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"7224:170:6","statements":[{"assignments":[854,856],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"success","nameLocation":"7240:7:6","nodeType":"VariableDeclaration","scope":869,"src":"7235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":853,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:6","nodeType":"VariableDeclaration","scope":869,"src":"7249:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":861,"initialValue":{"arguments":[{"id":859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7296:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":857,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7276:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:6"},{"expression":{"arguments":[{"id":863,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7345:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":865,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7362:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":866,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7374:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":862,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7318:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":852,"id":868,"nodeType":"Return","src":"7311:76:6"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"6889:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:6","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"target","nameLocation":"7116:6:6","nodeType":"VariableDeclaration","scope":870,"src":"7108:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"data","nameLocation":"7145:4:6","nodeType":"VariableDeclaration","scope":870,"src":"7132:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":845,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:6","nodeType":"VariableDeclaration","scope":870,"src":"7159:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:6"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"7210:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:6"},"scope":954,"src":"7069:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"7876:434:6","statements":[{"condition":{"id":884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"7890:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":906,"nodeType":"Block","src":"8246:58:6","statements":[{"expression":{"arguments":[{"id":902,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8268:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":903,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"8280:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":901,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8260:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"8260:33:6"}]},"id":907,"nodeType":"IfStatement","src":"7886:418:6","trueBody":{"id":900,"nodeType":"Block","src":"7899:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":885,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"7917:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:6","memberName":"length","nodeType":"MemberAccess","src":"7917:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":897,"nodeType":"IfStatement","src":"7913:286:6","trueBody":{"id":896,"nodeType":"Block","src":"7941:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":891,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8143:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":890,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8132:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"8124:60:6"}]}},{"expression":{"id":898,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8219:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":883,"id":899,"nodeType":"Return","src":"8212:17:6"}]}}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"7400:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:6","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"target","nameLocation":"7735:6:6","nodeType":"VariableDeclaration","scope":909,"src":"7727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"success","nameLocation":"7756:7:6","nodeType":"VariableDeclaration","scope":909,"src":"7751:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":874,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:6","nodeType":"VariableDeclaration","scope":909,"src":"7773:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:6","nodeType":"VariableDeclaration","scope":909,"src":"7806:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":878,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:6"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"7862:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":881,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:6"},"scope":954,"src":"7682:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":932,"nodeType":"Block","src":"8691:135:6","statements":[{"condition":{"id":921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"8705:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":930,"nodeType":"Block","src":"8762:58:6","statements":[{"expression":{"arguments":[{"id":926,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"8784:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":927,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"8796:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":925,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"8776:33:6"}]},"id":931,"nodeType":"IfStatement","src":"8701:119:6","trueBody":{"id":924,"nodeType":"Block","src":"8714:42:6","statements":[{"expression":{"id":922,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"8735:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":920,"id":923,"nodeType":"Return","src":"8728:17:6"}]}}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"8316:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":933,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"success","nameLocation":"8571:7:6","nodeType":"VariableDeclaration","scope":933,"src":"8566:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":911,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:6","nodeType":"VariableDeclaration","scope":933,"src":"8588:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":913,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:6","nodeType":"VariableDeclaration","scope":933,"src":"8621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":915,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:6"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"8677:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:6"},"scope":954,"src":"8531:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"8915:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":940,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"8991:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:6","memberName":"length","nodeType":"MemberAccess","src":"8991:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":950,"nodeType":"Block","src":"9321:45:6","statements":[{"expression":{"arguments":[{"id":947,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"9342:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":946,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9335:20:6"}]},"id":951,"nodeType":"IfStatement","src":"8987:379:6","trueBody":{"id":945,"nodeType":"Block","src":"9014:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:6"},"nodeType":"YulFunctionCall","src":"9213:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:6"},"nodeType":"YulFunctionCall","src":"9254:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:6"},"nodeType":"YulFunctionCall","src":"9247:44:6"},"nodeType":"YulExpressionStatement","src":"9247:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":935,"isOffset":false,"isSlot":false,"src":"9219:10:6","valueSize":1},{"declaration":935,"isOffset":false,"isSlot":false,"src":"9262:10:6","valueSize":1}],"id":944,"nodeType":"InlineAssembly","src":"9163:142:6"}]}}]},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:6","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:6","nodeType":"VariableDeclaration","scope":953,"src":"8849:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:6","nodeType":"VariableDeclaration","scope":953,"src":"8874:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":936,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:6"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"8915:0:6"},"scope":954,"src":"8832:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":955,"src":"194:9180:6","usedErrors":[]}],"src":"101:9274:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[954],"ContextUpgradeable":[996],"Initializable":[624]},"id":997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":997,"sourceUnit":625,"src":"110:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":959,"name":"Initializable","nameLocations":["691:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":624,"src":"691:13:7"},"id":960,"nodeType":"InheritanceSpecifier","src":"691:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"154:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":996,"linearizedBaseContracts":[996,624],"name":"ContextUpgradeable","nameLocation":"669:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":965,"nodeType":"Block","src":"763:7:7","statements":[]},"id":966,"implemented":true,"kind":"function","modifiers":[{"id":963,"kind":"modifierInvocation","modifierName":{"id":962,"name":"onlyInitializing","nameLocations":["746:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"746:16:7"},"nodeType":"ModifierInvocation","src":"746:16:7"}],"name":"__Context_init","nameLocation":"720:14:7","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"734:2:7"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"763:0:7"},"scope":996,"src":"711:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":971,"nodeType":"Block","src":"838:7:7","statements":[]},"id":972,"implemented":true,"kind":"function","modifiers":[{"id":969,"kind":"modifierInvocation","modifierName":{"id":968,"name":"onlyInitializing","nameLocations":["821:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"821:16:7"},"nodeType":"ModifierInvocation","src":"821:16:7"}],"name":"__Context_init_unchained","nameLocation":"785:24:7","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"809:2:7"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"838:0:7"},"scope":996,"src":"776:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"912:34:7","statements":[{"expression":{"expression":{"id":977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:7","memberName":"sender","nodeType":"MemberAccess","src":"929:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":976,"id":979,"nodeType":"Return","src":"922:17:7"}]},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:7","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"869:2:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:7"},"scope":996,"src":"850:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"1019:32:7","statements":[{"expression":{"expression":{"id":986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:7","memberName":"data","nodeType":"MemberAccess","src":"1036:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":985,"id":988,"nodeType":"Return","src":"1029:15:7"}]},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"969:2:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"1003:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":983,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:7"},"scope":996,"src":"952:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"1057:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":995,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:7","nodeType":"VariableDeclaration","scope":996,"src":"1316:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":994,"length":{"hexValue":"3530","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":997,"src":"651:693:7","usedErrors":[]}],"src":"86:1259:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1074]},"id":1075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":998,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1074,"linearizedBaseContracts":[1074],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1008,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":1008,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":1008,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":1008,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1017,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":1017,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":1017,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":1017,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1023,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":1074,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1031,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1031,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1074,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1041,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":1041,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":1041,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1041,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1038,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":1074,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1051,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":1051,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":1051,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":1074,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1061,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":1061,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":1061,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1061,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1058,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":1074,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1073,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"from","nameLocation":"2676:4:8","nodeType":"VariableDeclaration","scope":1073,"src":"2668:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"to","nameLocation":"2690:2:8","nodeType":"VariableDeclaration","scope":1073,"src":"2682:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"amount","nameLocation":"2702:6:8","nodeType":"VariableDeclaration","scope":1073,"src":"2694:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:8"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"2728:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1070,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:8"},"scope":1074,"src":"2646:88:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1075,"src":"202:2534:8","usedErrors":[]}],"src":"106:2631:8"},"id":8},"contracts/compliance/modular/IModularCompliance.sol":{"ast":{"absolutePath":"contracts/compliance/modular/IModularCompliance.sol","exportedSymbols":{"IModularCompliance":[1195]},"id":1196,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1076,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3817:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IModularCompliance","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1195,"linearizedBaseContracts":[1195],"name":"IModularCompliance","nameLocation":"3852:18:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"3894:320:9","text":"  @dev Event emitted for each executed interaction with a module contract.\n  For gas efficiency, only the interaction calldata selector (first 4\n  bytes) is included in the event. For interactions without calldata or\n  whose calldata is shorter than 4 bytes, the selector will be `0`."},"eventSelector":"20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891","id":1083,"name":"ModuleInteraction","nameLocation":"4225:17:9","nodeType":"EventDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"4259:6:9","nodeType":"VariableDeclaration","scope":1083,"src":"4243:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"4274:8:9","nodeType":"VariableDeclaration","scope":1083,"src":"4267:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1080,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4267:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4242:41:9"},"src":"4219:65:9"},{"anonymous":false,"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"4290:204:9","text":"  this event is emitted when a token has been bound to the compliance contract\n  the event is emitted by the bindToken function\n  `_token` is the address of the token to bind"},"eventSelector":"2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b","id":1088,"name":"TokenBound","nameLocation":"4505:10:9","nodeType":"EventDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"indexed":false,"mutability":"mutable","name":"_token","nameLocation":"4524:6:9","nodeType":"VariableDeclaration","scope":1088,"src":"4516:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"4516:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4515:16:9"},"src":"4499:33:9"},{"anonymous":false,"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"4538:212:9","text":"  this event is emitted when a token has been unbound from the compliance contract\n  the event is emitted by the unbindToken function\n  `_token` is the address of the token to unbind"},"eventSelector":"28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a","id":1093,"name":"TokenUnbound","nameLocation":"4761:12:9","nodeType":"EventDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"indexed":false,"mutability":"mutable","name":"_token","nameLocation":"4782:6:9","nodeType":"VariableDeclaration","scope":1093,"src":"4774:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"4774:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4773:16:9"},"src":"4755:35:9"},{"anonymous":false,"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"4796:239:9","text":"  this event is emitted when a module has been added to the list of modules bound to the compliance contract\n  the event is emitted by the addModule function\n  `_module` is the address of the compliance module"},"eventSelector":"ead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a","id":1098,"name":"ModuleAdded","nameLocation":"5046:11:9","nodeType":"EventDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"indexed":true,"mutability":"mutable","name":"_module","nameLocation":"5074:7:9","nodeType":"VariableDeclaration","scope":1098,"src":"5058:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"5058:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5057:25:9"},"src":"5040:43:9"},{"anonymous":false,"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"5089:246:9","text":"  this event is emitted when a module has been removed from the list of modules bound to the compliance contract\n  the event is emitted by the removeModule function\n  `_module` is the address of the compliance module"},"eventSelector":"0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b8","id":1103,"name":"ModuleRemoved","nameLocation":"5346:13:9","nodeType":"EventDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"indexed":true,"mutability":"mutable","name":"_module","nameLocation":"5376:7:9","nodeType":"VariableDeclaration","scope":1103,"src":"5360:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"5360:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5359:25:9"},"src":"5340:45:9"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"5410:230:9","text":"  @dev binds a token to the compliance contract\n  @param _token address of the token to bind\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a TokenBound event"},"functionSelector":"3ff5aa02","id":1109,"implemented":false,"kind":"function","modifiers":[],"name":"bindToken","nameLocation":"5654:9:9","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"_token","nameLocation":"5672:6:9","nodeType":"VariableDeclaration","scope":1109,"src":"5664:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"5664:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5663:16:9"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"5688:0:9"},"scope":1195,"src":"5645:44:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"5695:238:9","text":"  @dev unbinds a token from the compliance contract\n  @param _token address of the token to unbind\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a TokenUnbound event"},"functionSelector":"40db3b50","id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"unbindToken","nameLocation":"5947:11:9","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"_token","nameLocation":"5967:6:9","nodeType":"VariableDeclaration","scope":1115,"src":"5959:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"5959:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5958:16:9"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"5983:0:9"},"scope":1195,"src":"5938:46:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"5990:337:9","text":"  @dev adds a module to the list of compliance modules\n  @param _module address of the module to add\n  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a ModuleAdded event"},"functionSelector":"1ed86f19","id":1121,"implemented":false,"kind":"function","modifiers":[],"name":"addModule","nameLocation":"6341:9:9","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"_module","nameLocation":"6359:7:9","nodeType":"VariableDeclaration","scope":1121,"src":"6351:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"6351:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6350:17:9"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[],"src":"6376:0:9"},"scope":1195,"src":"6332:45:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"6383:249:9","text":"  @dev removes a module from the list of compliance modules\n  @param _module address of the module to remove\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a ModuleRemoved event"},"functionSelector":"a0632461","id":1127,"implemented":false,"kind":"function","modifiers":[],"name":"removeModule","nameLocation":"6646:12:9","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"_module","nameLocation":"6667:7:9","nodeType":"VariableDeclaration","scope":1127,"src":"6659:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"6659:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6658:17:9"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"6684:0:9"},"scope":1195,"src":"6637:48:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"6691:350:9","text":"  @dev calls any function on bound modules\n  can be called only on bound modules\n  @param callData the bytecode for interaction with the module, abi encoded\n  @param _module The address of the module\n  This function can be called only by the modular compliance owner\n  emits a `ModuleInteraction` event"},"functionSelector":"efb22d33","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"callModuleFunction","nameLocation":"7055:18:9","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"callData","nameLocation":"7089:8:9","nodeType":"VariableDeclaration","scope":1135,"src":"7074:23:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"7074:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"_module","nameLocation":"7107:7:9","nodeType":"VariableDeclaration","scope":1135,"src":"7099:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"7099:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7073:42:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"7124:0:9"},"scope":1195,"src":"7046:79:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"7131:759:9","text":"  @dev function called whenever tokens are transferred\n  from one wallet to another\n  this function can update state variables in the modules bound to the compliance\n  these state variables being used by the module checks to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the modules\n  This function can be called ONLY by the token contract bound to the compliance\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer\n  This function calls moduleTransferAction() on each module bound to the compliance contract"},"functionSelector":"8baf29b4","id":1145,"implemented":false,"kind":"function","modifiers":[],"name":"transferred","nameLocation":"7904:11:9","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"_from","nameLocation":"7933:5:9","nodeType":"VariableDeclaration","scope":1145,"src":"7925:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"7925:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"_to","nameLocation":"7956:3:9","nodeType":"VariableDeclaration","scope":1145,"src":"7948:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"7948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"_amount","nameLocation":"7977:7:9","nodeType":"VariableDeclaration","scope":1145,"src":"7969:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"7969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7915:75:9"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"7999:0:9"},"scope":1195,"src":"7895:105:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"8006:680:9","text":"  @dev function called whenever tokens are created on a wallet\n  this function can update state variables in the modules bound to the compliance\n  these state variables being used by the module checks to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the modules\n  This function can be called ONLY by the token contract bound to the compliance\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the minting\n  This function calls moduleMintAction() on each module bound to the compliance contract"},"functionSelector":"5f8dead3","id":1153,"implemented":false,"kind":"function","modifiers":[],"name":"created","nameLocation":"8700:7:9","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"_to","nameLocation":"8716:3:9","nodeType":"VariableDeclaration","scope":1153,"src":"8708:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"8708:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"_amount","nameLocation":"8729:7:9","nodeType":"VariableDeclaration","scope":1153,"src":"8721:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"8721:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8707:30:9"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[],"src":"8746:0:9"},"scope":1195,"src":"8691:56:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"8753:693:9","text":"  @dev function called whenever tokens are destroyed from a wallet\n  this function can update state variables in the modules bound to the compliance\n  these state variables being used by the module checks to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the modules\n  This function can be called ONLY by the token contract bound to the compliance\n  @param _from The address on which tokens are burnt\n  @param _amount The amount of tokens involved in the burn\n  This function calls moduleBurnAction() on each module bound to the compliance contract"},"functionSelector":"8d2ea772","id":1161,"implemented":false,"kind":"function","modifiers":[],"name":"destroyed","nameLocation":"9460:9:9","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"_from","nameLocation":"9478:5:9","nodeType":"VariableDeclaration","scope":1161,"src":"9470:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"9470:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"_amount","nameLocation":"9493:7:9","nodeType":"VariableDeclaration","scope":1161,"src":"9485:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"9485:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9469:32:9"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[],"src":"9510:0:9"},"scope":1195,"src":"9451:60:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"9517:585:9","text":"  @dev checks that the transfer is compliant.\n  default compliance always returns true\n  READ ONLY FUNCTION, this function cannot be used to increment\n  counters, emit events, ...\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer\n  This function will call moduleCheck() on every module bound to the compliance\n  If each of the module checks return TRUE, this function will return TRUE as well\n  returns FALSE otherwise"},"functionSelector":"e46638e6","id":1173,"implemented":false,"kind":"function","modifiers":[],"name":"canTransfer","nameLocation":"10116:11:9","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"_from","nameLocation":"10145:5:9","nodeType":"VariableDeclaration","scope":1173,"src":"10137:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"_to","nameLocation":"10168:3:9","nodeType":"VariableDeclaration","scope":1173,"src":"10160:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"_amount","nameLocation":"10189:7:9","nodeType":"VariableDeclaration","scope":1173,"src":"10181:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"10181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:75:9"},"returnParameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"10226:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1170,"name":"bool","nodeType":"ElementaryTypeName","src":"10226:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10225:6:9"},"scope":1195,"src":"10107:125:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"10238:154:9","text":"  @dev getter for the modules bound to the compliance contract\n  returns address array of module contracts bound to the compliance"},"functionSelector":"b2494df3","id":1180,"implemented":false,"kind":"function","modifiers":[],"name":"getModules","nameLocation":"10406:10:9","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"10416:2:9"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1180,"src":"10442:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"10442:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1177,"nodeType":"ArrayTypeName","src":"10442:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10441:18:9"},"scope":1195,"src":"10397:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"10466:107:9","text":"  @dev getter for the address of the token bound\n  returns the address of the token"},"functionSelector":"6a3edf28","id":1186,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenBound","nameLocation":"10587:13:9","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"10600:2:9"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1186,"src":"10626:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"10626:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10625:9:9"},"scope":1195,"src":"10578:57:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"10641:136:9","text":"  @dev checks if a module is bound to the compliance contract\n  returns true if module is bound, false otherwise"},"functionSelector":"a446d49f","id":1194,"implemented":false,"kind":"function","modifiers":[],"name":"isModuleBound","nameLocation":"10791:13:9","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"_module","nameLocation":"10813:7:9","nodeType":"VariableDeclaration","scope":1194,"src":"10805:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"10805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10804:17:9"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1194,"src":"10845:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1191,"name":"bool","nodeType":"ElementaryTypeName","src":"10845:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10844:6:9"},"scope":1195,"src":"10782:69:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1196,"src":"3842:7011:9","usedErrors":[]}],"src":"3817:7037:9"},"id":9},"contracts/compliance/modular/MCStorage.sol":{"ast":{"absolutePath":"contracts/compliance/modular/MCStorage.sol","exportedSymbols":{"MCStorage":[1215]},"id":1216,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1197,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3818:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"MCStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1215,"linearizedBaseContracts":[1215],"name":"MCStorage","nameLocation":"3852:9:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"3868:43:10","text":"token linked to the compliance contract"},"id":1200,"mutability":"mutable","name":"_tokenBound","nameLocation":"3933:11:10","nodeType":"VariableDeclaration","scope":1215,"src":"3916:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"3916:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"3951:44:10","text":"Array of modules bound to the compliance"},"id":1204,"mutability":"mutable","name":"_modules","nameLocation":"4019:8:10","nodeType":"VariableDeclaration","scope":1215,"src":"4000:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"4000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1203,"nodeType":"ArrayTypeName","src":"4000:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"4034:36:10","text":"Mapping of module binding status"},"id":1209,"mutability":"mutable","name":"_moduleBound","nameLocation":"4109:12:10","nodeType":"VariableDeclaration","scope":1215,"src":"4075:46:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1208,"keyType":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"4083:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4075:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1207,"name":"bool","nodeType":"ElementaryTypeName","src":"4094:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"4128:174:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."},"id":1214,"mutability":"mutable","name":"__gap","nameLocation":"4327:5:10","nodeType":"VariableDeclaration","scope":1215,"src":"4307:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1213,"length":{"hexValue":"3439","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4315:2:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"4307:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1216,"src":"3843:492:10","usedErrors":[]}],"src":"3818:518:10"},"id":10},"contracts/compliance/modular/ModularCompliance.sol":{"ast":{"absolutePath":"contracts/compliance/modular/ModularCompliance.sol","exportedSymbols":{"AddressUpgradeable":[3330],"ContextUpgradeable":[3000],"IClaimIssuer":[59],"IClaimTopicsRegistry":[1950],"IERC20":[1074],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"IIdentityRegistry":[2125],"IIdentityRegistryStorage":[2241],"IModularCompliance":[1195],"IModule":[1918],"IToken":[2657],"ITrustedIssuersRegistry":[2342],"Initializable":[2958],"MCStorage":[1215],"ModularCompliance":[1825],"OwnableUpgradeable":[2789]},"id":1826,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1217,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3817:23:11"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"../../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":1218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1826,"sourceUnit":2790,"src":"3842:97:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/IToken.sol","file":"../../token/IToken.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1826,"sourceUnit":2658,"src":"3940:32:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/compliance/modular/IModularCompliance.sol","file":"./IModularCompliance.sol","id":1220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1826,"sourceUnit":1196,"src":"3973:34:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/compliance/modular/MCStorage.sol","file":"./MCStorage.sol","id":1221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1826,"sourceUnit":1216,"src":"4008:25:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/compliance/modular/modules/IModule.sol","file":"./modules/IModule.sol","id":1222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1826,"sourceUnit":1919,"src":"4034:31:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1223,"name":"IModularCompliance","nameLocations":["4097:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":1195,"src":"4097:18:11"},"id":1224,"nodeType":"InheritanceSpecifier","src":"4097:18:11"},{"baseName":{"id":1225,"name":"OwnableUpgradeable","nameLocations":["4117:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":2789,"src":"4117:18:11"},"id":1226,"nodeType":"InheritanceSpecifier","src":"4117:18:11"},{"baseName":{"id":1227,"name":"MCStorage","nameLocations":["4137:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"4137:9:11"},"id":1228,"nodeType":"InheritanceSpecifier","src":"4137:9:11"}],"canonicalName":"ModularCompliance","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1825,"linearizedBaseContracts":[1825,1215,2789,3000,2958,1195],"name":"ModularCompliance","nameLocation":"4076:17:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1240,"nodeType":"Block","src":"4298:134:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4316:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4320:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4316:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1234,"name":"_tokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4330:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4316:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6572726f72203a20746869732061646472657373206973206e6f74206120746f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e7472616374","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4343:70:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1","typeString":"literal_string \"error : this address is not a token bound to the compliance contract\""},"value":"error : this address is not a token bound to the compliance contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1","typeString":"literal_string \"error : this address is not a token bound to the compliance contract\""}],"id":1231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4308:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4308:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"4308:106:11"},{"id":1239,"nodeType":"PlaceholderStatement","src":"4424:1:11"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"4172:100:11","text":" @dev Throws if called by any address that is not a token bound to the compliance."},"id":1241,"name":"onlyToken","nameLocation":"4286:9:11","nodeType":"ModifierDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"4295:2:11"},"src":"4277:155:11","virtual":false,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"4475:33:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1246,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4485:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"4485:16:11"}]},"functionSelector":"e1c7392a","id":1250,"implemented":true,"kind":"function","modifiers":[{"id":1244,"kind":"modifierInvocation","modifierName":{"id":1243,"name":"initializer","nameLocations":["4463:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2860,"src":"4463:11:11"},"nodeType":"ModifierInvocation","src":"4463:11:11"}],"name":"init","nameLocation":"4447:4:11","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"4451:2:11"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"4475:0:11"},"scope":1825,"src":"4438:70:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1109],"body":{"id":1297,"nodeType":"Block","src":"4632:271:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"4650:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4661:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4665:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4661:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"_tokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4676:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4699:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4691:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"4691:7:11","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4691:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4676:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4705:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4709:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4705:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1271,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4719:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4705:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4676:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4675:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:76:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4728:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf","typeString":"literal_string \"only owner or token can call\""},"value":"only owner or token can call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf","typeString":"literal_string \"only owner or token can call\""}],"id":1257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4642:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4642:117:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"4642:117:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4777:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4795:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4787:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"4787:7:11","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4787:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4777:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4799:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4769:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4769:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1288,"nodeType":"ExpressionStatement","src":"4769:64:11"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1289,"name":"_tokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4843:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1290,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4857:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4843:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1292,"nodeType":"ExpressionStatement","src":"4843:20:11"},{"eventCall":{"arguments":[{"id":1294,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4889:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1293,"name":"TokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4878:10:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"EmitStatement","src":"4873:23:11"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"4514:60:11","text":"  @dev See {IModularCompliance-bindToken}."},"functionSelector":"3ff5aa02","id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"bindToken","nameLocation":"4588:9:11","nodeType":"FunctionDefinition","overrides":{"id":1255,"nodeType":"OverrideSpecifier","overrides":[],"src":"4623:8:11"},"parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"_token","nameLocation":"4606:6:11","nodeType":"VariableDeclaration","scope":1298,"src":"4598:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"4598:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4597:16:11"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[],"src":"4632:0:11"},"scope":1825,"src":"4579:324:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1115],"body":{"id":1343,"nodeType":"Block","src":"5031:307:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1306,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5049:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5060:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5064:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5060:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5049:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1311,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5074:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5074:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1313,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5088:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5074:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5049:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5096:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf","typeString":"literal_string \"only owner or token can call\""},"value":"only owner or token can call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf","typeString":"literal_string \"only owner or token can call\""}],"id":1305,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5041:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5041:86:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"5041:86:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5145:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1321,"name":"_tokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5155:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5145:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468697320746f6b656e206973206e6f7420626f756e64","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5168:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db","typeString":"literal_string \"This token is not bound\""},"value":"This token is not bound"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db","typeString":"literal_string \"This token is not bound\""}],"id":1319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"5137:57:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5212:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5222:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"5222:7:11","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5222:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5212:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5234:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5204:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"ExpressionStatement","src":"5204:64:11"},{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5278:18:11","subExpression":{"id":1336,"name":"_tokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5285:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"5278:18:11"},{"eventCall":{"arguments":[{"id":1340,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1339,"name":"TokenUnbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5311:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"EmitStatement","src":"5306:25:11"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"4909:62:11","text":"  @dev See {IModularCompliance-unbindToken}."},"functionSelector":"40db3b50","id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"unbindToken","nameLocation":"4985:11:11","nodeType":"FunctionDefinition","overrides":{"id":1303,"nodeType":"OverrideSpecifier","overrides":[],"src":"5022:8:11"},"parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"_token","nameLocation":"5005:6:11","nodeType":"VariableDeclaration","scope":1344,"src":"4997:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"4997:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4996:16:11"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"5031:0:11"},"scope":1825,"src":"4976:362:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1121],"body":{"id":1428,"nodeType":"Block","src":"5473:584:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5491:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5510:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5502:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"5502:7:11","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5491:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5514:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5483:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5483:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"5483:65:11"},{"expression":{"arguments":[{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5566:22:11","subExpression":{"baseExpression":{"id":1364,"name":"_moduleBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5567:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1366,"indexExpression":{"id":1365,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5580:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5567:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d6f64756c6520616c726561647920626f756e64","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5590:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e","typeString":"literal_string \"module already bound\""},"value":"module already bound"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e","typeString":"literal_string \"module already bound\""}],"id":1363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5558:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"5558:55:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1372,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"5631:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5640:6:11","memberName":"length","nodeType":"MemberAccess","src":"5631:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3234","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5650:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"5631:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c6573","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5654:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830","typeString":"literal_string \"cannot add more than 25 modules\""},"value":"cannot add more than 25 modules"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830","typeString":"literal_string \"cannot add more than 25 modules\""}],"id":1371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5623:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5623:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"5623:65:11"},{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"module","nameLocation":"5706:6:11","nodeType":"VariableDeclaration","scope":1428,"src":"5698:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"},"typeName":{"id":1380,"nodeType":"UserDefinedTypeName","pathNode":{"id":1379,"name":"IModule","nameLocations":["5698:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1918,"src":"5698:7:11"},"referencedDeclaration":1918,"src":"5698:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"visibility":"internal"}],"id":1385,"initialValue":{"arguments":[{"id":1383,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5723:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1382,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"5715:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$1918_$","typeString":"type(contract IModule)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5715:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"nodeType":"VariableDeclarationStatement","src":"5698:33:11"},{"condition":{"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5745:23:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1386,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5746:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5753:13:11","memberName":"isPlugAndPlay","nodeType":"MemberAccess","referencedDeclaration":1911,"src":"5746:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_bool_$","typeString":"function () pure external returns (bool)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5746:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1402,"nodeType":"IfStatement","src":"5741:158:11","trueBody":{"id":1401,"nodeType":"Block","src":"5770:129:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1395,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5825:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5817:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"5817:7:11","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1391,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5792:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5799:17:11","memberName":"canComplianceBind","nodeType":"MemberAccess","referencedDeclaration":1905,"src":"5792:24:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5792:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636f6d706c69616e6365206973206e6f74207375697461626c6520666f722062696e64696e6720746f20746865206d6f64756c65","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5833:54:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6027c959cf3cd0795c567867a9ffdb1a4df4845683f4a89a616ca508d8819a4","typeString":"literal_string \"compliance is not suitable for binding to the module\""},"value":"compliance is not suitable for binding to the module"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6027c959cf3cd0795c567867a9ffdb1a4df4845683f4a89a616ca508d8819a4","typeString":"literal_string \"compliance is not suitable for binding to the module\""}],"id":1390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5784:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:104:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"5784:104:11"}]}},{"expression":{"arguments":[{"arguments":[{"id":1408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5939:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5931:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"5931:7:11","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5931:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1403,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5909:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5916:14:11","memberName":"bindCompliance","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"5909:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5909:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"ExpressionStatement","src":"5909:36:11"},{"expression":{"arguments":[{"id":1415,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5969:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1412,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"5955:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:4:11","memberName":"push","nodeType":"MemberAccess","src":"5955:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5955:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1417,"nodeType":"ExpressionStatement","src":"5955:22:11"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1418,"name":"_moduleBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5987:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1420,"indexExpression":{"id":1419,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"6000:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5987:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6011:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5987:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"ExpressionStatement","src":"5987:28:11"},{"eventCall":{"arguments":[{"id":1425,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"6042:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1424,"name":"ModuleAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6030:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6030:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"EmitStatement","src":"6025:25:11"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"5344:60:11","text":"  @dev See {IModularCompliance-addModule}."},"functionSelector":"1ed86f19","id":1429,"implemented":true,"kind":"function","modifiers":[{"id":1351,"kind":"modifierInvocation","modifierName":{"id":1350,"name":"onlyOwner","nameLocations":["5463:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2703,"src":"5463:9:11"},"nodeType":"ModifierInvocation","src":"5463:9:11"}],"name":"addModule","nameLocation":"5418:9:11","nodeType":"FunctionDefinition","overrides":{"id":1349,"nodeType":"OverrideSpecifier","overrides":[],"src":"5454:8:11"},"parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"_module","nameLocation":"5436:7:11","nodeType":"VariableDeclaration","scope":1429,"src":"5428:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"5428:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5427:17:11"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"5473:0:11"},"scope":1825,"src":"5409:648:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1127],"body":{"id":1515,"nodeType":"Block","src":"6198:562:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6216:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6235:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6227:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"6227:7:11","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6216:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6239:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6208:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"6208:65:11"},{"expression":{"arguments":[{"baseExpression":{"id":1449,"name":"_moduleBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6291:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1451,"indexExpression":{"id":1450,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6304:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d6f64756c65206e6f7420626f756e64","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6314:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713","typeString":"literal_string \"module not bound\""},"value":"module not bound"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713","typeString":"literal_string \"module not bound\""}],"id":1448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6283:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6283:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"6283:50:11"},{"assignments":[1456],"declarations":[{"constant":false,"id":1456,"mutability":"mutable","name":"length","nameLocation":"6351:6:11","nodeType":"VariableDeclaration","scope":1515,"src":"6343:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"6343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1459,"initialValue":{"expression":{"id":1457,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6360:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6369:6:11","memberName":"length","nodeType":"MemberAccess","src":"6360:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6343:32:11"},{"body":{"id":1513,"nodeType":"Block","src":"6422:332:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1470,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6440:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1472,"indexExpression":{"id":1471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6449:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6440:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1473,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6455:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6440:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1512,"nodeType":"IfStatement","src":"6436:308:11","trueBody":{"id":1511,"nodeType":"Block","src":"6464:280:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1481,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6524:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}],"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6516:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"6516:7:11","typeDescriptions":{}}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1476,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6490:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1475,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"6482:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$1918_$","typeString":"type(contract IModule)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6499:16:11","memberName":"unbindCompliance","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"6482:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"ExpressionStatement","src":"6482:48:11"},{"expression":{"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1485,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6548:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1487,"indexExpression":{"id":1486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6557:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6548:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1488,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6562:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1492,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6571:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6580:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6571:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6562:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6548:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1494,"nodeType":"ExpressionStatement","src":"6548:34:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1495,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6600:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6609:3:11","memberName":"pop","nodeType":"MemberAccess","src":"6600:12:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6600:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"6600:14:11"},{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1500,"name":"_moduleBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6632:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1502,"indexExpression":{"id":1501,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6645:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6632:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6656:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6632:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1505,"nodeType":"ExpressionStatement","src":"6632:29:11"},{"eventCall":{"arguments":[{"id":1507,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6698:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1506,"name":"ModuleRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"6684:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"EmitStatement","src":"6679:27:11"},{"id":1510,"nodeType":"Break","src":"6724:5:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6405:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1465,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6409:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6405:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1514,"initializationExpression":{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"i","nameLocation":"6398:1:11","nodeType":"VariableDeclaration","scope":1514,"src":"6390:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"6390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1463,"initialValue":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6402:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6390:13:11"},"loopExpression":{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6417:3:11","subExpression":{"id":1467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6417:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ExpressionStatement","src":"6417:3:11"},"nodeType":"ForStatement","src":"6385:369:11"}]},"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"6063:63:11","text":"  @dev See {IModularCompliance-removeModule}."},"functionSelector":"a0632461","id":1516,"implemented":true,"kind":"function","modifiers":[{"id":1436,"kind":"modifierInvocation","modifierName":{"id":1435,"name":"onlyOwner","nameLocations":["6188:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2703,"src":"6188:9:11"},"nodeType":"ModifierInvocation","src":"6188:9:11"}],"name":"removeModule","nameLocation":"6140:12:11","nodeType":"FunctionDefinition","overrides":{"id":1434,"nodeType":"OverrideSpecifier","overrides":[],"src":"6179:8:11"},"parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"_module","nameLocation":"6161:7:11","nodeType":"VariableDeclaration","scope":1516,"src":"6153:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:17:11"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"6198:0:11"},"scope":1825,"src":"6131:629:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1145],"body":{"id":1581,"nodeType":"Block","src":"6926:344:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"6944:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6961:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6953:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"6953:7:11","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6953:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6944:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"6967:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6982:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6974:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"6974:7:11","typeDescriptions":{}}},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6974:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6967:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6944:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6986:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6936:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6936:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"6936:84:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1547,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"7038:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7047:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7038:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e73666572","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7050:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7","typeString":"literal_string \"invalid argument - no value transfer\""},"value":"invalid argument - no value transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7","typeString":"literal_string \"invalid argument - no value transfer\""}],"id":1546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7030:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7030:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1552,"nodeType":"ExpressionStatement","src":"7030:59:11"},{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"length","nameLocation":"7107:6:11","nodeType":"VariableDeclaration","scope":1581,"src":"7099:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7099:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1557,"initialValue":{"expression":{"id":1555,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"7116:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7125:6:11","memberName":"length","nodeType":"MemberAccess","src":"7116:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7099:32:11"},{"body":{"id":1579,"nodeType":"Block","src":"7178:86:11","statements":[{"expression":{"arguments":[{"id":1574,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7234:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7241:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"7246:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1569,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"7200:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1571,"indexExpression":{"id":1570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"7209:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7200:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1568,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"7192:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$1918_$","typeString":"type(contract IModule)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7192:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7213:20:11","memberName":"moduleTransferAction","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"7192:41:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7192:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"ExpressionStatement","src":"7192:61:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1562,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"7161:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1563,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"7165:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7161:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1580,"initializationExpression":{"assignments":[1559],"declarations":[{"constant":false,"id":1559,"mutability":"mutable","name":"i","nameLocation":"7154:1:11","nodeType":"VariableDeclaration","scope":1580,"src":"7146:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"7146:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1561,"initialValue":{"hexValue":"30","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7158:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7146:13:11"},"loopExpression":{"expression":{"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7173:3:11","subExpression":{"id":1565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"7173:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1567,"nodeType":"ExpressionStatement","src":"7173:3:11"},"nodeType":"ForStatement","src":"7141:123:11"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"6766:62:11","text":"  @dev See {IModularCompliance-transferred}."},"functionSelector":"8baf29b4","id":1582,"implemented":true,"kind":"function","modifiers":[{"id":1527,"kind":"modifierInvocation","modifierName":{"id":1526,"name":"onlyToken","nameLocations":["6916:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"6916:9:11"},"nodeType":"ModifierInvocation","src":"6916:9:11"}],"name":"transferred","nameLocation":"6842:11:11","nodeType":"FunctionDefinition","overrides":{"id":1525,"nodeType":"OverrideSpecifier","overrides":[],"src":"6907:8:11"},"parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"_from","nameLocation":"6862:5:11","nodeType":"VariableDeclaration","scope":1582,"src":"6854:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"6854:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"_to","nameLocation":"6877:3:11","nodeType":"VariableDeclaration","scope":1582,"src":"6869:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"6869:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"_value","nameLocation":"6890:6:11","nodeType":"VariableDeclaration","scope":1582,"src":"6882:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6882:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6853:44:11"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"6926:0:11"},"scope":1825,"src":"6833:437:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1153],"body":{"id":1637,"nodeType":"Block","src":"7413:306:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7431:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7446:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7438:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"7438:7:11","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7438:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7431:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7450:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7423:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1602,"nodeType":"ExpressionStatement","src":"7423:61:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1604,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"7502:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7511:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7502:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7514:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e","typeString":"literal_string \"invalid argument - no value mint\""},"value":"invalid argument - no value mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e","typeString":"literal_string \"invalid argument - no value mint\""}],"id":1603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7494:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7494:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"7494:55:11"},{"assignments":[1611],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"length","nameLocation":"7567:6:11","nodeType":"VariableDeclaration","scope":1637,"src":"7559:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7559:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1614,"initialValue":{"expression":{"id":1612,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"7576:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7585:6:11","memberName":"length","nodeType":"MemberAccess","src":"7576:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7559:32:11"},{"body":{"id":1635,"nodeType":"Block","src":"7638:75:11","statements":[{"expression":{"arguments":[{"id":1631,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7690:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1632,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"7695:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1626,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"7660:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1628,"indexExpression":{"id":1627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"7669:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7660:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1625,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"7652:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$1918_$","typeString":"type(contract IModule)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7673:16:11","memberName":"moduleMintAction","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"7652:37:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"ExpressionStatement","src":"7652:50:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"7621:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1620,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7625:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7621:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"initializationExpression":{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"i","nameLocation":"7614:1:11","nodeType":"VariableDeclaration","scope":1636,"src":"7606:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7606:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7618:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7606:13:11"},"loopExpression":{"expression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7633:3:11","subExpression":{"id":1622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"7633:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1624,"nodeType":"ExpressionStatement","src":"7633:3:11"},"nodeType":"ForStatement","src":"7601:112:11"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"7276:58:11","text":"  @dev See {IModularCompliance-created}."},"functionSelector":"5f8dead3","id":1638,"implemented":true,"kind":"function","modifiers":[{"id":1591,"kind":"modifierInvocation","modifierName":{"id":1590,"name":"onlyToken","nameLocations":["7403:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"7403:9:11"},"nodeType":"ModifierInvocation","src":"7403:9:11"}],"name":"created","nameLocation":"7348:7:11","nodeType":"FunctionDefinition","overrides":{"id":1589,"nodeType":"OverrideSpecifier","overrides":[],"src":"7394:8:11"},"parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"_to","nameLocation":"7364:3:11","nodeType":"VariableDeclaration","scope":1638,"src":"7356:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"7356:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"_value","nameLocation":"7377:6:11","nodeType":"VariableDeclaration","scope":1638,"src":"7369:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"7369:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7355:29:11"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"7413:0:11"},"scope":1825,"src":"7339:380:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1161],"body":{"id":1693,"nodeType":"Block","src":"7868:310:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"7886:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:11","typeDescriptions":{}}},"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7886:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7907:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""},"value":"invalid argument - zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543","typeString":"literal_string \"invalid argument - zero address\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7878:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7878:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"ExpressionStatement","src":"7878:63:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"7959:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7968:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7959:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7971:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06","typeString":"literal_string \"invalid argument - no value burn\""},"value":"invalid argument - no value burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06","typeString":"literal_string \"invalid argument - no value burn\""}],"id":1659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7951:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7951:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"7951:55:11"},{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"length","nameLocation":"8024:6:11","nodeType":"VariableDeclaration","scope":1693,"src":"8016:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"expression":{"id":1668,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8033:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8042:6:11","memberName":"length","nodeType":"MemberAccess","src":"8033:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8016:32:11"},{"body":{"id":1691,"nodeType":"Block","src":"8095:77:11","statements":[{"expression":{"arguments":[{"id":1687,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8147:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8154:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1682,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8117:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1684,"indexExpression":{"id":1683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"8126:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8117:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1681,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8109:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$1918_$","typeString":"type(contract IModule)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8130:16:11","memberName":"moduleBurnAction","nodeType":"MemberAccess","referencedDeclaration":1875,"src":"8109:37:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"ExpressionStatement","src":"8109:52:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"8078:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1676,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"8082:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8078:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1692,"initializationExpression":{"assignments":[1672],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"i","nameLocation":"8071:1:11","nodeType":"VariableDeclaration","scope":1692,"src":"8063:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"8063:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1674,"initialValue":{"hexValue":"30","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8063:13:11"},"loopExpression":{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8090:3:11","subExpression":{"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"8090:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"8090:3:11"},"nodeType":"ForStatement","src":"8058:114:11"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"7725:60:11","text":"  @dev See {IModularCompliance-destroyed}."},"functionSelector":"8d2ea772","id":1694,"implemented":true,"kind":"function","modifiers":[{"id":1647,"kind":"modifierInvocation","modifierName":{"id":1646,"name":"onlyToken","nameLocations":["7858:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"7858:9:11"},"nodeType":"ModifierInvocation","src":"7858:9:11"}],"name":"destroyed","nameLocation":"7799:9:11","nodeType":"FunctionDefinition","overrides":{"id":1645,"nodeType":"OverrideSpecifier","overrides":[],"src":"7849:8:11"},"parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"_from","nameLocation":"7817:5:11","nodeType":"VariableDeclaration","scope":1694,"src":"7809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"7809:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"_value","nameLocation":"7832:6:11","nodeType":"VariableDeclaration","scope":1694,"src":"7824:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"7824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7808:31:11"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"7868:0:11"},"scope":1825,"src":"7790:388:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1135],"body":{"id":1720,"nodeType":"Block","src":"8356:919:11","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1706,"name":"_moduleBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8374:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1708,"indexExpression":{"id":1707,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"8387:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8374:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616c6c206f6e6c79206f6e20626f756e64206d6f64756c65","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8397:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396","typeString":"literal_string \"call only on bound module\""},"value":"call only on bound module"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396","typeString":"literal_string \"call only on bound module\""}],"id":1705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8366:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8366:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"ExpressionStatement","src":"8366:59:11"},{"AST":{"nodeType":"YulBlock","src":"8864:342:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8878:36:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8909:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8903:5:11"},"nodeType":"YulFunctionCall","src":"8903:11:11"},"variables":[{"name":"freeMemoryPointer","nodeType":"YulTypedName","src":"8882:17:11","type":""}]},{"expression":{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"8940:17:11"},{"name":"callData.offset","nodeType":"YulIdentifier","src":"8959:15:11"},{"name":"callData.length","nodeType":"YulIdentifier","src":"8976:15:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8927:12:11"},"nodeType":"YulFunctionCall","src":"8927:65:11"},"nodeType":"YulExpressionStatement","src":"8927:65:11"},{"body":{"nodeType":"YulBlock","src":"9082:114:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9115:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9118:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9121:14:11"},"nodeType":"YulFunctionCall","src":"9121:16:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"9100:14:11"},"nodeType":"YulFunctionCall","src":"9100:38:11"},"nodeType":"YulExpressionStatement","src":"9100:38:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9162:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9165:14:11"},"nodeType":"YulFunctionCall","src":"9165:16:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9155:6:11"},"nodeType":"YulFunctionCall","src":"9155:27:11"},"nodeType":"YulExpressionStatement","src":"9155:27:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9020:3:11"},"nodeType":"YulFunctionCall","src":"9020:5:11"},{"name":"_module","nodeType":"YulIdentifier","src":"9027:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"9036:1:11","type":"","value":"0"},{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"9039:17:11"},{"name":"callData.length","nodeType":"YulIdentifier","src":"9058:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"9075:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9078:1:11","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9015:4:11"},"nodeType":"YulFunctionCall","src":"9015:65:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9008:6:11"},"nodeType":"YulFunctionCall","src":"9008:73:11"},"nodeType":"YulIf","src":"9005:191:11"}]},"evmVersion":"london","externalReferences":[{"declaration":1699,"isOffset":false,"isSlot":false,"src":"9027:7:11","valueSize":1},{"declaration":1697,"isOffset":false,"isSlot":false,"src":"8976:15:11","suffix":"length","valueSize":1},{"declaration":1697,"isOffset":false,"isSlot":false,"src":"9058:15:11","suffix":"length","valueSize":1},{"declaration":1697,"isOffset":true,"isSlot":false,"src":"8959:15:11","suffix":"offset","valueSize":1}],"id":1712,"nodeType":"InlineAssembly","src":"8855:351:11"},{"eventCall":{"arguments":[{"id":1714,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"9239:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1716,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"9258:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1715,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"9248:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function (bytes calldata) pure returns (bytes4)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9248:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1713,"name":"ModuleInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"9221:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$","typeString":"function (address,bytes4)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9221:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1719,"nodeType":"EmitStatement","src":"9216:52:11"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"8184:69:11","text":"  @dev see {IModularCompliance-callModuleFunction}."},"functionSelector":"efb22d33","id":1721,"implemented":true,"kind":"function","modifiers":[{"id":1703,"kind":"modifierInvocation","modifierName":{"id":1702,"name":"onlyOwner","nameLocations":["8346:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2703,"src":"8346:9:11"},"nodeType":"ModifierInvocation","src":"8346:9:11"}],"name":"callModuleFunction","nameLocation":"8267:18:11","nodeType":"FunctionDefinition","overrides":{"id":1701,"nodeType":"OverrideSpecifier","overrides":[],"src":"8337:8:11"},"parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"callData","nameLocation":"8301:8:11","nodeType":"VariableDeclaration","scope":1721,"src":"8286:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1696,"name":"bytes","nodeType":"ElementaryTypeName","src":"8286:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"_module","nameLocation":"8319:7:11","nodeType":"VariableDeclaration","scope":1721,"src":"8311:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"8311:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8285:42:11"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"8356:0:11"},"scope":1825,"src":"8258:1017:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1194],"body":{"id":1734,"nodeType":"Block","src":"9428:45:11","statements":[{"expression":{"baseExpression":{"id":1730,"name":"_moduleBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"9445:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1732,"indexExpression":{"id":1731,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"9458:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9445:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1729,"id":1733,"nodeType":"Return","src":"9438:28:11"}]},"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"9281:64:11","text":"  @dev See {IModularCompliance-isModuleBound}."},"functionSelector":"a446d49f","id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"isModuleBound","nameLocation":"9359:13:11","nodeType":"FunctionDefinition","overrides":{"id":1726,"nodeType":"OverrideSpecifier","overrides":[],"src":"9404:8:11"},"parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"_module","nameLocation":"9381:7:11","nodeType":"VariableDeclaration","scope":1735,"src":"9373:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"9373:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9372:17:11"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"9422:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1727,"name":"bool","nodeType":"ElementaryTypeName","src":"9422:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9421:6:11"},"scope":1825,"src":"9350:123:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1180],"body":{"id":1745,"nodeType":"Block","src":"9617:32:11","statements":[{"expression":{"id":1743,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"9634:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1742,"id":1744,"nodeType":"Return","src":"9627:15:11"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"9479:61:11","text":"  @dev See {IModularCompliance-getModules}."},"functionSelector":"b2494df3","id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"getModules","nameLocation":"9554:10:11","nodeType":"FunctionDefinition","overrides":{"id":1738,"nodeType":"OverrideSpecifier","overrides":[],"src":"9581:8:11"},"parameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"9564:2:11"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"9599:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"9599:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1740,"nodeType":"ArrayTypeName","src":"9599:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9598:18:11"},"scope":1825,"src":"9545:104:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1186],"body":{"id":1755,"nodeType":"Block","src":"9790:35:11","statements":[{"expression":{"id":1753,"name":"_tokenBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9807:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1752,"id":1754,"nodeType":"Return","src":"9800:18:11"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"9655:64:11","text":"  @dev See {IModularCompliance-getTokenBound}."},"functionSelector":"6a3edf28","id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenBound","nameLocation":"9733:13:11","nodeType":"FunctionDefinition","overrides":{"id":1749,"nodeType":"OverrideSpecifier","overrides":[],"src":"9763:8:11"},"parameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"9746:2:11"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"9781:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"9781:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9780:9:11"},"scope":1825,"src":"9724:101:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1173],"body":{"id":1807,"nodeType":"Block","src":"10001:259:11","statements":[{"assignments":[1770],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"length","nameLocation":"10019:6:11","nodeType":"VariableDeclaration","scope":1807,"src":"10011:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10011:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1773,"initialValue":{"expression":{"id":1771,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"10028:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10037:6:11","memberName":"length","nodeType":"MemberAccess","src":"10028:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10011:32:11"},{"body":{"id":1803,"nodeType":"Block","src":"10090:143:11","statements":[{"condition":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10108:68:11","subExpression":{"arguments":[{"id":1790,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"10142:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"10149:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1792,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"10154:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1795,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10170:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ModularCompliance_$1825","typeString":"contract ModularCompliance"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10162:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"10162:7:11","typeDescriptions":{}}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10162:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":1785,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"10117:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1787,"indexExpression":{"id":1786,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"10126:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10117:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1784,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"10109:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$1918_$","typeString":"type(contract IModule)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10109:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$1918","typeString":"contract IModule"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10130:11:11","memberName":"moduleCheck","nodeType":"MemberAccess","referencedDeclaration":1889,"src":"10109:32:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,uint256,address) view external returns (bool)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10109:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1802,"nodeType":"IfStatement","src":"10104:119:11","trueBody":{"id":1801,"nodeType":"Block","src":"10178:45:11","statements":[{"expression":{"hexValue":"66616c7365","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10203:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1768,"id":1800,"nodeType":"Return","src":"10196:12:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"10073:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1779,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"10077:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10073:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1804,"initializationExpression":{"assignments":[1775],"declarations":[{"constant":false,"id":1775,"mutability":"mutable","name":"i","nameLocation":"10066:1:11","nodeType":"VariableDeclaration","scope":1804,"src":"10058:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"10058:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"hexValue":"30","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10070:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10058:13:11"},"loopExpression":{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10085:3:11","subExpression":{"id":1781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"10085:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"10085:3:11"},"nodeType":"ForStatement","src":"10053:180:11"},{"expression":{"hexValue":"74727565","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10249:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1768,"id":1806,"nodeType":"Return","src":"10242:11:11"}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"9831:62:11","text":"  @dev See {IModularCompliance-canTransfer}."},"functionSelector":"e46638e6","id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"canTransfer","nameLocation":"9907:11:11","nodeType":"FunctionDefinition","overrides":{"id":1765,"nodeType":"OverrideSpecifier","overrides":[],"src":"9977:8:11"},"parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"_from","nameLocation":"9927:5:11","nodeType":"VariableDeclaration","scope":1808,"src":"9919:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"9919:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"_to","nameLocation":"9942:3:11","nodeType":"VariableDeclaration","scope":1808,"src":"9934:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"9934:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"_value","nameLocation":"9955:6:11","nodeType":"VariableDeclaration","scope":1808,"src":"9947:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"9947:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9918:44:11"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"9995:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1766,"name":"bool","nodeType":"ElementaryTypeName","src":"9995:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9994:6:11"},"scope":1825,"src":"9898:362:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1823,"nodeType":"Block","src":"10570:738:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1816,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10584:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10593:6:11","memberName":"length","nodeType":"MemberAccess","src":"10584:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10603:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10584:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"10580:722:11","trueBody":{"id":1821,"nodeType":"Block","src":"10606:696:11","statements":[{"AST":{"nodeType":"YulBlock","src":"11221:71:11","statements":[{"nodeType":"YulAssignment","src":"11239:39:11","value":{"arguments":[{"name":"callData.offset","nodeType":"YulIdentifier","src":"11262:15:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11249:12:11"},"nodeType":"YulFunctionCall","src":"11249:29:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11239:6:11"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1811,"isOffset":true,"isSlot":false,"src":"11262:15:11","suffix":"offset","valueSize":1},{"declaration":1814,"isOffset":false,"isSlot":false,"src":"11239:6:11","valueSize":1}],"id":1820,"nodeType":"InlineAssembly","src":"11212:80:11"}]}}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"10266:217:11","text":"@dev Extracts the Solidity ABI selector for the specified interaction.\n @param callData Interaction data.\n @return result The 4 byte function selector of the call encoded in\n this interaction."},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"_selector","nameLocation":"10497:9:11","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"callData","nameLocation":"10522:8:11","nodeType":"VariableDeclaration","scope":1824,"src":"10507:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1810,"name":"bytes","nodeType":"ElementaryTypeName","src":"10507:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10506:25:11"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"result","nameLocation":"10562:6:11","nodeType":"VariableDeclaration","scope":1824,"src":"10555:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1813,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10555:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10554:15:11"},"scope":1825,"src":"10488:820:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1826,"src":"4067:7243:11","usedErrors":[]}],"src":"3817:7494:11"},"id":11},"contracts/compliance/modular/modules/IModule.sol":{"ast":{"absolutePath":"contracts/compliance/modular/modules/IModule.sol","exportedSymbols":{"IModule":[1918]},"id":1919,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1827,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3817:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IModule","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1918,"linearizedBaseContracts":[1918],"name":"IModule","nameLocation":"3852:7:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"3882:230:12","text":"  this event is emitted when the compliance contract is bound to the module.\n  the event is emitted by the bindCompliance function\n  `_compliance` is the address of the compliance contract being bound"},"eventSelector":"1f7b76c58fb697eb53c6c7c1becb96911516a136e24d7ced386b2355358b75a3","id":1832,"name":"ComplianceBound","nameLocation":"4123:15:12","nodeType":"EventDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"indexed":true,"mutability":"mutable","name":"_compliance","nameLocation":"4155:11:12","nodeType":"VariableDeclaration","scope":1832,"src":"4139:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4138:29:12"},"src":"4117:51:12"},{"anonymous":false,"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"4174:238:12","text":"  this event is emitted when the compliance contract is unbound from the module.\n  the event is emitted by the unbindCompliance function\n  `_compliance` is the address of the compliance contract being unbound"},"eventSelector":"408b49d9be1c914c52a0227e18a077e5a892dddf32a26cfa94a5d9708fad7718","id":1837,"name":"ComplianceUnbound","nameLocation":"4423:17:12","nodeType":"EventDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"indexed":true,"mutability":"mutable","name":"_compliance","nameLocation":"4457:11:12","nodeType":"VariableDeclaration","scope":1837,"src":"4441:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"4441:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4440:29:12"},"src":"4417:53:12"},{"documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"4495:471:12","text":"  @dev binds the module to a compliance contract\n  once the module is bound, the compliance contract can interact with the module\n  this function can be called ONLY by the compliance contract itself (_compliance), through the\n  addModule function, which calls bindCompliance\n  the module cannot be already bound to the compliance\n  @param _compliance address of the compliance contract\n  Emits a ComplianceBound event"},"functionSelector":"4a932544","id":1843,"implemented":false,"kind":"function","modifiers":[],"name":"bindCompliance","nameLocation":"4980:14:12","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"_compliance","nameLocation":"5003:11:12","nodeType":"VariableDeclaration","scope":1843,"src":"4995:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4994:21:12"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"5024:0:12"},"scope":1918,"src":"4971:54:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"5031:434:12","text":"  @dev unbinds the module from a compliance contract\n  once the module is unbound, the compliance contract cannot interact with the module anymore\n  this function can be called ONLY by the compliance contract itself (_compliance), through the\n  removeModule function, which calls unbindCompliance\n  @param _compliance address of the compliance contract\n  Emits a ComplianceUnbound event"},"functionSelector":"0694a5fb","id":1849,"implemented":false,"kind":"function","modifiers":[],"name":"unbindCompliance","nameLocation":"5479:16:12","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"_compliance","nameLocation":"5504:11:12","nodeType":"VariableDeclaration","scope":1849,"src":"5496:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"5496:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5495:21:12"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"5525:0:12"},"scope":1918,"src":"5470:56:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"5532:609:12","text":"  @dev action performed on the module during a transfer action\n  this function is used to update variables of the module upon transfer if it is required\n  if the module does not require state updates in case of transfer, this function remains empty\n  This function can be called ONLY by the compliance contract itself (_compliance)\n  This function can be called only on a compliance contract that is bound to the module\n  @param _from address of the transfer sender\n  @param _to address of the transfer receiver\n  @param _value amount of tokens sent"},"functionSelector":"2cb7e1ec","id":1859,"implemented":false,"kind":"function","modifiers":[],"name":"moduleTransferAction","nameLocation":"6155:20:12","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"_from","nameLocation":"6184:5:12","nodeType":"VariableDeclaration","scope":1859,"src":"6176:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"6176:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"_to","nameLocation":"6199:3:12","nodeType":"VariableDeclaration","scope":1859,"src":"6191:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"6191:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"_value","nameLocation":"6212:6:12","nodeType":"VariableDeclaration","scope":1859,"src":"6204:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6175:44:12"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"6228:0:12"},"scope":1918,"src":"6146:83:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"6235:542:12","text":"  @dev action performed on the module during a mint action\n  this function is used to update variables of the module upon minting if it is required\n  if the module does not require state updates in case of mint, this function remains empty\n  This function can be called ONLY by the compliance contract itself (_compliance)\n  This function can be called only on a compliance contract that is bound to the module\n  @param _to address used for minting\n  @param _value amount of tokens minted"},"functionSelector":"f104a8c9","id":1867,"implemented":false,"kind":"function","modifiers":[],"name":"moduleMintAction","nameLocation":"6791:16:12","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"_to","nameLocation":"6816:3:12","nodeType":"VariableDeclaration","scope":1867,"src":"6808:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"6808:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"_value","nameLocation":"6829:6:12","nodeType":"VariableDeclaration","scope":1867,"src":"6821:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"6821:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6807:29:12"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"6845:0:12"},"scope":1918,"src":"6782:64:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"6852:552:12","text":"  @dev action performed on the module during a burn action\n  this function is used to update variables of the module upon burning if it is required\n  if the module does not require state updates in case of burn, this function remains empty\n  This function can be called ONLY by the compliance contract itself (_compliance)\n  This function can be called only on a compliance contract that is bound to the module\n  @param _from address on which tokens are burnt\n  @param _value amount of tokens burnt"},"functionSelector":"372491a2","id":1875,"implemented":false,"kind":"function","modifiers":[],"name":"moduleBurnAction","nameLocation":"7418:16:12","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"_from","nameLocation":"7443:5:12","nodeType":"VariableDeclaration","scope":1875,"src":"7435:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"7435:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"_value","nameLocation":"7458:6:12","nodeType":"VariableDeclaration","scope":1875,"src":"7450:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"7450:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7434:31:12"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"7474:0:12"},"scope":1918,"src":"7409:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"7481:618:12","text":"  @dev compliance check on the module for a specific transaction on a specific compliance contract\n  this function is used to check if the transfer is allowed by the module\n  This function can be called only on a compliance contract that is bound to the module\n  @param _from address of the transfer sender\n  @param _to address of the transfer receiver\n  @param _value amount of tokens sent\n  @param _compliance address of the compliance contract concerned by the transfer action\n  the function returns TRUE if the module allows the transfer, FALSE otherwise"},"functionSelector":"013b7ce4","id":1889,"implemented":false,"kind":"function","modifiers":[],"name":"moduleCheck","nameLocation":"8113:11:12","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"_from","nameLocation":"8133:5:12","nodeType":"VariableDeclaration","scope":1889,"src":"8125:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"8125:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"_to","nameLocation":"8148:3:12","nodeType":"VariableDeclaration","scope":1889,"src":"8140:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"8140:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"_value","nameLocation":"8161:6:12","nodeType":"VariableDeclaration","scope":1889,"src":"8153:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"8153:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"_compliance","nameLocation":"8177:11:12","nodeType":"VariableDeclaration","scope":1889,"src":"8169:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"8169:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8124:65:12"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"8213:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1886,"name":"bool","nodeType":"ElementaryTypeName","src":"8213:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8212:6:12"},"scope":1918,"src":"8104:115:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"8225:133:12","text":"  @dev getter for compliance binding status on module\n  @param _compliance address of the compliance contract"},"functionSelector":"4cf4d295","id":1897,"implemented":false,"kind":"function","modifiers":[],"name":"isComplianceBound","nameLocation":"8372:17:12","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"_compliance","nameLocation":"8398:11:12","nodeType":"VariableDeclaration","scope":1897,"src":"8390:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"8390:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8389:21:12"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"8434:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1894,"name":"bool","nodeType":"ElementaryTypeName","src":"8434:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8433:6:12"},"scope":1918,"src":"8363:77:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"8446:147:12","text":"  @dev checks whether compliance is suitable to bind to the module.\n  @param _compliance address of the compliance contract"},"functionSelector":"bcc21053","id":1905,"implemented":false,"kind":"function","modifiers":[],"name":"canComplianceBind","nameLocation":"8607:17:12","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"_compliance","nameLocation":"8633:11:12","nodeType":"VariableDeclaration","scope":1905,"src":"8625:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8624:21:12"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1905,"src":"8669:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1902,"name":"bool","nodeType":"ElementaryTypeName","src":"8669:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8668:6:12"},"scope":1918,"src":"8598:77:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"8681:61:12","text":"  @dev getter for module plug & play status"},"functionSelector":"e6f5e807","id":1911,"implemented":false,"kind":"function","modifiers":[],"name":"isPlugAndPlay","nameLocation":"8756:13:12","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"8769:2:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"8795:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"8795:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8794:6:12"},"scope":1918,"src":"8747:54:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"8807:103:12","text":"  @dev getter for the name of the module\n  @return _name the name of the module"},"functionSelector":"06fdde03","id":1917,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"8924:4:12","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[],"src":"8928:2:12"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"_name","nameLocation":"8968:5:12","nodeType":"VariableDeclaration","scope":1917,"src":"8954:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1914,"name":"string","nodeType":"ElementaryTypeName","src":"8954:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8953:21:12"},"scope":1918,"src":"8915:60:12","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":1919,"src":"3842:5135:12","usedErrors":[]}],"src":"3817:5161:12"},"id":12},"contracts/registry/interface/IClaimTopicsRegistry.sol":{"ast":{"absolutePath":"contracts/registry/interface/IClaimTopicsRegistry.sol","exportedSymbols":{"IClaimTopicsRegistry":[1950]},"id":1951,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1920,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3817:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IClaimTopicsRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1950,"linearizedBaseContracts":[1950],"name":"IClaimTopicsRegistry","nameLocation":"3852:20:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"3879:241:13","text":"  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n  the event is emitted by the 'addClaimTopic' function\n  `claimTopic` is the required claim added to the Claim Topics Registry"},"eventSelector":"01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6","id":1925,"name":"ClaimTopicAdded","nameLocation":"4131:15:13","nodeType":"EventDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"indexed":true,"mutability":"mutable","name":"claimTopic","nameLocation":"4163:10:13","nodeType":"VariableDeclaration","scope":1925,"src":"4147:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4146:28:13"},"src":"4125:50:13"},{"anonymous":false,"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"4181:252:13","text":"  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n  the event is emitted by the 'removeClaimTopic' function\n  `claimTopic` is the required claim removed from the Claim Topics Registry"},"eventSelector":"0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5","id":1930,"name":"ClaimTopicRemoved","nameLocation":"4444:17:13","nodeType":"EventDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"indexed":true,"mutability":"mutable","name":"claimTopic","nameLocation":"4478:10:13","nodeType":"VariableDeclaration","scope":1930,"src":"4462:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4461:28:13"},"src":"4438:52:13"},{"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"4496:280:13","text":" @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n Only owner can call.\n emits `ClaimTopicAdded` event\n cannot add more than 15 topics for 1 token as adding more could create gas issues\n @param _claimTopic The claim topic index"},"functionSelector":"c7b22551","id":1936,"implemented":false,"kind":"function","modifiers":[],"name":"addClaimTopic","nameLocation":"4790:13:13","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"_claimTopic","nameLocation":"4812:11:13","nodeType":"VariableDeclaration","scope":1936,"src":"4804:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4804:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4803:21:13"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"4833:0:13"},"scope":1950,"src":"4781:53:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"4840:200:13","text":"  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n  Only owner can call.\n  emits `ClaimTopicRemoved` event\n  @param _claimTopic The claim topic index"},"functionSelector":"08297846","id":1942,"implemented":false,"kind":"function","modifiers":[],"name":"removeClaimTopic","nameLocation":"5054:16:13","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"_claimTopic","nameLocation":"5079:11:13","nodeType":"VariableDeclaration","scope":1942,"src":"5071:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5071:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5070:21:13"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"5100:0:13"},"scope":1950,"src":"5045:56:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"5107:122:13","text":"  @dev Get the trusted claim topics for the security token\n  @return Array of trusted claim topics"},"functionSelector":"df09d604","id":1949,"implemented":false,"kind":"function","modifiers":[],"name":"getClaimTopics","nameLocation":"5243:14:13","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[],"src":"5257:2:13"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1949,"src":"5283:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ArrayTypeName","src":"5283:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5282:18:13"},"scope":1950,"src":"5234:67:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1951,"src":"3842:1461:13","usedErrors":[]}],"src":"3817:1487:13"},"id":13},"contracts/registry/interface/IIdentityRegistry.sol":{"ast":{"absolutePath":"contracts/registry/interface/IIdentityRegistry.sol","exportedSymbols":{"IClaimIssuer":[59],"IClaimTopicsRegistry":[1950],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"IIdentityRegistry":[2125],"IIdentityRegistryStorage":[2241],"ITrustedIssuersRegistry":[2342]},"id":2126,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1952,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3817:23:14"},{"absolutePath":"contracts/registry/interface/ITrustedIssuersRegistry.sol","file":"./ITrustedIssuersRegistry.sol","id":1953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":2343,"src":"3842:39:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/registry/interface/IClaimTopicsRegistry.sol","file":"./IClaimTopicsRegistry.sol","id":1954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":1951,"src":"3882:36:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/registry/interface/IIdentityRegistryStorage.sol","file":"./IIdentityRegistryStorage.sol","id":1955,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":2242,"src":"3919:40:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","file":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","id":1956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":60,"src":"3961:67:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@onchain-id/solidity/contracts/interface/IIdentity.sol","file":"@onchain-id/solidity/contracts/interface/IIdentity.sol","id":1957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":324,"src":"4029:64:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IIdentityRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2125,"linearizedBaseContracts":[2125],"name":"IIdentityRegistry","nameLocation":"4105:17:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"4129:256:14","text":"  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"},"eventSelector":"7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0","id":1962,"name":"ClaimTopicsRegistrySet","nameLocation":"4396:22:14","nodeType":"EventDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"indexed":true,"mutability":"mutable","name":"claimTopicsRegistry","nameLocation":"4435:19:14","nodeType":"VariableDeclaration","scope":1962,"src":"4419:35:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"4419:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4418:37:14"},"src":"4390:66:14"},{"anonymous":false,"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"4462:260:14","text":"  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `identityStorage` is the address of the Identity Registry Storage contract"},"eventSelector":"2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c","id":1967,"name":"IdentityStorageSet","nameLocation":"4733:18:14","nodeType":"EventDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"indexed":true,"mutability":"mutable","name":"identityStorage","nameLocation":"4768:15:14","nodeType":"VariableDeclaration","scope":1967,"src":"4752:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"4752:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4751:33:14"},"src":"4727:58:14"},{"anonymous":false,"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"4791:265:14","text":"  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"},"eventSelector":"1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0","id":1972,"name":"TrustedIssuersRegistrySet","nameLocation":"5067:25:14","nodeType":"EventDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"indexed":true,"mutability":"mutable","name":"trustedIssuersRegistry","nameLocation":"5109:22:14","nodeType":"VariableDeclaration","scope":1972,"src":"5093:38:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"5093:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5092:40:14"},"src":"5061:72:14"},{"anonymous":false,"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"5139:307:14","text":"  this event is emitted when an Identity is registered into the Identity Registry.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"},"eventSelector":"6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19","id":1980,"name":"IdentityRegistered","nameLocation":"5457:18:14","nodeType":"EventDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"indexed":true,"mutability":"mutable","name":"investorAddress","nameLocation":"5492:15:14","nodeType":"VariableDeclaration","scope":1980,"src":"5476:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"5476:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1978,"indexed":true,"mutability":"mutable","name":"identity","nameLocation":"5527:8:14","nodeType":"VariableDeclaration","scope":1980,"src":"5509:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"IIdentity","nameLocations":["5509:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"5509:9:14"},"referencedDeclaration":323,"src":"5509:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"5475:61:14"},"src":"5451:86:14"},{"anonymous":false,"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"5543:302:14","text":"  this event is emitted when an Identity is removed from the Identity Registry.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"},"eventSelector":"59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327","id":1988,"name":"IdentityRemoved","nameLocation":"5856:15:14","nodeType":"EventDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"indexed":true,"mutability":"mutable","name":"investorAddress","nameLocation":"5888:15:14","nodeType":"VariableDeclaration","scope":1988,"src":"5872:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"5872:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"indexed":true,"mutability":"mutable","name":"identity","nameLocation":"5923:8:14","nodeType":"VariableDeclaration","scope":1988,"src":"5905:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":1985,"nodeType":"UserDefinedTypeName","pathNode":{"id":1984,"name":"IIdentity","nameLocations":["5905:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"5905:9:14"},"referencedDeclaration":323,"src":"5905:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"5871:61:14"},"src":"5850:83:14"},{"anonymous":false,"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"5939:261:14","text":"  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"},"eventSelector":"e98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010","id":1997,"name":"IdentityUpdated","nameLocation":"6211:15:14","nodeType":"EventDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"indexed":true,"mutability":"mutable","name":"oldIdentity","nameLocation":"6245:11:14","nodeType":"VariableDeclaration","scope":1997,"src":"6227:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":1991,"nodeType":"UserDefinedTypeName","pathNode":{"id":1990,"name":"IIdentity","nameLocations":["6227:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"6227:9:14"},"referencedDeclaration":323,"src":"6227:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"},{"constant":false,"id":1995,"indexed":true,"mutability":"mutable","name":"newIdentity","nameLocation":"6276:11:14","nodeType":"VariableDeclaration","scope":1997,"src":"6258:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":1994,"nodeType":"UserDefinedTypeName","pathNode":{"id":1993,"name":"IIdentity","nameLocations":["6258:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"6258:9:14"},"referencedDeclaration":323,"src":"6258:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"6226:62:14"},"src":"6205:84:14"},{"anonymous":false,"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"6295:295:14","text":"  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"},"eventSelector":"04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853","id":2004,"name":"CountryUpdated","nameLocation":"6601:14:14","nodeType":"EventDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"indexed":true,"mutability":"mutable","name":"investorAddress","nameLocation":"6632:15:14","nodeType":"VariableDeclaration","scope":2004,"src":"6616:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"6616:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2002,"indexed":true,"mutability":"mutable","name":"country","nameLocation":"6664:7:14","nodeType":"VariableDeclaration","scope":2004,"src":"6649:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2001,"name":"uint16","nodeType":"ElementaryTypeName","src":"6649:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6615:57:14"},"src":"6595:78:14"},{"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"6679:474:14","text":"  @dev Register an identity contract corresponding to a user address.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityRegistered` event"},"functionSelector":"454a03e0","id":2015,"implemented":false,"kind":"function","modifiers":[],"name":"registerIdentity","nameLocation":"7167:16:14","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"_userAddress","nameLocation":"7201:12:14","nodeType":"VariableDeclaration","scope":2015,"src":"7193:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"7193:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"_identity","nameLocation":"7233:9:14","nodeType":"VariableDeclaration","scope":2015,"src":"7223:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"IIdentity","nameLocations":["7223:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"7223:9:14"},"referencedDeclaration":323,"src":"7223:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"_country","nameLocation":"7259:8:14","nodeType":"VariableDeclaration","scope":2015,"src":"7252:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2011,"name":"uint16","nodeType":"ElementaryTypeName","src":"7252:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"7183:90:14"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"7282:0:14"},"scope":2125,"src":"7158:125:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"7289:356:14","text":"  @dev Removes an user from the identity registry.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityRemoved` event"},"functionSelector":"a8d29d1d","id":2021,"implemented":false,"kind":"function","modifiers":[],"name":"deleteIdentity","nameLocation":"7659:14:14","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"_userAddress","nameLocation":"7682:12:14","nodeType":"VariableDeclaration","scope":2021,"src":"7674:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"7674:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7673:22:14"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[],"src":"7704:0:14"},"scope":2125,"src":"7650:55:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"7711:312:14","text":"  @dev Replace the actual identityRegistryStorage contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _identityRegistryStorage The address of the new Identity Registry Storage\n  emits `IdentityStorageSet` event"},"functionSelector":"26d941ae","id":2027,"implemented":false,"kind":"function","modifiers":[],"name":"setIdentityRegistryStorage","nameLocation":"8037:26:14","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"_identityRegistryStorage","nameLocation":"8072:24:14","nodeType":"VariableDeclaration","scope":2027,"src":"8064:32:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"8064:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8063:34:14"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[],"src":"8106:0:14"},"scope":2125,"src":"8028:79:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"8113:304:14","text":"  @dev Replace the actual claimTopicsRegistry contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _claimTopicsRegistry The address of the new claim Topics Registry\n  emits `ClaimTopicsRegistrySet` event"},"functionSelector":"670af6a9","id":2033,"implemented":false,"kind":"function","modifiers":[],"name":"setClaimTopicsRegistry","nameLocation":"8431:22:14","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"_claimTopicsRegistry","nameLocation":"8462:20:14","nodeType":"VariableDeclaration","scope":2033,"src":"8454:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"8454:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8453:30:14"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[],"src":"8492:0:14"},"scope":2125,"src":"8422:71:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"8499:316:14","text":"  @dev Replace the actual trustedIssuersRegistry contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\n  emits `TrustedIssuersRegistrySet` event"},"functionSelector":"e744d789","id":2039,"implemented":false,"kind":"function","modifiers":[],"name":"setTrustedIssuersRegistry","nameLocation":"8829:25:14","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"_trustedIssuersRegistry","nameLocation":"8863:23:14","nodeType":"VariableDeclaration","scope":2039,"src":"8855:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:33:14"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[],"src":"8896:0:14"},"scope":2125,"src":"8820:77:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"8903:410:14","text":"  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryUpdated` event"},"functionSelector":"3b239a7f","id":2047,"implemented":false,"kind":"function","modifiers":[],"name":"updateCountry","nameLocation":"9327:13:14","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"_userAddress","nameLocation":"9349:12:14","nodeType":"VariableDeclaration","scope":2047,"src":"9341:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"9341:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"_country","nameLocation":"9370:8:14","nodeType":"VariableDeclaration","scope":2047,"src":"9363:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2043,"name":"uint16","nodeType":"ElementaryTypeName","src":"9363:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9340:39:14"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[],"src":"9388:0:14"},"scope":2125,"src":"9318:71:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"9395:526:14","text":"  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityUpdated` event"},"functionSelector":"8e098ca1","id":2056,"implemented":false,"kind":"function","modifiers":[],"name":"updateIdentity","nameLocation":"9935:14:14","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"_userAddress","nameLocation":"9958:12:14","nodeType":"VariableDeclaration","scope":2056,"src":"9950:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"9950:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"_identity","nameLocation":"9982:9:14","nodeType":"VariableDeclaration","scope":2056,"src":"9972:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2052,"nodeType":"UserDefinedTypeName","pathNode":{"id":2051,"name":"IIdentity","nameLocations":["9972:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"9972:9:14"},"referencedDeclaration":323,"src":"9972:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"9949:43:14"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[],"src":"10001:0:14"},"scope":2125,"src":"9926:76:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"10008:701:14","text":"  @dev function allowing to register identities in batch\n  This function can only be called by a wallet set as agent of the smart contract\n  Requires that none of the users has an identity contract already registered.\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses of the users\n  @param _identities The addresses of the corresponding identity contracts\n  @param _countries The countries of the corresponding investors\n  emits _userAddresses.length `IdentityRegistered` events"},"functionSelector":"653dc9f1","id":2070,"implemented":false,"kind":"function","modifiers":[],"name":"batchRegisterIdentity","nameLocation":"10723:21:14","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"_userAddresses","nameLocation":"10773:14:14","nodeType":"VariableDeclaration","scope":2070,"src":"10754:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"10754:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2059,"nodeType":"ArrayTypeName","src":"10754:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"_identities","nameLocation":"10818:11:14","nodeType":"VariableDeclaration","scope":2070,"src":"10797:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptr","typeString":"contract IIdentity[]"},"typeName":{"baseType":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"IIdentity","nameLocations":["10797:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"10797:9:14"},"referencedDeclaration":323,"src":"10797:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"id":2063,"nodeType":"ArrayTypeName","src":"10797:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IIdentity_$323_$dyn_storage_ptr","typeString":"contract IIdentity[]"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"_countries","nameLocation":"10857:10:14","nodeType":"VariableDeclaration","scope":2070,"src":"10839:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_calldata_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":2065,"name":"uint16","nodeType":"ElementaryTypeName","src":"10839:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2066,"nodeType":"ArrayTypeName","src":"10839:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"}],"src":"10744:129:14"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"10882:0:14"},"scope":2125,"src":"10714:169:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"10889:292:14","text":"  @dev This functions checks whether a wallet has its Identity registered or not\n  in the Identity Registry.\n  @param _userAddress The address of the user to be checked.\n  @return 'True' if the address is contained in the Identity Registry, 'false' if not."},"functionSelector":"5dbe47e8","id":2078,"implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11195:8:14","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"_userAddress","nameLocation":"11212:12:14","nodeType":"VariableDeclaration","scope":2078,"src":"11204:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"11204:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11203:22:14"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"11249:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2075,"name":"bool","nodeType":"ElementaryTypeName","src":"11249:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11248:6:14"},"scope":2125,"src":"11186:69:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"11261:391:14","text":"  @dev This functions checks whether an identity contract\n  corresponding to the provided user address has the required claims or not based\n  on the data fetched from trusted issuers registry and from the claim topics registry\n  @param _userAddress The address of the user to be verified.\n  @return 'True' if the address is verified, 'false' if not."},"functionSelector":"b9209e33","id":2086,"implemented":false,"kind":"function","modifiers":[],"name":"isVerified","nameLocation":"11666:10:14","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"_userAddress","nameLocation":"11685:12:14","nodeType":"VariableDeclaration","scope":2086,"src":"11677:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"11677:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11676:22:14"},"returnParameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"11722:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2083,"name":"bool","nodeType":"ElementaryTypeName","src":"11722:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11721:6:14"},"scope":2125,"src":"11657:71:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"11734:117:14","text":"  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"},"functionSelector":"f0eb5e54","id":2095,"implemented":false,"kind":"function","modifiers":[],"name":"identity","nameLocation":"11865:8:14","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"_userAddress","nameLocation":"11882:12:14","nodeType":"VariableDeclaration","scope":2095,"src":"11874:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"11874:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11873:22:14"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"11919:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2092,"nodeType":"UserDefinedTypeName","pathNode":{"id":2091,"name":"IIdentity","nameLocations":["11919:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"11919:9:14"},"referencedDeclaration":323,"src":"11919:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"11918:11:14"},"scope":2125,"src":"11856:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"11936:120:14","text":"  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"},"functionSelector":"7e42683b","id":2103,"implemented":false,"kind":"function","modifiers":[],"name":"investorCountry","nameLocation":"12070:15:14","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"_userAddress","nameLocation":"12094:12:14","nodeType":"VariableDeclaration","scope":2103,"src":"12086:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"12086:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12085:22:14"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"12131:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2100,"name":"uint16","nodeType":"ElementaryTypeName","src":"12131:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12130:8:14"},"scope":2125,"src":"12061:78:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"12145:100:14","text":"  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry."},"functionSelector":"f11abfd8","id":2110,"implemented":false,"kind":"function","modifiers":[],"name":"identityStorage","nameLocation":"12259:15:14","nodeType":"FunctionDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[],"src":"12274:2:14"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"12300:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentityRegistryStorage_$2241","typeString":"contract IIdentityRegistryStorage"},"typeName":{"id":2107,"nodeType":"UserDefinedTypeName","pathNode":{"id":2106,"name":"IIdentityRegistryStorage","nameLocations":["12300:24:14"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"12300:24:14"},"referencedDeclaration":2241,"src":"12300:24:14","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentityRegistryStorage_$2241","typeString":"contract IIdentityRegistryStorage"}},"visibility":"internal"}],"src":"12299:26:14"},"scope":2125,"src":"12250:76:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"12332:99:14","text":"  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry."},"functionSelector":"b4f3fcb7","id":2117,"implemented":false,"kind":"function","modifiers":[],"name":"issuersRegistry","nameLocation":"12445:15:14","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[],"src":"12460:2:14"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"12486:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITrustedIssuersRegistry_$2342","typeString":"contract ITrustedIssuersRegistry"},"typeName":{"id":2114,"nodeType":"UserDefinedTypeName","pathNode":{"id":2113,"name":"ITrustedIssuersRegistry","nameLocations":["12486:23:14"],"nodeType":"IdentifierPath","referencedDeclaration":2342,"src":"12486:23:14"},"referencedDeclaration":2342,"src":"12486:23:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITrustedIssuersRegistry_$2342","typeString":"contract ITrustedIssuersRegistry"}},"visibility":"internal"}],"src":"12485:25:14"},"scope":2125,"src":"12436:75:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"12517:96:14","text":"  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry."},"functionSelector":"3b3e12f4","id":2124,"implemented":false,"kind":"function","modifiers":[],"name":"topicsRegistry","nameLocation":"12627:14:14","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"12641:2:14"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"12667:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimTopicsRegistry_$1950","typeString":"contract IClaimTopicsRegistry"},"typeName":{"id":2121,"nodeType":"UserDefinedTypeName","pathNode":{"id":2120,"name":"IClaimTopicsRegistry","nameLocations":["12667:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":1950,"src":"12667:20:14"},"referencedDeclaration":1950,"src":"12667:20:14","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimTopicsRegistry_$1950","typeString":"contract IClaimTopicsRegistry"}},"visibility":"internal"}],"src":"12666:22:14"},"scope":2125,"src":"12618:71:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2126,"src":"4095:8596:14","usedErrors":[]}],"src":"3817:8875:14"},"id":14},"contracts/registry/interface/IIdentityRegistryStorage.sol":{"ast":{"absolutePath":"contracts/registry/interface/IIdentityRegistryStorage.sol","exportedSymbols":{"IERC734":[206],"IERC735":[314],"IIdentity":[323],"IIdentityRegistryStorage":[2241]},"id":2242,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2127,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3817:23:15"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IIdentity.sol","file":"@onchain-id/solidity/contracts/interface/IIdentity.sol","id":2128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2242,"sourceUnit":324,"src":"3842:64:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IIdentityRegistryStorage","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2241,"linearizedBaseContracts":[2241],"name":"IIdentityRegistryStorage","nameLocation":"3918:24:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"3966:306:15","text":"  this event is emitted when an Identity is registered into the storage contract.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"},"eventSelector":"0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747","id":2136,"name":"IdentityStored","nameLocation":"4283:14:15","nodeType":"EventDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"indexed":true,"mutability":"mutable","name":"investorAddress","nameLocation":"4314:15:15","nodeType":"VariableDeclaration","scope":2136,"src":"4298:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2134,"indexed":true,"mutability":"mutable","name":"identity","nameLocation":"4349:8:15","nodeType":"VariableDeclaration","scope":2136,"src":"4331:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2133,"nodeType":"UserDefinedTypeName","pathNode":{"id":2132,"name":"IIdentity","nameLocations":["4331:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"4331:9:15"},"referencedDeclaration":323,"src":"4331:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"4297:61:15"},"src":"4277:82:15"},{"anonymous":false,"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"4365:301:15","text":"  this event is emitted when an Identity is removed from the storage contract.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"},"eventSelector":"ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b","id":2144,"name":"IdentityUnstored","nameLocation":"4677:16:15","nodeType":"EventDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"indexed":true,"mutability":"mutable","name":"investorAddress","nameLocation":"4710:15:15","nodeType":"VariableDeclaration","scope":2144,"src":"4694:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"4694:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2142,"indexed":true,"mutability":"mutable","name":"identity","nameLocation":"4745:8:15","nodeType":"VariableDeclaration","scope":2144,"src":"4727:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2141,"nodeType":"UserDefinedTypeName","pathNode":{"id":2140,"name":"IIdentity","nameLocations":["4727:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"4727:9:15"},"referencedDeclaration":323,"src":"4727:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"4693:61:15"},"src":"4671:84:15"},{"anonymous":false,"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"4761:261:15","text":"  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"},"eventSelector":"556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808","id":2153,"name":"IdentityModified","nameLocation":"5033:16:15","nodeType":"EventDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"indexed":true,"mutability":"mutable","name":"oldIdentity","nameLocation":"5068:11:15","nodeType":"VariableDeclaration","scope":2153,"src":"5050:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2147,"nodeType":"UserDefinedTypeName","pathNode":{"id":2146,"name":"IIdentity","nameLocations":["5050:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"5050:9:15"},"referencedDeclaration":323,"src":"5050:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"},{"constant":false,"id":2151,"indexed":true,"mutability":"mutable","name":"newIdentity","nameLocation":"5099:11:15","nodeType":"VariableDeclaration","scope":2153,"src":"5081:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2150,"nodeType":"UserDefinedTypeName","pathNode":{"id":2149,"name":"IIdentity","nameLocations":["5081:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"5081:9:15"},"referencedDeclaration":323,"src":"5081:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"5049:62:15"},"src":"5027:85:15"},{"anonymous":false,"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"5118:295:15","text":"  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"},"eventSelector":"20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf","id":2160,"name":"CountryModified","nameLocation":"5424:15:15","nodeType":"EventDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"indexed":true,"mutability":"mutable","name":"investorAddress","nameLocation":"5456:15:15","nodeType":"VariableDeclaration","scope":2160,"src":"5440:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2158,"indexed":true,"mutability":"mutable","name":"country","nameLocation":"5488:7:15","nodeType":"VariableDeclaration","scope":2160,"src":"5473:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2157,"name":"uint16","nodeType":"ElementaryTypeName","src":"5473:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5439:57:15"},"src":"5418:79:15"},{"anonymous":false,"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"5503:240:15","text":"  this event is emitted when an Identity Registry is bound to the storage contract\n  the event is emitted by the 'addIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry added"},"eventSelector":"500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb","id":2165,"name":"IdentityRegistryBound","nameLocation":"5754:21:15","nodeType":"EventDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"indexed":true,"mutability":"mutable","name":"identityRegistry","nameLocation":"5792:16:15","nodeType":"VariableDeclaration","scope":2165,"src":"5776:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"5776:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5775:34:15"},"src":"5748:62:15"},{"anonymous":false,"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"5816:249:15","text":"  this event is emitted when an Identity Registry is unbound from the storage contract\n  the event is emitted by the 'removeIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry removed"},"eventSelector":"51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9","id":2170,"name":"IdentityRegistryUnbound","nameLocation":"6076:23:15","nodeType":"EventDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"indexed":true,"mutability":"mutable","name":"identityRegistry","nameLocation":"6116:16:15","nodeType":"VariableDeclaration","scope":2170,"src":"6100:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"6100:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6099:34:15"},"src":"6070:64:15"},{"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"6159:483:15","text":"  @dev adds an identity contract corresponding to a user address in the storage.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityStored` event"},"functionSelector":"a53410dd","id":2181,"implemented":false,"kind":"function","modifiers":[],"name":"addIdentityToStorage","nameLocation":"6656:20:15","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"_userAddress","nameLocation":"6694:12:15","nodeType":"VariableDeclaration","scope":2181,"src":"6686:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"6686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"_identity","nameLocation":"6726:9:15","nodeType":"VariableDeclaration","scope":2181,"src":"6716:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2175,"nodeType":"UserDefinedTypeName","pathNode":{"id":2174,"name":"IIdentity","nameLocations":["6716:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"6716:9:15"},"referencedDeclaration":323,"src":"6716:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"_country","nameLocation":"6752:8:15","nodeType":"VariableDeclaration","scope":2181,"src":"6745:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2177,"name":"uint16","nodeType":"ElementaryTypeName","src":"6745:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6676:90:15"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"6775:0:15"},"scope":2241,"src":"6647:129:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"6782:349:15","text":"  @dev Removes an user from the storage.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityUnstored` event"},"functionSelector":"cf191bcd","id":2187,"implemented":false,"kind":"function","modifiers":[],"name":"removeIdentityFromStorage","nameLocation":"7145:25:15","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"_userAddress","nameLocation":"7179:12:15","nodeType":"VariableDeclaration","scope":2187,"src":"7171:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"7171:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7170:22:15"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"7201:0:15"},"scope":2241,"src":"7136:66:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"7208:413:15","text":"  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryModified` event"},"functionSelector":"9f3418d5","id":2195,"implemented":false,"kind":"function","modifiers":[],"name":"modifyStoredInvestorCountry","nameLocation":"7635:27:15","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"_userAddress","nameLocation":"7671:12:15","nodeType":"VariableDeclaration","scope":2195,"src":"7663:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"7663:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"_country","nameLocation":"7692:8:15","nodeType":"VariableDeclaration","scope":2195,"src":"7685:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2191,"name":"uint16","nodeType":"ElementaryTypeName","src":"7685:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"7662:39:15"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"7710:0:15"},"scope":2241,"src":"7626:85:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"7717:529:15","text":"  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityModified` event"},"functionSelector":"e805cf86","id":2204,"implemented":false,"kind":"function","modifiers":[],"name":"modifyStoredIdentity","nameLocation":"8260:20:15","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"_userAddress","nameLocation":"8289:12:15","nodeType":"VariableDeclaration","scope":2204,"src":"8281:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"8281:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"_identity","nameLocation":"8313:9:15","nodeType":"VariableDeclaration","scope":2204,"src":"8303:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"IIdentity","nameLocations":["8303:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"8303:9:15"},"referencedDeclaration":323,"src":"8303:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"8280:43:15"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[],"src":"8332:0:15"},"scope":2241,"src":"8251:82:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"8339:426:15","text":"  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n  cannot bind more than 300 IR to 1 IRS\n  @param _identityRegistry The identity registry address to add."},"functionSelector":"690a49f9","id":2210,"implemented":false,"kind":"function","modifiers":[],"name":"bindIdentityRegistry","nameLocation":"8779:20:15","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"_identityRegistry","nameLocation":"8808:17:15","nodeType":"VariableDeclaration","scope":2210,"src":"8800:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"8800:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8799:27:15"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"8835:0:15"},"scope":2241,"src":"8770:66:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"8842:399:15","text":"  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n  @param _identityRegistry The identity registry address to remove."},"functionSelector":"97a012f7","id":2216,"implemented":false,"kind":"function","modifiers":[],"name":"unbindIdentityRegistry","nameLocation":"9255:22:15","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"_identityRegistry","nameLocation":"9286:17:15","nodeType":"VariableDeclaration","scope":2216,"src":"9278:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9277:27:15"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"9313:0:15"},"scope":2241,"src":"9246:68:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"9320:87:15","text":"  @dev Returns the identity registries linked to the storage contract"},"functionSelector":"bf9eb959","id":2223,"implemented":false,"kind":"function","modifiers":[],"name":"linkedIdentityRegistries","nameLocation":"9421:24:15","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[],"src":"9445:2:15"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2223,"src":"9471:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"9471:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2220,"nodeType":"ArrayTypeName","src":"9471:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9470:18:15"},"scope":2241,"src":"9412:77:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"9495:117:15","text":"  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"},"functionSelector":"7988d3a5","id":2232,"implemented":false,"kind":"function","modifiers":[],"name":"storedIdentity","nameLocation":"9626:14:15","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"_userAddress","nameLocation":"9649:12:15","nodeType":"VariableDeclaration","scope":2232,"src":"9641:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"9641:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9640:22:15"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2232,"src":"9686:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"},"typeName":{"id":2229,"nodeType":"UserDefinedTypeName","pathNode":{"id":2228,"name":"IIdentity","nameLocations":["9686:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"9686:9:15"},"referencedDeclaration":323,"src":"9686:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentity_$323","typeString":"contract IIdentity"}},"visibility":"internal"}],"src":"9685:11:15"},"scope":2241,"src":"9617:80:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"9703:120:15","text":"  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"},"functionSelector":"727e13bc","id":2240,"implemented":false,"kind":"function","modifiers":[],"name":"storedInvestorCountry","nameLocation":"9837:21:15","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"_userAddress","nameLocation":"9867:12:15","nodeType":"VariableDeclaration","scope":2240,"src":"9859:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"9859:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9858:22:15"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"9904:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2237,"name":"uint16","nodeType":"ElementaryTypeName","src":"9904:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9903:8:15"},"scope":2241,"src":"9828:84:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2242,"src":"3908:6006:15","usedErrors":[]}],"src":"3817:6098:15"},"id":15},"contracts/registry/interface/ITrustedIssuersRegistry.sol":{"ast":{"absolutePath":"contracts/registry/interface/ITrustedIssuersRegistry.sol","exportedSymbols":{"IClaimIssuer":[59],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"ITrustedIssuersRegistry":[2342]},"id":2343,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2243,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3818:23:16"},{"absolutePath":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","file":"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol","id":2244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2343,"sourceUnit":60,"src":"3843:67:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITrustedIssuersRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2342,"linearizedBaseContracts":[2342],"name":"ITrustedIssuersRegistry","nameLocation":"3922:23:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"3952:321:16","text":"  this event is emitted when a trusted issuer is added in the registry.\n  the event is emitted by the addTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"eventSelector":"fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872","id":2253,"name":"TrustedIssuerAdded","nameLocation":"4284:18:16","nodeType":"EventDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"indexed":true,"mutability":"mutable","name":"trustedIssuer","nameLocation":"4324:13:16","nodeType":"VariableDeclaration","scope":2253,"src":"4303:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"IClaimIssuer","nameLocations":["4303:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4303:12:16"},"referencedDeclaration":59,"src":"4303:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":2251,"indexed":false,"mutability":"mutable","name":"claimTopics","nameLocation":"4349:11:16","nodeType":"VariableDeclaration","scope":2253,"src":"4339:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ArrayTypeName","src":"4339:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4302:59:16"},"src":"4278:84:16"},{"anonymous":false,"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"4368:242:16","text":"  this event is emitted when a trusted issuer is removed from the registry.\n  the event is emitted by the removeTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"},"eventSelector":"2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321","id":2259,"name":"TrustedIssuerRemoved","nameLocation":"4621:20:16","nodeType":"EventDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"indexed":true,"mutability":"mutable","name":"trustedIssuer","nameLocation":"4663:13:16","nodeType":"VariableDeclaration","scope":2259,"src":"4642:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2256,"nodeType":"UserDefinedTypeName","pathNode":{"id":2255,"name":"IClaimIssuer","nameLocations":["4642:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4642:12:16"},"referencedDeclaration":59,"src":"4642:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"4641:36:16"},"src":"4615:63:16"},{"anonymous":false,"documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"4684:348:16","text":"  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n  the event is emitted by the updateIssuerClaimTopics function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"eventSelector":"ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf","id":2268,"name":"ClaimTopicsUpdated","nameLocation":"5043:18:16","nodeType":"EventDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"indexed":true,"mutability":"mutable","name":"trustedIssuer","nameLocation":"5083:13:16","nodeType":"VariableDeclaration","scope":2268,"src":"5062:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2262,"nodeType":"UserDefinedTypeName","pathNode":{"id":2261,"name":"IClaimIssuer","nameLocations":["5062:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5062:12:16"},"referencedDeclaration":59,"src":"5062:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":2266,"indexed":false,"mutability":"mutable","name":"claimTopics","nameLocation":"5108:11:16","nodeType":"VariableDeclaration","scope":2268,"src":"5098:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2265,"nodeType":"ArrayTypeName","src":"5098:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5061:59:16"},"src":"5037:84:16"},{"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"5127:651:16","text":"  @dev registers a ClaimIssuer contract as trusted claim issuer.\n  Requires that a ClaimIssuer contract doesn't already exist\n  Requires that the claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  Requires that there is no more than 50 Trusted issuers\n  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerAdded` event"},"functionSelector":"9f63ea98","id":2278,"implemented":false,"kind":"function","modifiers":[],"name":"addTrustedIssuer","nameLocation":"5792:16:16","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"5822:14:16","nodeType":"VariableDeclaration","scope":2278,"src":"5809:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2271,"nodeType":"UserDefinedTypeName","pathNode":{"id":2270,"name":"IClaimIssuer","nameLocations":["5809:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5809:12:16"},"referencedDeclaration":59,"src":"5809:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"_claimTopics","nameLocation":"5857:12:16","nodeType":"VariableDeclaration","scope":2278,"src":"5838:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"5838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ArrayTypeName","src":"5838:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5808:62:16"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[],"src":"5879:0:16"},"scope":2342,"src":"5783:97:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"5886:353:16","text":"  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n  Requires that the claim issuer contract to be registered first\n  @param _trustedIssuer the claim issuer to remove.\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerRemoved` event"},"functionSelector":"b93d28eb","id":2285,"implemented":false,"kind":"function","modifiers":[],"name":"removeTrustedIssuer","nameLocation":"6253:19:16","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"6286:14:16","nodeType":"VariableDeclaration","scope":2285,"src":"6273:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2281,"nodeType":"UserDefinedTypeName","pathNode":{"id":2280,"name":"IClaimIssuer","nameLocations":["6273:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6273:12:16"},"referencedDeclaration":59,"src":"6273:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"6272:29:16"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"6310:0:16"},"scope":2342,"src":"6244:67:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"6317:591:16","text":"  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n  Requires that this ClaimIssuer contract already exists in the registry\n  Requires that the provided claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  @param _trustedIssuer the claim issuer to update.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `ClaimTopicsUpdated` event"},"functionSelector":"04bc7e84","id":2295,"implemented":false,"kind":"function","modifiers":[],"name":"updateIssuerClaimTopics","nameLocation":"6922:23:16","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"6959:14:16","nodeType":"VariableDeclaration","scope":2295,"src":"6946:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2288,"nodeType":"UserDefinedTypeName","pathNode":{"id":2287,"name":"IClaimIssuer","nameLocations":["6946:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"6946:12:16"},"referencedDeclaration":59,"src":"6946:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"_claimTopics","nameLocation":"6994:12:16","nodeType":"VariableDeclaration","scope":2295,"src":"6975:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"nodeType":"ArrayTypeName","src":"6975:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6945:62:16"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[],"src":"7016:0:16"},"scope":2342,"src":"6913:104:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"7023:138:16","text":"  @dev Function for getting all the trusted claim issuers stored.\n  @return array of all claim issuers registered."},"functionSelector":"d9dd24c5","id":2303,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedIssuers","nameLocation":"7175:17:16","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[],"src":"7192:2:16"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"7218:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":2299,"nodeType":"UserDefinedTypeName","pathNode":{"id":2298,"name":"IClaimIssuer","nameLocations":["7218:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"7218:12:16"},"referencedDeclaration":59,"src":"7218:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":2300,"nodeType":"ArrayTypeName","src":"7218:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"}],"src":"7217:23:16"},"scope":2342,"src":"7166:75:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"7247:271:16","text":"  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n  @param claimTopic the claim topic to get the trusted issuers for.\n  @return array of all claim issuer addresses that are allowed for the given claim topic."},"functionSelector":"52c111d1","id":2313,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedIssuersForClaimTopic","nameLocation":"7532:30:16","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"claimTopic","nameLocation":"7571:10:16","nodeType":"VariableDeclaration","scope":2313,"src":"7563:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7563:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7562:20:16"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"7606:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr","typeString":"contract IClaimIssuer[]"},"typeName":{"baseType":{"id":2309,"nodeType":"UserDefinedTypeName","pathNode":{"id":2308,"name":"IClaimIssuer","nameLocations":["7606:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"7606:12:16"},"referencedDeclaration":59,"src":"7606:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"id":2310,"nodeType":"ArrayTypeName","src":"7606:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr","typeString":"contract IClaimIssuer[]"}},"visibility":"internal"}],"src":"7605:23:16"},"scope":2342,"src":"7523:106:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"7635:197:16","text":"  @dev Checks if the ClaimIssuer contract is trusted\n  @param _issuer the address of the ClaimIssuer contract\n  @return true if the issuer is trusted, false otherwise."},"functionSelector":"ef2ed1a4","id":2321,"implemented":false,"kind":"function","modifiers":[],"name":"isTrustedIssuer","nameLocation":"7846:15:16","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"_issuer","nameLocation":"7870:7:16","nodeType":"VariableDeclaration","scope":2321,"src":"7862:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"7862:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7861:17:16"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"7902:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"7902:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7901:6:16"},"scope":2342,"src":"7837:71:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"7914:333:16","text":"  @dev Function for getting all the claim topic of trusted claim issuer\n  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n  @param _trustedIssuer the trusted issuer concerned.\n  @return The set of claim topics that the trusted issuer is allowed to emit"},"functionSelector":"c28fb278","id":2331,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedIssuerClaimTopics","nameLocation":"8261:27:16","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"_trustedIssuer","nameLocation":"8302:14:16","nodeType":"VariableDeclaration","scope":2331,"src":"8289:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"IClaimIssuer","nameLocations":["8289:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"8289:12:16"},"referencedDeclaration":59,"src":"8289:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IClaimIssuer_$59","typeString":"contract IClaimIssuer"}},"visibility":"internal"}],"src":"8288:29:16"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"8341:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"8341:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2328,"nodeType":"ArrayTypeName","src":"8341:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8340:18:16"},"scope":2342,"src":"8252:107:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"8365:383:16","text":"  @dev Function for checking if the trusted claim issuer is allowed\n  to emit a certain claim topic\n  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n  @return true if the issuer is trusted for this claim topic."},"functionSelector":"34a89987","id":2341,"implemented":false,"kind":"function","modifiers":[],"name":"hasClaimTopic","nameLocation":"8762:13:16","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"_issuer","nameLocation":"8784:7:16","nodeType":"VariableDeclaration","scope":2341,"src":"8776:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"8776:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"_claimTopic","nameLocation":"8801:11:16","nodeType":"VariableDeclaration","scope":2341,"src":"8793:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"8793:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8775:38:16"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"8837:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2338,"name":"bool","nodeType":"ElementaryTypeName","src":"8837:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8836:6:16"},"scope":2342,"src":"8753:90:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2343,"src":"3912:4933:16","usedErrors":[]}],"src":"3818:5028:16"},"id":16},"contracts/token/IToken.sol":{"ast":{"absolutePath":"contracts/token/IToken.sol","exportedSymbols":{"IClaimIssuer":[59],"IClaimTopicsRegistry":[1950],"IERC20":[1074],"IERC734":[206],"IERC735":[314],"IIdentity":[323],"IIdentityRegistry":[2125],"IIdentityRegistryStorage":[2241],"IModularCompliance":[1195],"IToken":[2657],"ITrustedIssuersRegistry":[2342]},"id":2658,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2344,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"3818:23:17"},{"absolutePath":"contracts/registry/interface/IIdentityRegistry.sol","file":"../registry/interface/IIdentityRegistry.sol","id":2345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2658,"sourceUnit":2126,"src":"3843:53:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/compliance/modular/IModularCompliance.sol","file":"../compliance/modular/IModularCompliance.sol","id":2346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2658,"sourceUnit":1196,"src":"3897:54:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2658,"sourceUnit":1075,"src":"3952:56:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2349,"name":"IERC20","nameLocations":["4049:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"4049:6:17"},"id":2350,"nodeType":"InheritanceSpecifier","src":"4049:6:17"}],"canonicalName":"IToken","contractDependencies":[],"contractKind":"interface","documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"4010:19:17","text":"@dev interface"},"fullyImplemented":false,"id":2657,"linearizedBaseContracts":[2657,1074],"name":"IToken","nameLocation":"4039:6:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"4079:463:17","text":"  this event is emitted when the token information is updated.\n  the event is emitted by the token init function and by the setTokenInformation function\n  `_newName` is the name of the token\n  `_newSymbol` is the symbol of the token\n  `_newDecimals` is the decimals of the token\n  `_newVersion` is the version of the token, current version is 3.0\n  `_newOnchainID` is the address of the onchainID of the token"},"eventSelector":"6a1105ac8148a3c319adbc369f9072573e8a11d3a3d195e067e7c40767ec54d1","id":2363,"name":"UpdatedTokenInformation","nameLocation":"4553:23:17","nodeType":"EventDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"indexed":true,"mutability":"mutable","name":"_newName","nameLocation":"4592:8:17","nodeType":"VariableDeclaration","scope":2363,"src":"4577:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2352,"name":"string","nodeType":"ElementaryTypeName","src":"4577:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2355,"indexed":true,"mutability":"mutable","name":"_newSymbol","nameLocation":"4617:10:17","nodeType":"VariableDeclaration","scope":2363,"src":"4602:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2354,"name":"string","nodeType":"ElementaryTypeName","src":"4602:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2357,"indexed":false,"mutability":"mutable","name":"_newDecimals","nameLocation":"4635:12:17","nodeType":"VariableDeclaration","scope":2363,"src":"4629:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2356,"name":"uint8","nodeType":"ElementaryTypeName","src":"4629:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2359,"indexed":false,"mutability":"mutable","name":"_newVersion","nameLocation":"4660:11:17","nodeType":"VariableDeclaration","scope":2363,"src":"4649:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2358,"name":"string","nodeType":"ElementaryTypeName","src":"4649:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2361,"indexed":true,"mutability":"mutable","name":"_newOnchainID","nameLocation":"4689:13:17","nodeType":"VariableDeclaration","scope":2363,"src":"4673:29:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"4673:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4576:127:17"},"src":"4547:157:17"},{"anonymous":false,"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"4710:269:17","text":"  this event is emitted when the IdentityRegistry has been set for the token\n  the event is emitted by the token constructor and by the setIdentityRegistry function\n  `_identityRegistry` is the address of the Identity Registry of the token"},"eventSelector":"d2be862d755bca7e0d39772b2cab3a5578da9c285f69199f4c063c2294a7f36c","id":2368,"name":"IdentityRegistryAdded","nameLocation":"4990:21:17","nodeType":"EventDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"indexed":true,"mutability":"mutable","name":"_identityRegistry","nameLocation":"5028:17:17","nodeType":"VariableDeclaration","scope":2368,"src":"5012:33:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"5012:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5011:35:17"},"src":"4984:63:17"},{"anonymous":false,"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"5053:253:17","text":"  this event is emitted when the Compliance has been set for the token\n  the event is emitted by the token constructor and by the setCompliance function\n  `_compliance` is the address of the Compliance contract of the token"},"eventSelector":"7f3a888862559648ec01d97deb7b5012bff86dc91e654a1de397170db40e35b6","id":2373,"name":"ComplianceAdded","nameLocation":"5317:15:17","nodeType":"EventDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"indexed":true,"mutability":"mutable","name":"_compliance","nameLocation":"5349:11:17","nodeType":"VariableDeclaration","scope":2373,"src":"5333:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5332:29:17"},"src":"5311:51:17"},{"anonymous":false,"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"5368:432:17","text":"  this event is emitted when an investor successfully recovers his tokens\n  the event is emitted by the recoveryAddress function\n  `_lostWallet` is the address of the wallet that the investor lost access to\n  `_newWallet` is the address of the wallet that the investor provided for the recovery\n  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery"},"eventSelector":"f0c9129a94f30f1caaceb63e44b9811d0a3edf1d6c23757f346093af5553fed0","id":2382,"name":"RecoverySuccess","nameLocation":"5811:15:17","nodeType":"EventDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"indexed":true,"mutability":"mutable","name":"_lostWallet","nameLocation":"5843:11:17","nodeType":"VariableDeclaration","scope":2382,"src":"5827:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2378,"indexed":true,"mutability":"mutable","name":"_newWallet","nameLocation":"5872:10:17","nodeType":"VariableDeclaration","scope":2382,"src":"5856:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"indexed":true,"mutability":"mutable","name":"_investorOnchainID","nameLocation":"5900:18:17","nodeType":"VariableDeclaration","scope":2382,"src":"5884:34:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"5884:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5826:93:17"},"src":"5805:115:17"},{"anonymous":false,"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"5926:595:17","text":"  this event is emitted when the wallet of an investor is frozen or unfrozen\n  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions\n  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n  `_isFrozen` is the freezing status of the wallet\n  if `_isFrozen` equals `true` the wallet is frozen after emission of the event\n  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event\n  `_owner` is the address of the agent who called the function to freeze the wallet"},"eventSelector":"7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436","id":2391,"name":"AddressFrozen","nameLocation":"6532:13:17","nodeType":"EventDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"indexed":true,"mutability":"mutable","name":"_userAddress","nameLocation":"6562:12:17","nodeType":"VariableDeclaration","scope":2391,"src":"6546:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"6546:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2387,"indexed":true,"mutability":"mutable","name":"_isFrozen","nameLocation":"6589:9:17","nodeType":"VariableDeclaration","scope":2391,"src":"6576:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2386,"name":"bool","nodeType":"ElementaryTypeName","src":"6576:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2389,"indexed":true,"mutability":"mutable","name":"_owner","nameLocation":"6616:6:17","nodeType":"VariableDeclaration","scope":2391,"src":"6600:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6545:78:17"},"src":"6526:98:17"},{"anonymous":false,"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"6630:338:17","text":"  this event is emitted when a certain amount of tokens is frozen on a wallet\n  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions\n  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n  `_amount` is the amount of tokens that are frozen"},"eventSelector":"a065e63c631c86f1b9f66a4a2f63f2093bf1c2168d23290259dbd969e0222a45","id":2398,"name":"TokensFrozen","nameLocation":"6979:12:17","nodeType":"EventDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"indexed":true,"mutability":"mutable","name":"_userAddress","nameLocation":"7008:12:17","nodeType":"VariableDeclaration","scope":2398,"src":"6992:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2396,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"7030:7:17","nodeType":"VariableDeclaration","scope":2398,"src":"7022:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"7022:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6991:47:17"},"src":"6973:66:17"},{"anonymous":false,"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"7045:346:17","text":"  this event is emitted when a certain amount of tokens is unfrozen on a wallet\n  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions\n  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n  `_amount` is the amount of tokens that are unfrozen"},"eventSelector":"9bed35cb62ad0dba04f9d5bfee4b5bc91443e77da8a65c4c84834c51bb08b0d6","id":2405,"name":"TokensUnfrozen","nameLocation":"7402:14:17","nodeType":"EventDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"indexed":true,"mutability":"mutable","name":"_userAddress","nameLocation":"7433:12:17","nodeType":"VariableDeclaration","scope":2405,"src":"7417:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"7417:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2403,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"7455:7:17","nodeType":"VariableDeclaration","scope":2405,"src":"7447:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"7447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7416:47:17"},"src":"7396:68:17"},{"anonymous":false,"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"7470:200:17","text":"  this event is emitted when the token is paused\n  the event is emitted by the pause function\n  `_userAddress` is the address of the wallet that called the pause function"},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2410,"name":"Paused","nameLocation":"7681:6:17","nodeType":"EventDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"indexed":false,"mutability":"mutable","name":"_userAddress","nameLocation":"7696:12:17","nodeType":"VariableDeclaration","scope":2410,"src":"7688:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"7688:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7687:22:17"},"src":"7675:35:17"},{"anonymous":false,"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"7716:206:17","text":"  this event is emitted when the token is unpaused\n  the event is emitted by the unpause function\n  `_userAddress` is the address of the wallet that called the unpause function"},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2415,"name":"Unpaused","nameLocation":"7933:8:17","nodeType":"EventDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"indexed":false,"mutability":"mutable","name":"_userAddress","nameLocation":"7950:12:17","nodeType":"VariableDeclaration","scope":2415,"src":"7942:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"7942:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7941:22:17"},"src":"7927:37:17"},{"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"7989:212:17","text":"  @dev sets the token name\n  @param _name the name of token to set\n  Only the owner of the token smart contract can call this function\n  emits a `UpdatedTokenInformation` event"},"functionSelector":"c47f0027","id":2421,"implemented":false,"kind":"function","modifiers":[],"name":"setName","nameLocation":"8215:7:17","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"_name","nameLocation":"8239:5:17","nodeType":"VariableDeclaration","scope":2421,"src":"8223:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2417,"name":"string","nodeType":"ElementaryTypeName","src":"8223:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8222:23:17"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"8254:0:17"},"scope":2657,"src":"8206:49:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"8261:215:17","text":"  @dev sets the token symbol\n  @param _symbol the token symbol to set\n  Only the owner of the token smart contract can call this function\n  emits a `UpdatedTokenInformation` event"},"functionSelector":"b84c8246","id":2427,"implemented":false,"kind":"function","modifiers":[],"name":"setSymbol","nameLocation":"8490:9:17","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"_symbol","nameLocation":"8516:7:17","nodeType":"VariableDeclaration","scope":2427,"src":"8500:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"8500:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8499:25:17"},"returnParameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"8533:0:17"},"scope":2657,"src":"8481:53:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"8540:242:17","text":"  @dev sets the onchain ID of the token\n  @param _onchainID the address of the onchain ID to set\n  Only the owner of the token smart contract can call this function\n  emits a `UpdatedTokenInformation` event"},"functionSelector":"3d1ddc5b","id":2433,"implemented":false,"kind":"function","modifiers":[],"name":"setOnchainID","nameLocation":"8796:12:17","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"_onchainID","nameLocation":"8817:10:17","nodeType":"VariableDeclaration","scope":2433,"src":"8809:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"8809:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8808:20:17"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[],"src":"8837:0:17"},"scope":2657,"src":"8787:51:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"8844:226:17","text":"  @dev pauses the token contract, when contract is paused investors cannot transfer tokens anymore\n  This function can only be called by a wallet set as agent of the token\n  emits a `Paused` event"},"functionSelector":"8456cb59","id":2437,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"9084:5:17","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"9089:2:17"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[],"src":"9100:0:17"},"scope":2657,"src":"9075:26:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"9107:324:17","text":"  @dev unpauses the token contract, when contract is unpaused investors can transfer tokens\n  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens\n  This function can only be called by a wallet set as agent of the token\n  emits an `Unpaused` event"},"functionSelector":"3f4ba83a","id":2441,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"9445:7:17","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[],"src":"9452:2:17"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[],"src":"9463:0:17"},"scope":2657,"src":"9436:28:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"9470:314:17","text":"  @dev sets an address frozen status for this token.\n  @param _userAddress The address for which to update frozen status\n  @param _freeze Frozen status of the address\n  This function can only be called by a wallet set as agent of the token\n  emits an `AddressFrozen` event"},"functionSelector":"c69c09cf","id":2449,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressFrozen","nameLocation":"9798:16:17","nodeType":"FunctionDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"_userAddress","nameLocation":"9823:12:17","nodeType":"VariableDeclaration","scope":2449,"src":"9815:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"9815:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"_freeze","nameLocation":"9842:7:17","nodeType":"VariableDeclaration","scope":2449,"src":"9837:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2445,"name":"bool","nodeType":"ElementaryTypeName","src":"9837:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9814:36:17"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[],"src":"9859:0:17"},"scope":2657,"src":"9789:71:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"9866:317:17","text":"  @dev freezes token amount specified for given address.\n  @param _userAddress The address for which to update frozen tokens\n  @param _amount Amount of Tokens to be frozen\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensFrozen` event"},"functionSelector":"125c4a33","id":2457,"implemented":false,"kind":"function","modifiers":[],"name":"freezePartialTokens","nameLocation":"10197:19:17","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"_userAddress","nameLocation":"10225:12:17","nodeType":"VariableDeclaration","scope":2457,"src":"10217:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"10217:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"_amount","nameLocation":"10247:7:17","nodeType":"VariableDeclaration","scope":2457,"src":"10239:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"10239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10216:39:17"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[],"src":"10264:0:17"},"scope":2657,"src":"10188:77:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"10271:322:17","text":"  @dev unfreezes token amount specified for given address\n  @param _userAddress The address for which to update frozen tokens\n  @param _amount Amount of Tokens to be unfrozen\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event"},"functionSelector":"1fe56f7d","id":2465,"implemented":false,"kind":"function","modifiers":[],"name":"unfreezePartialTokens","nameLocation":"10607:21:17","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"_userAddress","nameLocation":"10637:12:17","nodeType":"VariableDeclaration","scope":2465,"src":"10629:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"10629:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"_amount","nameLocation":"10659:7:17","nodeType":"VariableDeclaration","scope":2465,"src":"10651:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"10651:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10628:39:17"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[],"src":"10676:0:17"},"scope":2657,"src":"10598:79:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"10683:263:17","text":"  @dev sets the Identity Registry for the token\n  @param _identityRegistry the address of the Identity Registry to set\n  Only the owner of the token smart contract can call this function\n  emits an `IdentityRegistryAdded` event"},"functionSelector":"cbf3f861","id":2471,"implemented":false,"kind":"function","modifiers":[],"name":"setIdentityRegistry","nameLocation":"10960:19:17","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"_identityRegistry","nameLocation":"10988:17:17","nodeType":"VariableDeclaration","scope":2471,"src":"10980:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"10980:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10979:27:17"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[],"src":"11015:0:17"},"scope":2657,"src":"10951:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"11022:304:17","text":"  @dev sets the compliance contract of the token\n  @param _compliance the address of the compliance contract to set\n  Only the owner of the token smart contract can call this function\n  calls bindToken on the compliance contract\n  emits a `ComplianceAdded` event"},"functionSelector":"f8981789","id":2477,"implemented":false,"kind":"function","modifiers":[],"name":"setCompliance","nameLocation":"11340:13:17","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"_compliance","nameLocation":"11362:11:17","nodeType":"VariableDeclaration","scope":2477,"src":"11354:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2473,"name":"address","nodeType":"ElementaryTypeName","src":"11354:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11353:21:17"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"11383:0:17"},"scope":2657,"src":"11331:53:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"11390:940:17","text":"  @dev force a transfer of tokens between 2 whitelisted wallets\n  In case the `from` address has not enough free tokens (unfrozen tokens)\n  but has a total balance higher or equal to the `amount`\n  the amount of frozen tokens is reduced in order to have enough free tokens\n  to proceed the transfer, in such a case, the remaining balance on the `from`\n  account is 100% composed of frozen tokens post-transfer.\n  Require that the `to` address is a verified address,\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The number of tokens to transfer\n  @return `true` if successful and revert if unsuccessful\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`\n  emits a `Transfer` event"},"functionSelector":"9fc1d0e7","id":2489,"implemented":false,"kind":"function","modifiers":[],"name":"forcedTransfer","nameLocation":"12344:14:17","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"_from","nameLocation":"12376:5:17","nodeType":"VariableDeclaration","scope":2489,"src":"12368:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"12368:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"_to","nameLocation":"12399:3:17","nodeType":"VariableDeclaration","scope":2489,"src":"12391:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"12391:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2484,"mutability":"mutable","name":"_amount","nameLocation":"12420:7:17","nodeType":"VariableDeclaration","scope":2489,"src":"12412:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"12412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12358:75:17"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2489,"src":"12452:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2486,"name":"bool","nodeType":"ElementaryTypeName","src":"12452:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12451:6:17"},"scope":2657,"src":"12335:123:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"12464:411:17","text":"  @dev mint tokens on a wallet\n  Improved version of default mint method. Tokens can be minted\n  to an address if only it is a verified address as per the security token.\n  @param _to Address to mint the tokens to.\n  @param _amount Amount of tokens to mint.\n  This function can only be called by a wallet set as agent of the token\n  emits a `Transfer` event"},"functionSelector":"40c10f19","id":2497,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"12889:4:17","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"_to","nameLocation":"12902:3:17","nodeType":"VariableDeclaration","scope":2497,"src":"12894:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"12894:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"_amount","nameLocation":"12915:7:17","nodeType":"VariableDeclaration","scope":2497,"src":"12907:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"12907:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12893:30:17"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"12932:0:17"},"scope":2657,"src":"12880:53:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"12939:752:17","text":"  @dev burn tokens on a wallet\n  In case the `account` address has not enough free tokens (unfrozen tokens)\n  but has a total balance higher or equal to the `value` amount\n  the amount of frozen tokens is reduced in order to have enough free tokens\n  to proceed the burn, in such a case, the remaining balance on the `account`\n  is 100% composed of frozen tokens post-transaction.\n  @param _userAddress Address to burn the tokens from.\n  @param _amount Amount of tokens to burn.\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`\n  emits a `Transfer` event"},"functionSelector":"9dc29fac","id":2505,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"13705:4:17","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"_userAddress","nameLocation":"13718:12:17","nodeType":"VariableDeclaration","scope":2505,"src":"13710:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"13710:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"_amount","nameLocation":"13740:7:17","nodeType":"VariableDeclaration","scope":2505,"src":"13732:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"13732:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13709:39:17"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"13757:0:17"},"scope":2657,"src":"13696:62:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"13764:793:17","text":"  @dev recovery function used to force transfer tokens from a\n  lost wallet to a new wallet for an investor.\n  @param _lostWallet the wallet that the investor lost\n  @param _newWallet the newly provided wallet on which tokens have to be transferred\n  @param _investorOnchainID the onchainID of the investor asking for a recovery\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful\n  emits a `Transfer` event if the recovery process is successful\n  emits a `RecoverySuccess` event if the recovery process is successful\n  emits a `RecoveryFails` event if the recovery process fails"},"functionSelector":"9285948a","id":2517,"implemented":false,"kind":"function","modifiers":[],"name":"recoveryAddress","nameLocation":"14571:15:17","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"_lostWallet","nameLocation":"14604:11:17","nodeType":"VariableDeclaration","scope":2517,"src":"14596:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"14596:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"_newWallet","nameLocation":"14633:10:17","nodeType":"VariableDeclaration","scope":2517,"src":"14625:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"14625:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"_investorOnchainID","nameLocation":"14661:18:17","nodeType":"VariableDeclaration","scope":2517,"src":"14653:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"14653:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14586:99:17"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"14704:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2514,"name":"bool","nodeType":"ElementaryTypeName","src":"14704:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14703:6:17"},"scope":2657,"src":"14562:148:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"14716:645:17","text":"  @dev function allowing to issue transfers in batch\n  Require that the msg.sender and `to` addresses are not frozen.\n  Require that the total value should not exceed available balance.\n  Require that the `to` addresses are all verified addresses,\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _toList The addresses of the receivers\n  @param _amounts The number of tokens to transfer to the corresponding receiver\n  emits _toList.length `Transfer` events"},"functionSelector":"88d695b2","id":2527,"implemented":false,"kind":"function","modifiers":[],"name":"batchTransfer","nameLocation":"15375:13:17","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"_toList","nameLocation":"15408:7:17","nodeType":"VariableDeclaration","scope":2527,"src":"15389:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"15389:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2520,"nodeType":"ArrayTypeName","src":"15389:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"_amounts","nameLocation":"15436:8:17","nodeType":"VariableDeclaration","scope":2527,"src":"15417:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"15417:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"nodeType":"ArrayTypeName","src":"15417:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15388:57:17"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"15454:0:17"},"scope":2657,"src":"15366:89:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"15461:843:17","text":"  @dev function allowing to issue forced transfers in batch\n  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.\n  Require that the `_toList` addresses are all verified addresses\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _fromList The addresses of the senders\n  @param _toList The addresses of the receivers\n  @param _amounts The number of tokens to transfer to the corresponding receiver\n  This function can only be called by a wallet set as agent of the token\n  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`\n  emits _fromList.length `Transfer` events"},"functionSelector":"42a47abc","id":2540,"implemented":false,"kind":"function","modifiers":[],"name":"batchForcedTransfer","nameLocation":"16318:19:17","nodeType":"FunctionDefinition","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"_fromList","nameLocation":"16366:9:17","nodeType":"VariableDeclaration","scope":2540,"src":"16347:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"16347:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2530,"nodeType":"ArrayTypeName","src":"16347:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"_toList","nameLocation":"16404:7:17","nodeType":"VariableDeclaration","scope":2540,"src":"16385:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2532,"name":"address","nodeType":"ElementaryTypeName","src":"16385:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2533,"nodeType":"ArrayTypeName","src":"16385:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2537,"mutability":"mutable","name":"_amounts","nameLocation":"16440:8:17","nodeType":"VariableDeclaration","scope":2540,"src":"16421:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"16421:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ArrayTypeName","src":"16421:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16337:117:17"},"returnParameters":{"id":2539,"nodeType":"ParameterList","parameters":[],"src":"16463:0:17"},"scope":2657,"src":"16309:155:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"16470:575:17","text":"  @dev function allowing to mint tokens in batch\n  Require that the `_toList` addresses are all verified addresses\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _toList The addresses of the receivers\n  @param _amounts The number of tokens to mint to the corresponding receiver\n  This function can only be called by a wallet set as agent of the token\n  emits _toList.length `Transfer` events"},"functionSelector":"68573107","id":2550,"implemented":false,"kind":"function","modifiers":[],"name":"batchMint","nameLocation":"17059:9:17","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"_toList","nameLocation":"17088:7:17","nodeType":"VariableDeclaration","scope":2550,"src":"17069:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"17069:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2543,"nodeType":"ArrayTypeName","src":"17069:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"_amounts","nameLocation":"17116:8:17","nodeType":"VariableDeclaration","scope":2550,"src":"17097:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"17097:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ArrayTypeName","src":"17097:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17068:57:17"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"17134:0:17"},"scope":2657,"src":"17050:85:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"17141:624:17","text":"  @dev function allowing to burn tokens in batch\n  Require that the `_userAddresses` addresses are all verified addresses\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses of the wallets concerned by the burn\n  @param _amounts The number of tokens to burn from the corresponding wallets\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `Transfer` events"},"functionSelector":"4a6cc677","id":2560,"implemented":false,"kind":"function","modifiers":[],"name":"batchBurn","nameLocation":"17779:9:17","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"_userAddresses","nameLocation":"17808:14:17","nodeType":"VariableDeclaration","scope":2560,"src":"17789:33:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"17789:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2553,"nodeType":"ArrayTypeName","src":"17789:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"_amounts","nameLocation":"17843:8:17","nodeType":"VariableDeclaration","scope":2560,"src":"17824:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"17824:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ArrayTypeName","src":"17824:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17788:64:17"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"17861:0:17"},"scope":2657,"src":"17770:92:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"17868:538:17","text":"  @dev function allowing to set frozen addresses in batch\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses for which to update frozen status\n  @param _freeze Frozen status of the corresponding address\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `AddressFrozen` events"},"functionSelector":"1a7af379","id":2570,"implemented":false,"kind":"function","modifiers":[],"name":"batchSetAddressFrozen","nameLocation":"18420:21:17","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"_userAddresses","nameLocation":"18461:14:17","nodeType":"VariableDeclaration","scope":2570,"src":"18442:33:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"18442:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2563,"nodeType":"ArrayTypeName","src":"18442:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"_freeze","nameLocation":"18493:7:17","nodeType":"VariableDeclaration","scope":2570,"src":"18477:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2565,"name":"bool","nodeType":"ElementaryTypeName","src":"18477:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"nodeType":"ArrayTypeName","src":"18477:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"18441:60:17"},"returnParameters":{"id":2569,"nodeType":"ParameterList","parameters":[],"src":"18510:0:17"},"scope":2657,"src":"18411:100:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"18517:558:17","text":"  @dev function allowing to freeze tokens partially in batch\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses on which tokens need to be frozen\n  @param _amounts the amount of tokens to freeze on the corresponding address\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `TokensFrozen` events"},"functionSelector":"fc7e5fa8","id":2580,"implemented":false,"kind":"function","modifiers":[],"name":"batchFreezePartialTokens","nameLocation":"19089:24:17","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"_userAddresses","nameLocation":"19133:14:17","nodeType":"VariableDeclaration","scope":2580,"src":"19114:33:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"19114:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2573,"nodeType":"ArrayTypeName","src":"19114:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"_amounts","nameLocation":"19168:8:17","nodeType":"VariableDeclaration","scope":2580,"src":"19149:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"19149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2576,"nodeType":"ArrayTypeName","src":"19149:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19113:64:17"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[],"src":"19186:0:17"},"scope":2657,"src":"19080:107:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"19193:566:17","text":"  @dev function allowing to unfreeze tokens partially in batch\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses on which tokens need to be unfrozen\n  @param _amounts the amount of tokens to unfreeze on the corresponding address\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `TokensUnfrozen` events"},"functionSelector":"4710362d","id":2590,"implemented":false,"kind":"function","modifiers":[],"name":"batchUnfreezePartialTokens","nameLocation":"19773:26:17","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"_userAddresses","nameLocation":"19819:14:17","nodeType":"VariableDeclaration","scope":2590,"src":"19800:33:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"19800:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2583,"nodeType":"ArrayTypeName","src":"19800:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"_amounts","nameLocation":"19854:8:17","nodeType":"VariableDeclaration","scope":2590,"src":"19835:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"19835:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2586,"nodeType":"ArrayTypeName","src":"19835:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19799:64:17"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[],"src":"19872:0:17"},"scope":2657,"src":"19764:109:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"19879:523:17","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 1 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n balanceOf() and transfer()."},"functionSelector":"313ce567","id":2596,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"20416:8:17","nodeType":"FunctionDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"20424:2:17"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2596,"src":"20450:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2593,"name":"uint8","nodeType":"ElementaryTypeName","src":"20450:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"20449:7:17"},"scope":2657,"src":"20407:50:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"20463:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2602,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"20531:4:17","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[],"src":"20535:2:17"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"20561:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"20561:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20560:15:17"},"scope":2657,"src":"20522:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"20582:216:17","text":" @dev Returns the address of the onchainID of the token.\n the onchainID of the token gives all the information available\n about the token and is managed by the token issuer or his agent."},"functionSelector":"aba63705","id":2608,"implemented":false,"kind":"function","modifiers":[],"name":"onchainID","nameLocation":"20812:9:17","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[],"src":"20821:2:17"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"20847:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"20847:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20846:9:17"},"scope":2657,"src":"20803:53:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"20862:102:17","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2614,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"20978:6:17","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"20984:2:17"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"21010:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2611,"name":"string","nodeType":"ElementaryTypeName","src":"21010:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21009:15:17"},"scope":2657,"src":"20969:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"21031:94:17","text":" @dev Returns the TREX version of the token.\n current version is 3.0.0"},"functionSelector":"54fd4d50","id":2620,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"21139:7:17","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"21146:2:17"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2620,"src":"21172:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"21172:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21171:15:17"},"scope":2657,"src":"21130:57:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"21193:74:17","text":"  @dev Returns the Identity Registry linked to the token"},"functionSelector":"134e18f4","id":2627,"implemented":false,"kind":"function","modifiers":[],"name":"identityRegistry","nameLocation":"21281:16:17","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[],"src":"21297:2:17"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"21323:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentityRegistry_$2125","typeString":"contract IIdentityRegistry"},"typeName":{"id":2624,"nodeType":"UserDefinedTypeName","pathNode":{"id":2623,"name":"IIdentityRegistry","nameLocations":["21323:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"21323:17:17"},"referencedDeclaration":2125,"src":"21323:17:17","typeDescriptions":{"typeIdentifier":"t_contract$_IIdentityRegistry_$2125","typeString":"contract IIdentityRegistry"}},"visibility":"internal"}],"src":"21322:19:17"},"scope":2657,"src":"21272:70:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"21348:76:17","text":"  @dev Returns the Compliance contract linked to the token"},"functionSelector":"6290865d","id":2634,"implemented":false,"kind":"function","modifiers":[],"name":"compliance","nameLocation":"21438:10:17","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"21448:2:17"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"21474:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IModularCompliance_$1195","typeString":"contract IModularCompliance"},"typeName":{"id":2631,"nodeType":"UserDefinedTypeName","pathNode":{"id":2630,"name":"IModularCompliance","nameLocations":["21474:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":1195,"src":"21474:18:17"},"referencedDeclaration":1195,"src":"21474:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IModularCompliance_$1195","typeString":"contract IModularCompliance"}},"visibility":"internal"}],"src":"21473:20:17"},"scope":2657,"src":"21429:65:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"21500:84:17","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2640,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nameLocation":"21598:6:17","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[],"src":"21604:2:17"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"21630:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2637,"name":"bool","nodeType":"ElementaryTypeName","src":"21630:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21629:6:17"},"scope":2657,"src":"21589:47:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"21642:433:17","text":"  @dev Returns the freezing status of a wallet\n  if isFrozen returns `true` the wallet is frozen\n  if isFrozen returns `false` the wallet is not frozen\n  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by\n  a partial freeze or the whole token could be blocked by pause\n  @param _userAddress the address of the wallet on which isFrozen is called"},"functionSelector":"e5839836","id":2648,"implemented":false,"kind":"function","modifiers":[],"name":"isFrozen","nameLocation":"22089:8:17","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"_userAddress","nameLocation":"22106:12:17","nodeType":"VariableDeclaration","scope":2648,"src":"22098:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"22098:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22097:22:17"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"22143:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2645,"name":"bool","nodeType":"ElementaryTypeName","src":"22143:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22142:6:17"},"scope":2657,"src":"22080:69:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"22155:264:17","text":"  @dev Returns the amount of tokens that are partially frozen on a wallet\n  the amount of frozen tokens is always <= to the total balance of the wallet\n  @param _userAddress the address of the wallet on which getFrozenTokens is called"},"functionSelector":"158b1a57","id":2656,"implemented":false,"kind":"function","modifiers":[],"name":"getFrozenTokens","nameLocation":"22433:15:17","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"_userAddress","nameLocation":"22457:12:17","nodeType":"VariableDeclaration","scope":2656,"src":"22449:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"22449:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22448:22:17"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"22494:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"22494:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22493:9:17"},"scope":2657,"src":"22424:79:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2658,"src":"4029:18476:17","usedErrors":[]}],"src":"3818:18688:17"},"id":17},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3330],"ContextUpgradeable":[3000],"Initializable":[2958],"OwnableUpgradeable":[2789]},"id":2790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2659,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:18"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2790,"sourceUnit":3001,"src":"127:41:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2790,"sourceUnit":2959,"src":"169:42:18","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2663,"name":"Initializable","nameLocations":["748:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"748:13:18"},"id":2664,"nodeType":"InheritanceSpecifier","src":"748:13:18"},{"baseName":{"id":2665,"name":"ContextUpgradeable","nameLocations":["763:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":3000,"src":"763:18:18"},"id":2666,"nodeType":"InheritanceSpecifier","src":"763:18:18"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"213:494:18","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2789,"linearizedBaseContracts":[2789,3000,2958],"name":"OwnableUpgradeable","nameLocation":"726:18:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2668,"mutability":"mutable","name":"_owner","nameLocation":"804:6:18","nodeType":"VariableDeclaration","scope":2789,"src":"788:22:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2674,"name":"OwnershipTransferred","nameLocation":"823:20:18","nodeType":"EventDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:18","nodeType":"VariableDeclaration","scope":2674,"src":"844:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:18","nodeType":"VariableDeclaration","scope":2674,"src":"875:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:18"},"src":"817:84:18"},{"body":{"id":2683,"nodeType":"Block","src":"1055:43:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2680,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"1065:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"ExpressionStatement","src":"1065:26:18"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"907:91:18","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2684,"implemented":true,"kind":"function","modifiers":[{"id":2678,"kind":"modifierInvocation","modifierName":{"id":2677,"name":"onlyInitializing","nameLocations":["1038:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":2903,"src":"1038:16:18"},"nodeType":"ModifierInvocation","src":"1038:16:18"}],"name":"__Ownable_init","nameLocation":"1012:14:18","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"1026:2:18"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"1055:0:18"},"scope":2789,"src":"1003:95:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2694,"nodeType":"Block","src":"1166:49:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2690,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"1195:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2689,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1176:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"1176:32:18"}]},"id":2695,"implemented":true,"kind":"function","modifiers":[{"id":2687,"kind":"modifierInvocation","modifierName":{"id":2686,"name":"onlyInitializing","nameLocations":["1149:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":2903,"src":"1149:16:18"},"nodeType":"ModifierInvocation","src":"1149:16:18"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:18","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[],"src":"1137:2:18"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[],"src":"1166:0:18"},"scope":2789,"src":"1104:111:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2702,"nodeType":"Block","src":"1324:41:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2698,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"1334:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"ExpressionStatement","src":"1334:13:18"},{"id":2701,"nodeType":"PlaceholderStatement","src":"1357:1:18"}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"1221:77:18","text":" @dev Throws if called by any account other than the owner."},"id":2703,"name":"onlyOwner","nameLocation":"1312:9:18","nodeType":"ModifierDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[],"src":"1321:2:18"},"src":"1303:62:18","virtual":false,"visibility":"internal"},{"body":{"id":2711,"nodeType":"Block","src":"1496:30:18","statements":[{"expression":{"id":2709,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"1513:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2708,"id":2710,"nodeType":"Return","src":"1506:13:18"}]},"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"1371:65:18","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2712,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:18","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[],"src":"1455:2:18"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2712,"src":"1487:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:18"},"scope":2789,"src":"1441:85:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2725,"nodeType":"Block","src":"1644:85:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"1662:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2719,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"1673:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"1654:68:18"}]},"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"1532:62:18","text":" @dev Throws if the sender is not the owner."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:18","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"1619:2:18"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[],"src":"1644:0:18"},"scope":2789,"src":"1599:130:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"2118:47:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:18","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2732,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2128:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2738,"nodeType":"ExpressionStatement","src":"2128:30:18"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"1735:324:18","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2740,"implemented":true,"kind":"function","modifiers":[{"id":2730,"kind":"modifierInvocation","modifierName":{"id":2729,"name":"onlyOwner","nameLocations":["2108:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2703,"src":"2108:9:18"},"nodeType":"ModifierInvocation","src":"2108:9:18"}],"name":"renounceOwnership","nameLocation":"2073:17:18","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[],"src":"2090:2:18"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[],"src":"2118:0:18"},"scope":2789,"src":"2064:101:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2762,"nodeType":"Block","src":"2384:128:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"2402:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:18","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"2394:73:18"},{"expression":{"arguments":[{"id":2759,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"2496:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2758,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2477:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2761,"nodeType":"ExpressionStatement","src":"2477:28:18"}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"2171:138:18","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2763,"implemented":true,"kind":"function","modifiers":[{"id":2746,"kind":"modifierInvocation","modifierName":{"id":2745,"name":"onlyOwner","nameLocations":["2374:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2703,"src":"2374:9:18"},"nodeType":"ModifierInvocation","src":"2374:9:18"}],"name":"transferOwnership","nameLocation":"2323:17:18","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:18","nodeType":"VariableDeclaration","scope":2763,"src":"2341:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:18"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[],"src":"2384:0:18"},"scope":2789,"src":"2314:198:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2782,"nodeType":"Block","src":"2729:124:18","statements":[{"assignments":[2770],"declarations":[{"constant":false,"id":2770,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:18","nodeType":"VariableDeclaration","scope":2782,"src":"2739:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2772,"initialValue":{"id":2771,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"2758:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:18"},{"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2773,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"2774:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2774,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2783:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2776,"nodeType":"ExpressionStatement","src":"2774:17:18"},{"eventCall":{"arguments":[{"id":2778,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"2827:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2779,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2837:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2777,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2806:20:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2781,"nodeType":"EmitStatement","src":"2801:45:18"}]},"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"2518:143:18","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:18","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:18","nodeType":"VariableDeclaration","scope":2783,"src":"2694:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:18"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[],"src":"2729:0:18"},"scope":2789,"src":"2666:187:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"2859:254:18","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2788,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:18","nodeType":"VariableDeclaration","scope":2789,"src":"3118:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"length":{"hexValue":"3439","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":2790,"src":"708:2438:18","usedErrors":[]}],"src":"102:3045:18"},"id":18},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[3330],"Initializable":[2958]},"id":2959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2791,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:19"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2959,"sourceUnit":3331,"src":"138:44:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"184:2209:19","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":2958,"linearizedBaseContracts":[2958],"name":"Initializable","nameLocation":"2412:13:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"2432:109:19","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":2796,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:19","nodeType":"VariableDeclaration","scope":2958,"src":"2546:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2795,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"2579:91:19","text":" @dev Indicates that the contract is in the process of being initialized."},"id":2799,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:19","nodeType":"VariableDeclaration","scope":2958,"src":"2675:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2798,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"2708:90:19","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":2804,"name":"Initialized","nameLocation":"2809:11:19","nodeType":"EventDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:19","nodeType":"VariableDeclaration","scope":2804,"src":"2821:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2801,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:19"},"src":"2803:33:19"},{"body":{"id":2859,"nodeType":"Block","src":"3269:483:19","statements":[{"assignments":[2808],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:19","nodeType":"VariableDeclaration","scope":2859,"src":"3279:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2807,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2811,"initialValue":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:19","subExpression":{"id":2809,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3302:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3347:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3365:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:19","subExpression":{"arguments":[{"arguments":[{"id":2823,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$2958","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$2958","typeString":"contract Initializable"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:19","typeDescriptions":{}}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2819,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"3388:18:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3330_$","typeString":"type(library AddressUpgradeable)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:19","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"3388:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2827,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3436:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":2812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"ExpressionStatement","src":"3325:201:19"},{"expression":{"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2836,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3536:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2839,"nodeType":"ExpressionStatement","src":"3536:16:19"},{"condition":{"id":2840,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3566:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2846,"nodeType":"IfStatement","src":"3562:65:19","trueBody":{"id":2845,"nodeType":"Block","src":"3582:45:19","statements":[{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3596:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2844,"nodeType":"ExpressionStatement","src":"3596:20:19"}]}},{"id":2847,"nodeType":"PlaceholderStatement","src":"3636:1:19"},{"condition":{"id":2848,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3651:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2858,"nodeType":"IfStatement","src":"3647:99:19","trueBody":{"id":2857,"nodeType":"Block","src":"3667:79:19","statements":[{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2849,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3681:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2852,"nodeType":"ExpressionStatement","src":"3681:21:19"},{"eventCall":{"arguments":[{"hexValue":"31","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2853,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"3721:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"EmitStatement","src":"3716:19:19"}]}}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"2842:399:19","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":2860,"name":"initializer","nameLocation":"3255:11:19","nodeType":"ModifierDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[],"src":"3266:2:19"},"src":"3246:506:19","virtual":false,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"4863:255:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:19","subExpression":{"id":2866,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"4882:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"4899:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2869,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"4914:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":2865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"ExpressionStatement","src":"4873:99:19"},{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"4982:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2876,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"4997:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2878,"nodeType":"ExpressionStatement","src":"4982:22:19"},{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2879,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"5014:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2882,"nodeType":"ExpressionStatement","src":"5014:20:19"},{"id":2883,"nodeType":"PlaceholderStatement","src":"5044:1:19"},{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"5055:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2887,"nodeType":"ExpressionStatement","src":"5055:21:19"},{"eventCall":{"arguments":[{"id":2889,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"5103:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2888,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"5091:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2891,"nodeType":"EmitStatement","src":"5086:25:19"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"3758:1062:19","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":2893,"name":"reinitializer","nameLocation":"4834:13:19","nodeType":"ModifierDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"version","nameLocation":"4854:7:19","nodeType":"VariableDeclaration","scope":2893,"src":"4848:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2862,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:19"},"src":"4825:293:19","virtual":false,"visibility":"internal"},{"body":{"id":2902,"nodeType":"Block","src":"5356:97:19","statements":[{"expression":{"arguments":[{"id":2897,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"5374:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":2896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2900,"nodeType":"ExpressionStatement","src":"5366:69:19"},{"id":2901,"nodeType":"PlaceholderStatement","src":"5445:1:19"}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"5124:199:19","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":2903,"name":"onlyInitializing","nameLocation":"5337:16:19","nodeType":"ModifierDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[],"src":"5353:2:19"},"src":"5328:125:19","virtual":false,"visibility":"internal"},{"body":{"id":2938,"nodeType":"Block","src":"5988:231:19","statements":[{"expression":{"arguments":[{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:19","subExpression":{"id":2908,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6007:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":2907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2912,"nodeType":"ExpressionStatement","src":"5998:66:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6078:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2915,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2914,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:19","memberName":"max","nodeType":"MemberAccess","src":"6094:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2937,"nodeType":"IfStatement","src":"6074:139:19","trueBody":{"id":2936,"nodeType":"Block","src":"6111:102:19","statements":[{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2920,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6125:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2922,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2921,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:19","memberName":"max","nodeType":"MemberAccess","src":"6140:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2927,"nodeType":"ExpressionStatement","src":"6125:30:19"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2930,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2929,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:19","memberName":"max","nodeType":"MemberAccess","src":"6186:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2928,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"6174:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2935,"nodeType":"EmitStatement","src":"6169:33:19"}]}}]},"documentation":{"id":2904,"nodeType":"StructuredDocumentation","src":"5459:475:19","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:19","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[],"src":"5968:2:19"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[],"src":"5988:0:19"},"scope":2958,"src":"5939:280:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2947,"nodeType":"Block","src":"6393:36:19","statements":[{"expression":{"id":2945,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6410:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2944,"id":2946,"nodeType":"Return","src":"6403:19:19"}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"6225:99:19","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":2948,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:19","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[],"src":"6360:2:19"},"returnParameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2948,"src":"6386:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2942,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:19"},"scope":2958,"src":"6329:100:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2956,"nodeType":"Block","src":"6601:37:19","statements":[{"expression":{"id":2954,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6618:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2953,"id":2955,"nodeType":"Return","src":"6611:20:19"}]},"documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"6435:105:19","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":2957,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:19","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[],"src":"6569:2:19"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2957,"src":"6595:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2951,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:19"},"scope":2958,"src":"6545:93:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2959,"src":"2394:4246:19","usedErrors":[]}],"src":"113:6528:19"},"id":19},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3330]},"id":3331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3002,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"126:67:20","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3330,"linearizedBaseContracts":[3330],"name":"AddressUpgradeable","nameLocation":"202:18:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3017,"nodeType":"Block","src":"1489:254:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3011,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"1713:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:20","memberName":"code","nodeType":"MemberAccess","src":"1713:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:20","memberName":"length","nodeType":"MemberAccess","src":"1713:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3010,"id":3016,"nodeType":"Return","src":"1706:30:20"}]},"documentation":{"id":3004,"nodeType":"StructuredDocumentation","src":"227:1191:20","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:20","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"account","nameLocation":"1451:7:20","nodeType":"VariableDeclaration","scope":3018,"src":"1443:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3005,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:20"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"1483:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3008,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:20"},"scope":3330,"src":"1423:320:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3051,"nodeType":"Block","src":"2729:241:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3029,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3330","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3330","typeString":"library AddressUpgradeable"}],"id":3028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3027,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:20","typeDescriptions":{}}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:20","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2772:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3036,"nodeType":"ExpressionStatement","src":"2739:73:20"},{"assignments":[3038,null],"declarations":[{"constant":false,"id":3038,"mutability":"mutable","name":"success","nameLocation":"2829:7:20","nodeType":"VariableDeclaration","scope":3051,"src":"2824:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3037,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3045,"initialValue":{"arguments":[{"hexValue":"","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3039,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"2842:9:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:20","memberName":"call","nodeType":"MemberAccess","src":"2842:14:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2864:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:20"},{"expression":{"arguments":[{"id":3047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"2893:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"ExpressionStatement","src":"2885:78:20"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"1749:904:20","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3052,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:20","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:20","nodeType":"VariableDeclaration","scope":3052,"src":"2677:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"amount","nameLocation":"2712:6:20","nodeType":"VariableDeclaration","scope":3052,"src":"2704:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:20"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[],"src":"2729:0:20"},"scope":3330,"src":"2658:312:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"3801:96:20","statements":[{"expression":{"arguments":[{"id":3063,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3840:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3064,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"3848:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3062,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3110,3154],"referencedDeclaration":3154,"src":"3818:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3061,"id":3068,"nodeType":"Return","src":"3811:79:20"}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"2976:731:20","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:20","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"target","nameLocation":"3742:6:20","nodeType":"VariableDeclaration","scope":3070,"src":"3734:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"data","nameLocation":"3763:4:20","nodeType":"VariableDeclaration","scope":3070,"src":"3750:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3056,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:20"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"3787:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3059,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:20"},"scope":3330,"src":"3712:185:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3089,"nodeType":"Block","src":"4266:76:20","statements":[{"expression":{"arguments":[{"id":3083,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"4305:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3084,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"4313:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3086,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4322:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3082,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3110,3154],"referencedDeclaration":3154,"src":"4283:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3081,"id":3088,"nodeType":"Return","src":"4276:59:20"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"3903:211:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3090,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:20","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"target","nameLocation":"4158:6:20","nodeType":"VariableDeclaration","scope":3090,"src":"4150:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"data","nameLocation":"4187:4:20","nodeType":"VariableDeclaration","scope":3090,"src":"4174:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3074,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:20","nodeType":"VariableDeclaration","scope":3090,"src":"4201:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3076,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:20"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3090,"src":"4252:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3079,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:20"},"scope":3330,"src":"4119:223:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3109,"nodeType":"Block","src":"4817:111:20","statements":[{"expression":{"arguments":[{"id":3103,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"4856:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3104,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4864:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"4870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3102,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3110,3154],"referencedDeclaration":3154,"src":"4834:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3101,"id":3108,"nodeType":"Return","src":"4827:94:20"}]},"documentation":{"id":3091,"nodeType":"StructuredDocumentation","src":"4348:351:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:20","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"target","nameLocation":"4743:6:20","nodeType":"VariableDeclaration","scope":3110,"src":"4735:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"data","nameLocation":"4764:4:20","nodeType":"VariableDeclaration","scope":3110,"src":"4751:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3094,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"value","nameLocation":"4778:5:20","nodeType":"VariableDeclaration","scope":3110,"src":"4770:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:20"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"4803:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3099,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:20"},"scope":3330,"src":"4704:224:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"5355:267:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3127,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3330","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3330","typeString":"library AddressUpgradeable"}],"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:20","typeDescriptions":{}}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:20","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"5398:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3134,"nodeType":"ExpressionStatement","src":"5365:81:20"},{"assignments":[3136,3138],"declarations":[{"constant":false,"id":3136,"mutability":"mutable","name":"success","nameLocation":"5462:7:20","nodeType":"VariableDeclaration","scope":3153,"src":"5457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3135,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:20","nodeType":"VariableDeclaration","scope":3153,"src":"5471:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3145,"initialValue":{"arguments":[{"id":3143,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"5524:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3139,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"5498:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:20","memberName":"call","nodeType":"MemberAccess","src":"5498:11:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"5517:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:20"},{"expression":{"arguments":[{"id":3147,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"5573:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3148,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"5581:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3149,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"5590:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3150,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"5602:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3146,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5546:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3123,"id":3152,"nodeType":"Return","src":"5539:76:20"}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"4934:237:20","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:20","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"target","nameLocation":"5224:6:20","nodeType":"VariableDeclaration","scope":3154,"src":"5216:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3112,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"data","nameLocation":"5253:4:20","nodeType":"VariableDeclaration","scope":3154,"src":"5240:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"value","nameLocation":"5275:5:20","nodeType":"VariableDeclaration","scope":3154,"src":"5267:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:20","nodeType":"VariableDeclaration","scope":3154,"src":"5290:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3118,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:20"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3154,"src":"5341:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3121,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:20"},"scope":3330,"src":"5176:446:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"5899:97:20","statements":[{"expression":{"arguments":[{"id":3165,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"5935:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"5943:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3164,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3171,3200],"referencedDeclaration":3200,"src":"5916:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3163,"id":3169,"nodeType":"Return","src":"5909:80:20"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"5628:166:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:20","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"target","nameLocation":"5835:6:20","nodeType":"VariableDeclaration","scope":3171,"src":"5827:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"data","nameLocation":"5856:4:20","nodeType":"VariableDeclaration","scope":3171,"src":"5843:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:20"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"5885:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3161,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:20"},"scope":3330,"src":"5799:197:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3199,"nodeType":"Block","src":"6338:168:20","statements":[{"assignments":[3184,3186],"declarations":[{"constant":false,"id":3184,"mutability":"mutable","name":"success","nameLocation":"6354:7:20","nodeType":"VariableDeclaration","scope":3199,"src":"6349:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3183,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:20","nodeType":"VariableDeclaration","scope":3199,"src":"6363:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3185,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3191,"initialValue":{"arguments":[{"id":3189,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"6408:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3187,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"6390:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:20","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:20","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:20"},{"expression":{"arguments":[{"id":3193,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"6457:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3194,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"6465:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3195,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6474:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3196,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"6486:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3192,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"6430:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3182,"id":3198,"nodeType":"Return","src":"6423:76:20"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"6002:173:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:20","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"target","nameLocation":"6225:6:20","nodeType":"VariableDeclaration","scope":3200,"src":"6217:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"data","nameLocation":"6254:4:20","nodeType":"VariableDeclaration","scope":3200,"src":"6241:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3175,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:20","nodeType":"VariableDeclaration","scope":3200,"src":"6268:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3177,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:20"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"6324:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3180,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:20"},"scope":3330,"src":"6180:326:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3216,"nodeType":"Block","src":"6782:101:20","statements":[{"expression":{"arguments":[{"id":3211,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6820:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6828:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3210,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3217,3246],"referencedDeclaration":3246,"src":"6799:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3209,"id":3215,"nodeType":"Return","src":"6792:84:20"}]},"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"6512:168:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3217,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:20","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"target","nameLocation":"6723:6:20","nodeType":"VariableDeclaration","scope":3217,"src":"6715:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"data","nameLocation":"6744:4:20","nodeType":"VariableDeclaration","scope":3217,"src":"6731:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3204,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:20"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3217,"src":"6768:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3207,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:20"},"scope":3330,"src":"6685:198:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"7224:170:20","statements":[{"assignments":[3230,3232],"declarations":[{"constant":false,"id":3230,"mutability":"mutable","name":"success","nameLocation":"7240:7:20","nodeType":"VariableDeclaration","scope":3245,"src":"7235:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3229,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:20","nodeType":"VariableDeclaration","scope":3245,"src":"7249:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3231,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3237,"initialValue":{"arguments":[{"id":3235,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"7296:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3233,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"7276:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:20","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:20","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:20"},{"expression":{"arguments":[{"id":3239,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"7345:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3240,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7353:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3241,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"7362:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3242,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7374:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3238,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"7318:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3228,"id":3244,"nodeType":"Return","src":"7311:76:20"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"6889:175:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:20","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"target","nameLocation":"7116:6:20","nodeType":"VariableDeclaration","scope":3246,"src":"7108:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3219,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"data","nameLocation":"7145:4:20","nodeType":"VariableDeclaration","scope":3246,"src":"7132:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3221,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:20","nodeType":"VariableDeclaration","scope":3246,"src":"7159:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3223,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:20"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"7210:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3226,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:20"},"scope":3330,"src":"7069:325:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3284,"nodeType":"Block","src":"7876:434:20","statements":[{"condition":{"id":3260,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"7890:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3282,"nodeType":"Block","src":"8246:58:20","statements":[{"expression":{"arguments":[{"id":3278,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8268:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3279,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"8280:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3277,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"8260:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"8260:33:20"}]},"id":3283,"nodeType":"IfStatement","src":"7886:418:20","trueBody":{"id":3276,"nodeType":"Block","src":"7899:341:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3261,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7917:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:20","memberName":"length","nodeType":"MemberAccess","src":"7917:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"IfStatement","src":"7913:286:20","trueBody":{"id":3272,"nodeType":"Block","src":"7941:258:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3267,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"8143:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3266,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"8132:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"8124:60:20"}]}},{"expression":{"id":3274,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8219:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3259,"id":3275,"nodeType":"Return","src":"8212:17:20"}]}}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"7400:277:20","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:20","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"target","nameLocation":"7735:6:20","nodeType":"VariableDeclaration","scope":3285,"src":"7727:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"success","nameLocation":"7756:7:20","nodeType":"VariableDeclaration","scope":3285,"src":"7751:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:20","nodeType":"VariableDeclaration","scope":3285,"src":"7773:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3252,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:20","nodeType":"VariableDeclaration","scope":3285,"src":"7806:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3254,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:20"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"7862:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3257,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:20"},"scope":3330,"src":"7682:628:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"8691:135:20","statements":[{"condition":{"id":3297,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"8705:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3306,"nodeType":"Block","src":"8762:58:20","statements":[{"expression":{"arguments":[{"id":3302,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"8784:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3303,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"8796:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3301,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"8776:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3305,"nodeType":"ExpressionStatement","src":"8776:33:20"}]},"id":3307,"nodeType":"IfStatement","src":"8701:119:20","trueBody":{"id":3300,"nodeType":"Block","src":"8714:42:20","statements":[{"expression":{"id":3298,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"8735:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3296,"id":3299,"nodeType":"Return","src":"8728:17:20"}]}}]},"documentation":{"id":3286,"nodeType":"StructuredDocumentation","src":"8316:210:20","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:20","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"success","nameLocation":"8571:7:20","nodeType":"VariableDeclaration","scope":3309,"src":"8566:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3287,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3290,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:20","nodeType":"VariableDeclaration","scope":3309,"src":"8588:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3289,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:20","nodeType":"VariableDeclaration","scope":3309,"src":"8621:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3291,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:20"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"8677:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3294,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:20"},"scope":3330,"src":"8531:295:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"8915:457:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3316,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"8991:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:20","memberName":"length","nodeType":"MemberAccess","src":"8991:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3326,"nodeType":"Block","src":"9321:45:20","statements":[{"expression":{"arguments":[{"id":3323,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"9342:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3322,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"9335:20:20"}]},"id":3327,"nodeType":"IfStatement","src":"8987:379:20","trueBody":{"id":3321,"nodeType":"Block","src":"9014:301:20","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:20","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:20"},"nodeType":"YulFunctionCall","src":"9213:17:20"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:20","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:20"},"nodeType":"YulFunctionCall","src":"9254:19:20"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:20"},"nodeType":"YulFunctionCall","src":"9247:44:20"},"nodeType":"YulExpressionStatement","src":"9247:44:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3311,"isOffset":false,"isSlot":false,"src":"9219:10:20","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"9262:10:20","valueSize":1}],"id":3320,"nodeType":"InlineAssembly","src":"9163:142:20"}]}}]},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:20","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:20","nodeType":"VariableDeclaration","scope":3329,"src":"8849:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3310,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:20","nodeType":"VariableDeclaration","scope":3329,"src":"8874:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:20"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[],"src":"8915:0:20"},"scope":3330,"src":"8832:540:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3331,"src":"194:9180:20","usedErrors":[]}],"src":"101:9274:20"},"id":20},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3330],"ContextUpgradeable":[3000],"Initializable":[2958]},"id":3001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2960,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:21"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3001,"sourceUnit":2959,"src":"110:42:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2963,"name":"Initializable","nameLocations":["691:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"691:13:21"},"id":2964,"nodeType":"InheritanceSpecifier","src":"691:13:21"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"154:496:21","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3000,"linearizedBaseContracts":[3000,2958],"name":"ContextUpgradeable","nameLocation":"669:18:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":2969,"nodeType":"Block","src":"763:7:21","statements":[]},"id":2970,"implemented":true,"kind":"function","modifiers":[{"id":2967,"kind":"modifierInvocation","modifierName":{"id":2966,"name":"onlyInitializing","nameLocations":["746:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2903,"src":"746:16:21"},"nodeType":"ModifierInvocation","src":"746:16:21"}],"name":"__Context_init","nameLocation":"720:14:21","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[],"src":"734:2:21"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[],"src":"763:0:21"},"scope":3000,"src":"711:59:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2975,"nodeType":"Block","src":"838:7:21","statements":[]},"id":2976,"implemented":true,"kind":"function","modifiers":[{"id":2973,"kind":"modifierInvocation","modifierName":{"id":2972,"name":"onlyInitializing","nameLocations":["821:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2903,"src":"821:16:21"},"nodeType":"ModifierInvocation","src":"821:16:21"}],"name":"__Context_init_unchained","nameLocation":"785:24:21","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[],"src":"809:2:21"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[],"src":"838:0:21"},"scope":3000,"src":"776:69:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2984,"nodeType":"Block","src":"912:34:21","statements":[{"expression":{"expression":{"id":2981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:21","memberName":"sender","nodeType":"MemberAccess","src":"929:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2980,"id":2983,"nodeType":"Return","src":"922:17:21"}]},"id":2985,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:21","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"869:2:21"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2985,"src":"903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:21"},"scope":3000,"src":"850:96:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"1019:32:21","statements":[{"expression":{"expression":{"id":2990,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:21","memberName":"data","nodeType":"MemberAccess","src":"1036:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2989,"id":2992,"nodeType":"Return","src":"1029:15:21"}]},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:21","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[],"src":"969:2:21"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2994,"src":"1003:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2987,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:21"},"scope":3000,"src":"952:99:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"1057:254:21","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2999,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:21","nodeType":"VariableDeclaration","scope":3000,"src":"1316:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2998,"length":{"hexValue":"3530","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3001,"src":"651:693:21","usedErrors":[]}],"src":"86:1259:21"},"id":21}},"contracts":{"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol":{"IClaimIssuer":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes","name":"signature","type":"bytes"}],"name":"ClaimRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_keyType","type":"uint256"}],"name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"sig","type":"bytes"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"}],"name":"getRecoveredAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"isClaimRevoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IIdentity","name":"_identity","type":"address"},{"internalType":"uint256","name":"claimTopic","type":"uint256"},{"internalType":"bytes","name":"sig","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"isClaimValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"},{"internalType":"address","name":"_identity","type":"address"}],"name":"revokeClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"revokeClaimBySignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"ClaimRevoked(bytes)":{"details":"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."}},"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"addKey(bytes32,uint256,uint256)":{"details":"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"details":"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"},"execute(address,uint256,bytes)":{"details":"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"},"getClaim(bytes32)":{"details":"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"getClaimIdsByTopic(uint256)":{"details":"Returns an array of claim IDs by topic."},"getKey(bytes32)":{"details":"Returns the full key data, if present in the identity."},"getKeyPurposes(bytes32)":{"details":"Returns the list of purposes associated with a key."},"getKeysByPurpose(uint256)":{"details":"Returns an array of public key bytes32 held by this identity."},"getRecoveredAddress(bytes,bytes32)":{"details":"returns the address that signed the given data","params":{"dataHash":"the data that was signed returns the address that signed dataHash and created the signature sig","sig":"the signature of the data"}},"isClaimRevoked(bytes)":{"details":"Returns revocation status of a claim.","params":{"_sig":"the signature of the claim"},"returns":{"_0":"isRevoked true if the claim is revoked and false otherwise"}},"isClaimValid(address,uint256,bytes,bytes)":{"details":"Checks if a claim is valid.","params":{"_identity":"the identity contract related to the claim","claimTopic":"the claim topic of the claim","data":"the data field of the claim","sig":"the signature of the claim"},"returns":{"_0":"claimValid true if the claim is valid, false otherwise"}},"keyHasPurpose(bytes32,uint256)":{"details":"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"removeClaim(bytes32)":{"details":"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"removeKey(bytes32,uint256)":{"details":"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"revokeClaim(bytes32,address)":{"details":"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.","params":{"_claimId":"the id of the claim","_identity":"the address of the identity contract"},"returns":{"_0":"isRevoked true when the claim is revoked"}},"revokeClaimBySignature(bytes)":{"details":"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.","params":{"signature":"the signature of the claim"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","getRecoveredAddress(bytes,bytes32)":"c3b129e3","isClaimRevoked(bytes)":"2646b264","isClaimValid(address,uint256,bytes,bytes)":"c0969a6e","keyHasPurpose(bytes32,uint256)":"d202158d","removeClaim(bytes32)":"4eee424a","removeKey(bytes32,uint256)":"53d413c5","revokeClaim(bytes32,address)":"73c33708","revokeClaimBySignature(bytes)":"9f7f9edd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{"revokeClaim(bytes32,address)":{"notice":"will fetch the claim from the identity contract (unsafe)."}},"version":1}}},"@onchain-id/solidity/contracts/interface/IERC734.sol":{"IERC734":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_keyType","type":"uint256"}],"name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"interface of the ERC734 (Key Holder) standard as defined in the EIP.","events":{"Approved(uint256,bool)":{"details":"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."},"Executed(uint256,address,uint256,bytes)":{"details":"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."},"ExecutionFailed(uint256,address,uint256,bytes)":{"details":"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"},"ExecutionRequested(uint256,address,uint256,bytes)":{"details":"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."},"KeyAdded(bytes32,uint256,uint256)":{"details":"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."},"KeyRemoved(bytes32,uint256,uint256)":{"details":"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."}},"kind":"dev","methods":{"addKey(bytes32,uint256,uint256)":{"details":"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"details":"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"},"execute(address,uint256,bytes)":{"details":"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"},"getKey(bytes32)":{"details":"Returns the full key data, if present in the identity."},"getKeyPurposes(bytes32)":{"details":"Returns the list of purposes associated with a key."},"getKeysByPurpose(uint256)":{"details":"Returns an array of public key bytes32 held by this identity."},"keyHasPurpose(bytes32,uint256)":{"details":"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"removeKey(bytes32,uint256)":{"details":"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","keyHasPurpose(bytes32,uint256)":"d202158d","removeKey(bytes32,uint256)":"53d413c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@onchain-id/solidity/contracts/interface/IERC735.sol":{"IERC735":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"interface of the ERC735 (Claim Holder) standard as defined in the EIP.","events":{"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)":{"details":"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."},"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)":{"details":"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."},"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)":{"details":"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."}},"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"getClaim(bytes32)":{"details":"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"getClaimIdsByTopic(uint256)":{"details":"Returns an array of claim IDs by topic."},"removeClaim(bytes32)":{"details":"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","removeClaim(bytes32)":"4eee424a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@onchain-id/solidity/contracts/interface/IIdentity.sol":{"IIdentity":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"claimId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"topic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"scheme","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"ClaimRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"purpose","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"KeyRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_keyType","type":"uint256"}],"name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."},"addKey(bytes32,uint256,uint256)":{"details":"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"details":"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"},"execute(address,uint256,bytes)":{"details":"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"},"getClaim(bytes32)":{"details":"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"getClaimIdsByTopic(uint256)":{"details":"Returns an array of claim IDs by topic."},"getKey(bytes32)":{"details":"Returns the full key data, if present in the identity."},"getKeyPurposes(bytes32)":{"details":"Returns the list of purposes associated with a key."},"getKeysByPurpose(uint256)":{"details":"Returns an array of public key bytes32 held by this identity."},"keyHasPurpose(bytes32,uint256)":{"details":"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."},"removeClaim(bytes32)":{"details":"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."},"removeKey(bytes32,uint256)":{"details":"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","keyHasPurpose(bytes32,uint256)":"d202158d","removeClaim(bytes32)":"4eee424a","removeKey(bytes32,uint256)":"53d413c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/compliance/modular/IModularCompliance.sol":{"IModularCompliance":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"ModuleInteraction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenBound","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenUnbound","type":"event"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"addModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"bindToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"address","name":"_module","type":"address"}],"name":"callModuleFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"canTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"created","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"destroyed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenBound","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"isModuleBound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"removeModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferred","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"unbindToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"ModuleInteraction(address,bytes4)":{"details":"Event emitted for each executed interaction with a module contract.  For gas efficiency, only the interaction calldata selector (first 4  bytes) is included in the event. For interactions without calldata or  whose calldata is shorter than 4 bytes, the selector will be `0`."}},"kind":"dev","methods":{"addModule(address)":{"details":"adds a module to the list of compliance modules","params":{"_module":"address of the module to add  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleAdded event"}},"bindToken(address)":{"details":"binds a token to the compliance contract","params":{"_token":"address of the token to bind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenBound event"}},"callModuleFunction(bytes,address)":{"details":"calls any function on bound modules  can be called only on bound modules","params":{"_module":"The address of the module  This function can be called only by the modular compliance owner  emits a `ModuleInteraction` event","callData":"the bytecode for interaction with the module, abi encoded"}},"canTransfer(address,address,uint256)":{"details":"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...","params":{"_amount":"The amount of tokens involved in the transfer  This function will call moduleCheck() on every module bound to the compliance  If each of the module checks return TRUE, this function will return TRUE as well  returns FALSE otherwise","_from":"The address of the sender","_to":"The address of the receiver"}},"created(address,uint256)":{"details":"function called whenever tokens are created on a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance","params":{"_amount":"The amount of tokens involved in the minting  This function calls moduleMintAction() on each module bound to the compliance contract","_to":"The address of the receiver"}},"destroyed(address,uint256)":{"details":"function called whenever tokens are destroyed from a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance","params":{"_amount":"The amount of tokens involved in the burn  This function calls moduleBurnAction() on each module bound to the compliance contract","_from":"The address on which tokens are burnt"}},"getModules()":{"details":"getter for the modules bound to the compliance contract  returns address array of module contracts bound to the compliance"},"getTokenBound()":{"details":"getter for the address of the token bound  returns the address of the token"},"isModuleBound(address)":{"details":"checks if a module is bound to the compliance contract  returns true if module is bound, false otherwise"},"removeModule(address)":{"details":"removes a module from the list of compliance modules","params":{"_module":"address of the module to remove  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleRemoved event"}},"transferred(address,address,uint256)":{"details":"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance","params":{"_amount":"The amount of tokens involved in the transfer  This function calls moduleTransferAction() on each module bound to the compliance contract","_from":"The address of the sender","_to":"The address of the receiver"}},"unbindToken(address)":{"details":"unbinds a token from the compliance contract","params":{"_token":"address of the token to unbind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenUnbound event"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addModule(address)":"1ed86f19","bindToken(address)":"3ff5aa02","callModuleFunction(bytes,address)":"efb22d33","canTransfer(address,address,uint256)":"e46638e6","created(address,uint256)":"5f8dead3","destroyed(address,uint256)":"8d2ea772","getModules()":"b2494df3","getTokenBound()":"6a3edf28","isModuleBound(address)":"a446d49f","removeModule(address)":"a0632461","transferred(address,address,uint256)":"8baf29b4","unbindToken(address)":"40db3b50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ModuleInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"callModuleFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModuleBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ModuleInteraction(address,bytes4)\":{\"details\":\"Event emitted for each executed interaction with a module contract.  For gas efficiency, only the interaction calldata selector (first 4  bytes) is included in the event. For interactions without calldata or  whose calldata is shorter than 4 bytes, the selector will be `0`.\"}},\"kind\":\"dev\",\"methods\":{\"addModule(address)\":{\"details\":\"adds a module to the list of compliance modules\",\"params\":{\"_module\":\"address of the module to add  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleAdded event\"}},\"bindToken(address)\":{\"details\":\"binds a token to the compliance contract\",\"params\":{\"_token\":\"address of the token to bind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenBound event\"}},\"callModuleFunction(bytes,address)\":{\"details\":\"calls any function on bound modules  can be called only on bound modules\",\"params\":{\"_module\":\"The address of the module  This function can be called only by the modular compliance owner  emits a `ModuleInteraction` event\",\"callData\":\"the bytecode for interaction with the module, abi encoded\"}},\"canTransfer(address,address,uint256)\":{\"details\":\"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer  This function will call moduleCheck() on every module bound to the compliance  If each of the module checks return TRUE, this function will return TRUE as well  returns FALSE otherwise\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"created(address,uint256)\":{\"details\":\"function called whenever tokens are created on a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance\",\"params\":{\"_amount\":\"The amount of tokens involved in the minting  This function calls moduleMintAction() on each module bound to the compliance contract\",\"_to\":\"The address of the receiver\"}},\"destroyed(address,uint256)\":{\"details\":\"function called whenever tokens are destroyed from a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance\",\"params\":{\"_amount\":\"The amount of tokens involved in the burn  This function calls moduleBurnAction() on each module bound to the compliance contract\",\"_from\":\"The address on which tokens are burnt\"}},\"getModules()\":{\"details\":\"getter for the modules bound to the compliance contract  returns address array of module contracts bound to the compliance\"},\"getTokenBound()\":{\"details\":\"getter for the address of the token bound  returns the address of the token\"},\"isModuleBound(address)\":{\"details\":\"checks if a module is bound to the compliance contract  returns true if module is bound, false otherwise\"},\"removeModule(address)\":{\"details\":\"removes a module from the list of compliance modules\",\"params\":{\"_module\":\"address of the module to remove  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleRemoved event\"}},\"transferred(address,address,uint256)\":{\"details\":\"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer  This function calls moduleTransferAction() on each module bound to the compliance contract\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"unbindToken(address)\":{\"details\":\"unbinds a token from the compliance contract\",\"params\":{\"_token\":\"address of the token to unbind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ModuleAdded(address)\":{\"notice\":\"this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module\"},\"ModuleRemoved(address)\":{\"notice\":\"this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/compliance/modular/IModularCompliance.sol\":\"IModularCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xf632b47a306502ce66a0e432c7c3a7d3290ab8325a854bdefe2268d61fb7cc7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://988eb31577cdd253e9ff2743983c466f81fdb6b944b24d3c55b0263ae45f3d3d\",\"dweb:/ipfs/QmZFixdMi55m78eEfrLN3yiNL4VR3AWSgKcjaRBBq4FskX\"]}},\"version\":1}","userdoc":{"events":{"ModuleAdded(address)":{"notice":"this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module"},"ModuleRemoved(address)":{"notice":"this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module"},"TokenBound(address)":{"notice":"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"},"TokenUnbound(address)":{"notice":"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"}},"kind":"user","methods":{},"version":1}}},"contracts/compliance/modular/MCStorage.sol":{"MCStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122044e746a61e8f12d3069e1201c875903ff4f3353f427d487715e4dcda29bbbc4964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xE7 CHAINID 0xA6 0x1E DUP16 SLT 0xD3 MOD SWAP15 SLT ADD 0xC8 PUSH22 0x903FF4F3353F427D487715E4DCDA29BBBC4964736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"3843:492:10:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122044e746a61e8f12d3069e1201c875903ff4f3353f427d487715e4dcda29bbbc4964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xE7 CHAINID 0xA6 0x1E DUP16 SLT 0xD3 MOD SWAP15 SLT ADD 0xC8 PUSH22 0x903FF4F3353F427D487715E4DCDA29BBBC4964736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"3843:492:10:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/compliance/modular/MCStorage.sol\":\"MCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/compliance/modular/MCStorage.sol\":{\"keccak256\":\"0x6c987343c8d3694e57bf2454ca494fc8ab2043434596dea0534951ca7a27ecab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c755ff3cb0845f2c168f38168379efe067a0db6029a7dc1013cdb49de237954\",\"dweb:/ipfs/QmSm18KLuBrUazzBGmJxAsb1xqkbAjnp5wQrFKBN1W6pVD\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/compliance/modular/ModularCompliance.sol":{"ModularCompliance":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"ModuleInteraction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenBound","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenUnbound","type":"event"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"addModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"bindToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"address","name":"_module","type":"address"}],"name":"callModuleFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"canTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"created","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"destroyed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenBound","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"isModuleBound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"removeModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferred","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"unbindToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addModule(address)":{"details":"See {IModularCompliance-addModule}."},"bindToken(address)":{"details":"See {IModularCompliance-bindToken}."},"callModuleFunction(bytes,address)":{"details":"see {IModularCompliance-callModuleFunction}."},"canTransfer(address,address,uint256)":{"details":"See {IModularCompliance-canTransfer}."},"created(address,uint256)":{"details":"See {IModularCompliance-created}."},"destroyed(address,uint256)":{"details":"See {IModularCompliance-destroyed}."},"getModules()":{"details":"See {IModularCompliance-getModules}."},"getTokenBound()":{"details":"See {IModularCompliance-getTokenBound}."},"isModuleBound(address)":{"details":"See {IModularCompliance-isModuleBound}."},"owner()":{"details":"Returns the address of the current owner."},"removeModule(address)":{"details":"See {IModularCompliance-removeModule}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferred(address,address,uint256)":{"details":"See {IModularCompliance-transferred}."},"unbindToken(address)":{"details":"See {IModularCompliance-unbindToken}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506115f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e1c7392a11610066578063e1c7392a14610220578063e46638e614610228578063efb22d331461023b578063f2fde38b1461024e57600080fd5b80638da5cb5b146101ab578063a0632461146101bc578063a446d49f146101cf578063b2494df31461020b57600080fd5b80636a3edf28116100d35780636a3edf2814610153578063715018a61461017d5780638baf29b4146101855780638d2ea7721461019857600080fd5b80631ed86f19146101055780633ff5aa021461011a57806340db3b501461012d5780635f8dead314610140575b600080fd5b6101186101133660046112f2565b610261565b005b6101186101283660046112f2565b610570565b61011861013b3660046112f2565b61067b565b61011861014e36600461130d565b6107c3565b6065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61011861090c565b610118610193366004611337565b610920565b6101186101a636600461130d565b610a94565b6033546001600160a01b0316610160565b6101186101ca3660046112f2565b610bd7565b6101fb6101dd3660046112f2565b6001600160a01b031660009081526067602052604090205460ff1690565b6040519015158152602001610174565b610213610e0f565b6040516101749190611373565b610118610e71565b6101fb610236366004611337565b610f7e565b6101186102493660046113c0565b61105b565b61011861025c3660046112f2565b611141565b6102696111b7565b6001600160a01b0381166102985760405162461bcd60e51b815260040161028f90611441565b60405180910390fd5b6001600160a01b03811660009081526067602052604090205460ff16156102f85760405162461bcd60e51b81526020600482015260146024820152731b5bd91d5b1948185b1c9958591e48189bdd5b9960621b604482015260640161028f565b6066546018101561034b5760405162461bcd60e51b815260206004820152601f60248201527f63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300604482015260640161028f565b6000819050806001600160a01b031663e6f5e8076040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190611478565b6104875760405163bcc2105360e01b81523060048201526001600160a01b0382169063bcc2105390602401602060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190611478565b6104875760405162461bcd60e51b815260206004820152603460248201527f636f6d706c69616e6365206973206e6f74207375697461626c6520666f722062604482015273696e64696e6720746f20746865206d6f64756c6560601b606482015260840161028f565b6040516312a4c95160e21b81523060048201526001600160a01b03821690634a93254490602401600060405180830381600087803b1580156104c857600080fd5b505af11580156104dc573d6000803e3d6000fd5b50506066805460018082019092557f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b0319166001600160a01b038716908117909155600081815260676020526040808220805460ff191690941790935591519093507fead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a9250a25050565b336105836033546001600160a01b031690565b6001600160a01b031614806105b457506065546001600160a01b03161580156105b45750336001600160a01b038216145b6106005760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6001600160a01b0381166106265760405162461bcd60e51b815260040161028f90611441565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b906020015b60405180910390a150565b3361068e6033546001600160a01b031690565b6001600160a01b031614806106ab5750336001600160a01b038216145b6106f75760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6065546001600160a01b038281169116146107545760405162461bcd60e51b815260206004820152601760248201527f5468697320746f6b656e206973206e6f7420626f756e64000000000000000000604482015260640161028f565b6001600160a01b03811661077a5760405162461bcd60e51b815260040161028f90611441565b606580546001600160a01b03191690556040516001600160a01b03821681527f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a90602001610670565b6065546001600160a01b031633146107ed5760405162461bcd60e51b815260040161028f9061149a565b6001600160a01b0382166108135760405162461bcd60e51b815260040161028f90611441565b600081116108635760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74604482015260640161028f565b60665460005b81811015610906576066818154811061088457610884611504565b60009182526020909120015460405163f104a8c960e01b81526001600160a01b038681166004830152602482018690529091169063f104a8c990604401600060405180830381600087803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b5050505080806108fe90611530565b915050610869565b50505050565b6109146111b7565b61091e6000611211565b565b6065546001600160a01b0316331461094a5760405162461bcd60e51b815260040161028f9061149a565b6001600160a01b0383161580159061096a57506001600160a01b03821615155b6109865760405162461bcd60e51b815260040161028f90611441565b600081116109e25760405162461bcd60e51b8152602060048201526024808201527f696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e60448201526339b332b960e11b606482015260840161028f565b60665460005b81811015610a8d5760668181548110610a0357610a03611504565b600091825260209091200154604051630b2df87b60e21b81526001600160a01b03878116600483015286811660248301526044820186905290911690632cb7e1ec90606401600060405180830381600087803b158015610a6257600080fd5b505af1158015610a76573d6000803e3d6000fd5b505050508080610a8590611530565b9150506109e8565b5050505050565b6065546001600160a01b03163314610abe5760405162461bcd60e51b815260040161028f9061149a565b6001600160a01b038216610ae45760405162461bcd60e51b815260040161028f90611441565b60008111610b345760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e604482015260640161028f565b60665460005b818110156109065760668181548110610b5557610b55611504565b600091825260209091200154604051631b9248d160e11b81526001600160a01b038681166004830152602482018690529091169063372491a290604401600060405180830381600087803b158015610bac57600080fd5b505af1158015610bc0573d6000803e3d6000fd5b505050508080610bcf90611530565b915050610b3a565b610bdf6111b7565b6001600160a01b038116610c055760405162461bcd60e51b815260040161028f90611441565b6001600160a01b03811660009081526067602052604090205460ff16610c605760405162461bcd60e51b815260206004820152601060248201526f1b5bd91d5b19481b9bdd08189bdd5b9960821b604482015260640161028f565b60665460005b81811015610e0a57826001600160a01b031660668281548110610c8b57610c8b611504565b6000918252602090912001546001600160a01b031603610df857604051630694a5fb60e01b81523060048201526001600160a01b03841690630694a5fb90602401600060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b505050506066600183610d0d9190611549565b81548110610d1d57610d1d611504565b600091825260209091200154606680546001600160a01b039092169183908110610d4957610d49611504565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506066805480610d8857610d8861155c565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03851680835260679091526040808320805460ff191690555190917f0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b891a2505050565b80610e0281611530565b915050610c66565b505050565b60606066805480602002602001604051908101604052809291908181526020018280548015610e6757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e49575b5050505050905090565b600054610100900460ff1615808015610e915750600054600160ff909116105b80610eab5750303b158015610eab575060005460ff166001145b610f0e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028f565b6000805460ff191660011790558015610f31576000805461ff0019166101001790555b610f39611263565b8015610f7b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610670565b50565b606654600090815b8181101561104d5760668181548110610fa157610fa1611504565b600091825260209091200154604051624edf3960e21b81526001600160a01b0388811660048301528781166024830152604482018790523060648301529091169063013b7ce490608401602060405180830381865afa158015611008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102c9190611478565b61103b57600092505050611054565b8061104581611530565b915050610f86565b5060019150505b9392505050565b6110636111b7565b6001600160a01b03811660009081526067602052604090205460ff166110cb5760405162461bcd60e51b815260206004820152601960248201527f63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000604482015260640161028f565b6040518284823760008084836000865af16110ea573d6000803e3d6000fd5b50806001600160a01b03167f20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef8916111208585611292565b6040516001600160e01b0319909116815260200160405180910390a2505050565b6111496111b7565b6001600160a01b0381166111ae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028f565b610f7b81611211565b6033546001600160a01b0316331461091e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661128a5760405162461bcd60e51b815260040161028f90611572565b61091e6112a6565b6000600482106112a0575081355b92915050565b600054610100900460ff166112cd5760405162461bcd60e51b815260040161028f90611572565b61091e33611211565b80356001600160a01b03811681146112ed57600080fd5b919050565b60006020828403121561130457600080fd5b611054826112d6565b6000806040838503121561132057600080fd5b611329836112d6565b946020939093013593505050565b60008060006060848603121561134c57600080fd5b611355846112d6565b9250611363602085016112d6565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156113b45783516001600160a01b03168352928401929184019160010161138f565b50909695505050505050565b6000806000604084860312156113d557600080fd5b833567ffffffffffffffff808211156113ed57600080fd5b818601915086601f83011261140157600080fd5b81358181111561141057600080fd5b87602082850101111561142257600080fd5b60209283019550935061143891860190506112d6565b90509250925092565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60006020828403121561148a57600080fd5b8151801515811461105457600080fd5b60208082526044908201527f6572726f72203a20746869732061646472657373206973206e6f74206120746f60408201527f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e746060820152631c9858dd60e21b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115425761154261151a565b5060010190565b818103818111156112a0576112a061151a565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220af07cc50cfe3f6bb6afd1a9a92bf5b4d514e96369891e0b43b4305f3ee8abcc064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE1C7392A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xEFB22D33 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xA446D49F EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A3EDF28 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6A3EDF28 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1ED86F19 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x130D JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x118 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x130D JUMP JUMPDEST PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x174 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x118 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B5BD91D5B1948185B1C9958591E48189BDD5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x18 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE6F5E807 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBCC21053 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xBCC21053 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6D706C69616E6365206973206E6F74207375697461626C6520666F722062 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x696E64696E6720746F20746865206D6F64756C65 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12A4C951 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4A932544 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP4 POP PUSH32 0xEAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A SWAP3 POP LOG2 POP POP JUMP JUMPDEST CALLER PUSH2 0x583 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x5B4 JUMPI POP PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x68E PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6AB JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A SWAP1 PUSH1 0x20 ADD PUSH2 0x670 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH2 0x884 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xF104A8C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF104A8C9 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x8FE SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x869 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x914 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x91E PUSH1 0x0 PUSH2 0x1211 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x96A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x39B332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH2 0xA03 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xB2DF87B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x2CB7E1EC SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA85 SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB55 JUMPI PUSH2 0xB55 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1B9248D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x372491A2 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xBCF SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB3A JUMP JUMPDEST PUSH2 0xBDF PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B5BD91D5B19481B9BDD08189BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE0A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC8B JUMPI PUSH2 0xC8B PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x694A5FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x694A5FB SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 PUSH1 0x1 DUP4 PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x1549 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD49 JUMPI PUSH2 0xD49 PUSH2 0x1504 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x66 DUP1 SLOAD DUP1 PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 PUSH32 0xA1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8 SWAP2 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xE02 DUP2 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE49 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE91 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xEAB JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF31 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xF39 PUSH2 0x1263 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH2 0x670 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x104D JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFA1 JUMPI PUSH2 0xFA1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x4EDF39 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x13B7CE4 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1008 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x103B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1054 JUMP JUMPDEST DUP1 PUSH2 0x1045 DUP2 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF86 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1063 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 PUSH1 0x0 DUP7 GAS CALL PUSH2 0x10EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891 PUSH2 0x1120 DUP6 DUP6 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1149 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH2 0xF7B DUP2 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x128A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x91E PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 LT PUSH2 0x12A0 JUMPI POP DUP2 CALLDATALOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x91E CALLER PUSH2 0x1211 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1054 DUP3 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1329 DUP4 PUSH2 0x12D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1355 DUP5 PUSH2 0x12D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1363 PUSH1 0x20 DUP6 ADD PUSH2 0x12D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x138F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP PUSH2 0x1438 SWAP2 DUP7 ADD SWAP1 POP PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x44 SWAP1 DUP3 ADD MSTORE PUSH32 0x6572726F72203A20746869732061646472657373206973206E6F74206120746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1542 JUMPI PUSH2 0x1542 PUSH2 0x151A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x12A0 PUSH2 0x151A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SMOD 0xCC POP 0xCF 0xE3 0xF6 0xBB PUSH11 0xFD1A9A92BF5B4D514E9636 SWAP9 SWAP2 0xE0 0xB4 EXTCODESIZE NUMBER SDIV RETURN 0xEE DUP11 0xBC 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"4067:7243:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_2684":{"entryPoint":4707,"id":2684,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_2695":{"entryPoint":4774,"id":2695,"parameterSlots":0,"returnSlots":0},"@_checkOwner_2726":{"entryPoint":4535,"id":2726,"parameterSlots":0,"returnSlots":0},"@_msgSender_2985":{"entryPoint":null,"id":2985,"parameterSlots":0,"returnSlots":1},"@_selector_1824":{"entryPoint":4754,"id":1824,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_2783":{"entryPoint":4625,"id":2783,"parameterSlots":1,"returnSlots":0},"@addModule_1429":{"entryPoint":609,"id":1429,"parameterSlots":1,"returnSlots":0},"@bindToken_1298":{"entryPoint":1392,"id":1298,"parameterSlots":1,"returnSlots":0},"@callModuleFunction_1721":{"entryPoint":4187,"id":1721,"parameterSlots":3,"returnSlots":0},"@canTransfer_1808":{"entryPoint":3966,"id":1808,"parameterSlots":3,"returnSlots":1},"@created_1638":{"entryPoint":1987,"id":1638,"parameterSlots":2,"returnSlots":0},"@destroyed_1694":{"entryPoint":2708,"id":1694,"parameterSlots":2,"returnSlots":0},"@getModules_1746":{"entryPoint":3599,"id":1746,"parameterSlots":0,"returnSlots":1},"@getTokenBound_1756":{"entryPoint":null,"id":1756,"parameterSlots":0,"returnSlots":1},"@init_1250":{"entryPoint":3697,"id":1250,"parameterSlots":0,"returnSlots":0},"@isContract_3018":{"entryPoint":null,"id":3018,"parameterSlots":1,"returnSlots":1},"@isModuleBound_1735":{"entryPoint":null,"id":1735,"parameterSlots":1,"returnSlots":1},"@owner_2712":{"entryPoint":null,"id":2712,"parameterSlots":0,"returnSlots":1},"@removeModule_1516":{"entryPoint":3031,"id":1516,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_2740":{"entryPoint":2316,"id":2740,"parameterSlots":0,"returnSlots":0},"@transferOwnership_2763":{"entryPoint":4417,"id":2763,"parameterSlots":1,"returnSlots":0},"@transferred_1582":{"entryPoint":2336,"id":1582,"parameterSlots":3,"returnSlots":0},"@unbindToken_1344":{"entryPoint":1659,"id":1344,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4919,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4877,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptrt_address":{"entryPoint":5056,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5185,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a6027c959cf3cd0795c567867a9ffdb1a4df4845683f4a89a616ca508d8819a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5449,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5424,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5402,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":5468,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5380,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11285:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:22","statements":[{"nodeType":"YulAssignment","src":"73:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:22"},"nodeType":"YulFunctionCall","src":"82:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:22"}]},{"body":{"nodeType":"YulBlock","src":"165:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:22"},"nodeType":"YulFunctionCall","src":"167:12:22"},"nodeType":"YulExpressionStatement","src":"167:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:22"},"nodeType":"YulFunctionCall","src":"146:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:22"},"nodeType":"YulFunctionCall","src":"142:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:22"},"nodeType":"YulFunctionCall","src":"131:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:22"},"nodeType":"YulFunctionCall","src":"121:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:22"},"nodeType":"YulFunctionCall","src":"114:50:22"},"nodeType":"YulIf","src":"111:70:22"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:22","type":""}],"src":"14:173:22"},{"body":{"nodeType":"YulBlock","src":"262:116:22","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:22"},"nodeType":"YulFunctionCall","src":"279:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:22"},"nodeType":"YulFunctionCall","src":"275:32:22"},"nodeType":"YulIf","src":"272:52:22"},{"nodeType":"YulAssignment","src":"333:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:22"},"nodeType":"YulFunctionCall","src":"343:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:22","type":""}],"src":"192:186:22"},{"body":{"nodeType":"YulBlock","src":"470:167:22","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:22"},"nodeType":"YulFunctionCall","src":"518:12:22"},"nodeType":"YulExpressionStatement","src":"518:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:22"},"nodeType":"YulFunctionCall","src":"487:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:22"},"nodeType":"YulFunctionCall","src":"483:32:22"},"nodeType":"YulIf","src":"480:52:22"},{"nodeType":"YulAssignment","src":"541:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:22"},"nodeType":"YulFunctionCall","src":"551:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:22"}]},{"nodeType":"YulAssignment","src":"589:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"616:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"627:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"612:3:22"},"nodeType":"YulFunctionCall","src":"612:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"599:12:22"},"nodeType":"YulFunctionCall","src":"599:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:22","type":""}],"src":"383:254:22"},{"body":{"nodeType":"YulBlock","src":"743:102:22","statements":[{"nodeType":"YulAssignment","src":"753:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"765:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"776:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"761:3:22"},"nodeType":"YulFunctionCall","src":"761:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"753:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"795:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"810:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"826:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"831:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"822:3:22"},"nodeType":"YulFunctionCall","src":"822:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"818:3:22"},"nodeType":"YulFunctionCall","src":"818:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"806:3:22"},"nodeType":"YulFunctionCall","src":"806:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"788:6:22"},"nodeType":"YulFunctionCall","src":"788:51:22"},"nodeType":"YulExpressionStatement","src":"788:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"712:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"723:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"734:4:22","type":""}],"src":"642:203:22"},{"body":{"nodeType":"YulBlock","src":"954:224:22","statements":[{"body":{"nodeType":"YulBlock","src":"1000:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1009:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1012:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1002:6:22"},"nodeType":"YulFunctionCall","src":"1002:12:22"},"nodeType":"YulExpressionStatement","src":"1002:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"975:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"984:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"971:3:22"},"nodeType":"YulFunctionCall","src":"971:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"996:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"967:3:22"},"nodeType":"YulFunctionCall","src":"967:32:22"},"nodeType":"YulIf","src":"964:52:22"},{"nodeType":"YulAssignment","src":"1025:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1054:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1035:18:22"},"nodeType":"YulFunctionCall","src":"1035:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1025:6:22"}]},{"nodeType":"YulAssignment","src":"1073:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1106:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1117:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:22"},"nodeType":"YulFunctionCall","src":"1102:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1083:18:22"},"nodeType":"YulFunctionCall","src":"1083:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1073:6:22"}]},{"nodeType":"YulAssignment","src":"1130:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1157:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1168:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1153:3:22"},"nodeType":"YulFunctionCall","src":"1153:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1140:12:22"},"nodeType":"YulFunctionCall","src":"1140:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1130:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"904:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"915:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"927:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"935:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"943:6:22","type":""}],"src":"850:328:22"},{"body":{"nodeType":"YulBlock","src":"1278:92:22","statements":[{"nodeType":"YulAssignment","src":"1288:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1300:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1311:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1296:3:22"},"nodeType":"YulFunctionCall","src":"1296:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1288:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1330:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1355:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1348:6:22"},"nodeType":"YulFunctionCall","src":"1348:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1341:6:22"},"nodeType":"YulFunctionCall","src":"1341:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1323:6:22"},"nodeType":"YulFunctionCall","src":"1323:41:22"},"nodeType":"YulExpressionStatement","src":"1323:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1258:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1269:4:22","type":""}],"src":"1183:187:22"},{"body":{"nodeType":"YulBlock","src":"1526:507:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1536:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1546:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1540:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1557:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1575:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1586:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1571:3:22"},"nodeType":"YulFunctionCall","src":"1571:18:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1561:6:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1616:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1598:6:22"},"nodeType":"YulFunctionCall","src":"1598:21:22"},"nodeType":"YulExpressionStatement","src":"1598:21:22"},{"nodeType":"YulVariableDeclaration","src":"1628:17:22","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1639:6:22"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1632:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1654:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1674:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1668:5:22"},"nodeType":"YulFunctionCall","src":"1668:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1658:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1697:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"1705:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1690:6:22"},"nodeType":"YulFunctionCall","src":"1690:22:22"},"nodeType":"YulExpressionStatement","src":"1690:22:22"},{"nodeType":"YulAssignment","src":"1721:25:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1732:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1743:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1728:3:22"},"nodeType":"YulFunctionCall","src":"1728:18:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1721:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"1755:29:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1773:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1781:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1769:3:22"},"nodeType":"YulFunctionCall","src":"1769:15:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1759:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1793:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1802:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1797:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1861:146:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1882:3:22"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1897:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:22"},"nodeType":"YulFunctionCall","src":"1891:13:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1919:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1910:3:22"},"nodeType":"YulFunctionCall","src":"1910:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"1923:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1906:3:22"},"nodeType":"YulFunctionCall","src":"1906:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1887:3:22"},"nodeType":"YulFunctionCall","src":"1887:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1875:6:22"},"nodeType":"YulFunctionCall","src":"1875:52:22"},"nodeType":"YulExpressionStatement","src":"1875:52:22"},{"nodeType":"YulAssignment","src":"1940:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1951:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1956:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:22"},"nodeType":"YulFunctionCall","src":"1947:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1940:3:22"}]},{"nodeType":"YulAssignment","src":"1972:25:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1986:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1994:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:22"},"nodeType":"YulFunctionCall","src":"1982:15:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1972:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1823:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1826:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1820:2:22"},"nodeType":"YulFunctionCall","src":"1820:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1834:18:22","statements":[{"nodeType":"YulAssignment","src":"1836:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1845:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1841:3:22"},"nodeType":"YulFunctionCall","src":"1841:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1836:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1816:3:22","statements":[]},"src":"1812:195:22"},{"nodeType":"YulAssignment","src":"2016:11:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"2024:3:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2016:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1495:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1506:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1517:4:22","type":""}],"src":"1375:658:22"},{"body":{"nodeType":"YulBlock","src":"2144:565:22","statements":[{"body":{"nodeType":"YulBlock","src":"2190:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2199:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2202:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2192:6:22"},"nodeType":"YulFunctionCall","src":"2192:12:22"},"nodeType":"YulExpressionStatement","src":"2192:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2165:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2174:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2161:3:22"},"nodeType":"YulFunctionCall","src":"2161:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2186:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2157:3:22"},"nodeType":"YulFunctionCall","src":"2157:32:22"},"nodeType":"YulIf","src":"2154:52:22"},{"nodeType":"YulVariableDeclaration","src":"2215:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2242:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2229:12:22"},"nodeType":"YulFunctionCall","src":"2229:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2219:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2261:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2271:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2265:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2316:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2325:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2328:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2318:6:22"},"nodeType":"YulFunctionCall","src":"2318:12:22"},"nodeType":"YulExpressionStatement","src":"2318:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2304:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2312:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2301:2:22"},"nodeType":"YulFunctionCall","src":"2301:14:22"},"nodeType":"YulIf","src":"2298:34:22"},{"nodeType":"YulVariableDeclaration","src":"2341:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2355:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2366:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2351:3:22"},"nodeType":"YulFunctionCall","src":"2351:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2345:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2421:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2433:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2423:6:22"},"nodeType":"YulFunctionCall","src":"2423:12:22"},"nodeType":"YulExpressionStatement","src":"2423:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2400:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"2404:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2396:3:22"},"nodeType":"YulFunctionCall","src":"2396:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2411:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2392:3:22"},"nodeType":"YulFunctionCall","src":"2392:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2385:6:22"},"nodeType":"YulFunctionCall","src":"2385:35:22"},"nodeType":"YulIf","src":"2382:55:22"},{"nodeType":"YulVariableDeclaration","src":"2446:30:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2473:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2460:12:22"},"nodeType":"YulFunctionCall","src":"2460:16:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2450:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2503:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2512:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2515:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2505:6:22"},"nodeType":"YulFunctionCall","src":"2505:12:22"},"nodeType":"YulExpressionStatement","src":"2505:12:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2491:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2499:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2488:2:22"},"nodeType":"YulFunctionCall","src":"2488:14:22"},"nodeType":"YulIf","src":"2485:34:22"},{"body":{"nodeType":"YulBlock","src":"2571:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2580:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2583:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2573:6:22"},"nodeType":"YulFunctionCall","src":"2573:12:22"},"nodeType":"YulExpressionStatement","src":"2573:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2542:2:22"},{"name":"length","nodeType":"YulIdentifier","src":"2546:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:22"},"nodeType":"YulFunctionCall","src":"2538:15:22"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2534:3:22"},"nodeType":"YulFunctionCall","src":"2534:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2562:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2531:2:22"},"nodeType":"YulFunctionCall","src":"2531:39:22"},"nodeType":"YulIf","src":"2528:59:22"},{"nodeType":"YulAssignment","src":"2596:23:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2610:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"2614:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2606:3:22"},"nodeType":"YulFunctionCall","src":"2606:13:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2596:6:22"}]},{"nodeType":"YulAssignment","src":"2628:16:22","value":{"name":"length","nodeType":"YulIdentifier","src":"2638:6:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2628:6:22"}]},{"nodeType":"YulAssignment","src":"2653:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2686:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:22"},"nodeType":"YulFunctionCall","src":"2682:20:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2663:18:22"},"nodeType":"YulFunctionCall","src":"2663:40:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2653:6:22"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2094:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2105:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2117:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2125:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2133:6:22","type":""}],"src":"2038:671:22"},{"body":{"nodeType":"YulBlock","src":"2888:181:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2905:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2898:6:22"},"nodeType":"YulFunctionCall","src":"2898:21:22"},"nodeType":"YulExpressionStatement","src":"2898:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:22"},"nodeType":"YulFunctionCall","src":"2935:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"2955:2:22","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2928:6:22"},"nodeType":"YulFunctionCall","src":"2928:30:22"},"nodeType":"YulExpressionStatement","src":"2928:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2978:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2989:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2974:3:22"},"nodeType":"YulFunctionCall","src":"2974:18:22"},{"hexValue":"696e76616c696420617267756d656e74202d207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"2994:33:22","type":"","value":"invalid argument - zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2967:6:22"},"nodeType":"YulFunctionCall","src":"2967:61:22"},"nodeType":"YulExpressionStatement","src":"2967:61:22"},{"nodeType":"YulAssignment","src":"3037:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3049:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3060:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3045:3:22"},"nodeType":"YulFunctionCall","src":"3045:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3037:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2865:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2879:4:22","type":""}],"src":"2714:355:22"},{"body":{"nodeType":"YulBlock","src":"3248:170:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3258:6:22"},"nodeType":"YulFunctionCall","src":"3258:21:22"},"nodeType":"YulExpressionStatement","src":"3258:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3299:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3310:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:22"},"nodeType":"YulFunctionCall","src":"3295:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"3315:2:22","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3288:6:22"},"nodeType":"YulFunctionCall","src":"3288:30:22"},"nodeType":"YulExpressionStatement","src":"3288:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3338:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3349:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3334:3:22"},"nodeType":"YulFunctionCall","src":"3334:18:22"},{"hexValue":"6d6f64756c6520616c726561647920626f756e64","kind":"string","nodeType":"YulLiteral","src":"3354:22:22","type":"","value":"module already bound"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3327:6:22"},"nodeType":"YulFunctionCall","src":"3327:50:22"},"nodeType":"YulExpressionStatement","src":"3327:50:22"},{"nodeType":"YulAssignment","src":"3386:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3398:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3394:3:22"},"nodeType":"YulFunctionCall","src":"3394:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3386:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3225:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3239:4:22","type":""}],"src":"3074:344:22"},{"body":{"nodeType":"YulBlock","src":"3597:181:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3614:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3625:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:22"},"nodeType":"YulFunctionCall","src":"3607:21:22"},"nodeType":"YulExpressionStatement","src":"3607:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3659:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3644:3:22"},"nodeType":"YulFunctionCall","src":"3644:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"3664:2:22","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3637:6:22"},"nodeType":"YulFunctionCall","src":"3637:30:22"},"nodeType":"YulExpressionStatement","src":"3637:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3687:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3698:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3683:3:22"},"nodeType":"YulFunctionCall","src":"3683:18:22"},{"hexValue":"63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c6573","kind":"string","nodeType":"YulLiteral","src":"3703:33:22","type":"","value":"cannot add more than 25 modules"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3676:6:22"},"nodeType":"YulFunctionCall","src":"3676:61:22"},"nodeType":"YulExpressionStatement","src":"3676:61:22"},{"nodeType":"YulAssignment","src":"3746:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3758:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3769:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3754:3:22"},"nodeType":"YulFunctionCall","src":"3754:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3746:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3574:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3588:4:22","type":""}],"src":"3423:355:22"},{"body":{"nodeType":"YulBlock","src":"3861:199:22","statements":[{"body":{"nodeType":"YulBlock","src":"3907:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3919:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3909:6:22"},"nodeType":"YulFunctionCall","src":"3909:12:22"},"nodeType":"YulExpressionStatement","src":"3909:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3882:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3891:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3878:3:22"},"nodeType":"YulFunctionCall","src":"3878:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3903:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3874:3:22"},"nodeType":"YulFunctionCall","src":"3874:32:22"},"nodeType":"YulIf","src":"3871:52:22"},{"nodeType":"YulVariableDeclaration","src":"3932:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3951:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3945:5:22"},"nodeType":"YulFunctionCall","src":"3945:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3936:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4014:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4023:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4026:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4016:6:22"},"nodeType":"YulFunctionCall","src":"4016:12:22"},"nodeType":"YulExpressionStatement","src":"4016:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4004:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3997:6:22"},"nodeType":"YulFunctionCall","src":"3997:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3990:6:22"},"nodeType":"YulFunctionCall","src":"3990:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3980:2:22"},"nodeType":"YulFunctionCall","src":"3980:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3973:6:22"},"nodeType":"YulFunctionCall","src":"3973:40:22"},"nodeType":"YulIf","src":"3970:60:22"},{"nodeType":"YulAssignment","src":"4039:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"4049:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4039:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3827:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3838:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3850:6:22","type":""}],"src":"3783:277:22"},{"body":{"nodeType":"YulBlock","src":"4239:242:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4256:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4267:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4249:6:22"},"nodeType":"YulFunctionCall","src":"4249:21:22"},"nodeType":"YulExpressionStatement","src":"4249:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4290:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4301:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:22"},"nodeType":"YulFunctionCall","src":"4286:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4306:2:22","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4279:6:22"},"nodeType":"YulFunctionCall","src":"4279:30:22"},"nodeType":"YulExpressionStatement","src":"4279:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4329:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4340:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4325:3:22"},"nodeType":"YulFunctionCall","src":"4325:18:22"},{"hexValue":"636f6d706c69616e6365206973206e6f74207375697461626c6520666f722062","kind":"string","nodeType":"YulLiteral","src":"4345:34:22","type":"","value":"compliance is not suitable for b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4318:6:22"},"nodeType":"YulFunctionCall","src":"4318:62:22"},"nodeType":"YulExpressionStatement","src":"4318:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4400:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4411:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4396:3:22"},"nodeType":"YulFunctionCall","src":"4396:18:22"},{"hexValue":"696e64696e6720746f20746865206d6f64756c65","kind":"string","nodeType":"YulLiteral","src":"4416:22:22","type":"","value":"inding to the module"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4389:6:22"},"nodeType":"YulFunctionCall","src":"4389:50:22"},"nodeType":"YulExpressionStatement","src":"4389:50:22"},{"nodeType":"YulAssignment","src":"4448:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4460:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4471:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4456:3:22"},"nodeType":"YulFunctionCall","src":"4456:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4448:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a6027c959cf3cd0795c567867a9ffdb1a4df4845683f4a89a616ca508d8819a4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4216:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4230:4:22","type":""}],"src":"4065:416:22"},{"body":{"nodeType":"YulBlock","src":"4660:178:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4677:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4688:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4670:6:22"},"nodeType":"YulFunctionCall","src":"4670:21:22"},"nodeType":"YulExpressionStatement","src":"4670:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:22"},"nodeType":"YulFunctionCall","src":"4707:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4727:2:22","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4700:6:22"},"nodeType":"YulFunctionCall","src":"4700:30:22"},"nodeType":"YulExpressionStatement","src":"4700:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:22"},"nodeType":"YulFunctionCall","src":"4746:18:22"},{"hexValue":"6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c","kind":"string","nodeType":"YulLiteral","src":"4766:30:22","type":"","value":"only owner or token can call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4739:6:22"},"nodeType":"YulFunctionCall","src":"4739:58:22"},"nodeType":"YulExpressionStatement","src":"4739:58:22"},{"nodeType":"YulAssignment","src":"4806:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4818:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4829:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4814:3:22"},"nodeType":"YulFunctionCall","src":"4814:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4806:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4637:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4651:4:22","type":""}],"src":"4486:352:22"},{"body":{"nodeType":"YulBlock","src":"5017:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5034:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5045:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5027:6:22"},"nodeType":"YulFunctionCall","src":"5027:21:22"},"nodeType":"YulExpressionStatement","src":"5027:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5079:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5064:3:22"},"nodeType":"YulFunctionCall","src":"5064:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"5084:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5057:6:22"},"nodeType":"YulFunctionCall","src":"5057:30:22"},"nodeType":"YulExpressionStatement","src":"5057:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5107:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5118:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5103:3:22"},"nodeType":"YulFunctionCall","src":"5103:18:22"},{"hexValue":"5468697320746f6b656e206973206e6f7420626f756e64","kind":"string","nodeType":"YulLiteral","src":"5123:25:22","type":"","value":"This token is not bound"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5096:6:22"},"nodeType":"YulFunctionCall","src":"5096:53:22"},"nodeType":"YulExpressionStatement","src":"5096:53:22"},{"nodeType":"YulAssignment","src":"5158:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5170:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5181:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5166:3:22"},"nodeType":"YulFunctionCall","src":"5166:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5158:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4994:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5008:4:22","type":""}],"src":"4843:347:22"},{"body":{"nodeType":"YulBlock","src":"5369:298:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5379:6:22"},"nodeType":"YulFunctionCall","src":"5379:21:22"},"nodeType":"YulExpressionStatement","src":"5379:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5420:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5431:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5416:3:22"},"nodeType":"YulFunctionCall","src":"5416:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:22","type":"","value":"68"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5409:6:22"},"nodeType":"YulFunctionCall","src":"5409:30:22"},"nodeType":"YulExpressionStatement","src":"5409:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5470:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:22"},"nodeType":"YulFunctionCall","src":"5455:18:22"},{"hexValue":"6572726f72203a20746869732061646472657373206973206e6f74206120746f","kind":"string","nodeType":"YulLiteral","src":"5475:34:22","type":"","value":"error : this address is not a to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5448:6:22"},"nodeType":"YulFunctionCall","src":"5448:62:22"},"nodeType":"YulExpressionStatement","src":"5448:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5530:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5541:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5526:3:22"},"nodeType":"YulFunctionCall","src":"5526:18:22"},{"hexValue":"6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e74","kind":"string","nodeType":"YulLiteral","src":"5546:34:22","type":"","value":"ken bound to the compliance cont"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5519:6:22"},"nodeType":"YulFunctionCall","src":"5519:62:22"},"nodeType":"YulExpressionStatement","src":"5519:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5601:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5612:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5597:3:22"},"nodeType":"YulFunctionCall","src":"5597:19:22"},{"hexValue":"72616374","kind":"string","nodeType":"YulLiteral","src":"5618:6:22","type":"","value":"ract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5590:6:22"},"nodeType":"YulFunctionCall","src":"5590:35:22"},"nodeType":"YulExpressionStatement","src":"5590:35:22"},{"nodeType":"YulAssignment","src":"5634:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5646:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5657:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5642:3:22"},"nodeType":"YulFunctionCall","src":"5642:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5634:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5346:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5360:4:22","type":""}],"src":"5195:472:22"},{"body":{"nodeType":"YulBlock","src":"5846:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5863:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5874:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5856:6:22"},"nodeType":"YulFunctionCall","src":"5856:21:22"},"nodeType":"YulExpressionStatement","src":"5856:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5897:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5908:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5893:3:22"},"nodeType":"YulFunctionCall","src":"5893:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"5913:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5886:6:22"},"nodeType":"YulFunctionCall","src":"5886:30:22"},"nodeType":"YulExpressionStatement","src":"5886:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5936:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5947:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5932:3:22"},"nodeType":"YulFunctionCall","src":"5932:18:22"},{"hexValue":"696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74","kind":"string","nodeType":"YulLiteral","src":"5952:34:22","type":"","value":"invalid argument - no value mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:22"},"nodeType":"YulFunctionCall","src":"5925:62:22"},"nodeType":"YulExpressionStatement","src":"5925:62:22"},{"nodeType":"YulAssignment","src":"5996:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6008:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6019:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:22"},"nodeType":"YulFunctionCall","src":"6004:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5996:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5823:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5837:4:22","type":""}],"src":"5672:356:22"},{"body":{"nodeType":"YulBlock","src":"6065:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6082:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6089:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6094:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6085:3:22"},"nodeType":"YulFunctionCall","src":"6085:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6075:6:22"},"nodeType":"YulFunctionCall","src":"6075:31:22"},"nodeType":"YulExpressionStatement","src":"6075:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6122:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6125:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6115:6:22"},"nodeType":"YulFunctionCall","src":"6115:15:22"},"nodeType":"YulExpressionStatement","src":"6115:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6146:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6149:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6139:6:22"},"nodeType":"YulFunctionCall","src":"6139:15:22"},"nodeType":"YulExpressionStatement","src":"6139:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6033:127:22"},{"body":{"nodeType":"YulBlock","src":"6294:145:22","statements":[{"nodeType":"YulAssignment","src":"6304:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6316:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6327:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6312:3:22"},"nodeType":"YulFunctionCall","src":"6312:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6304:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6346:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6361:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6377:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6382:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6373:3:22"},"nodeType":"YulFunctionCall","src":"6373:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"6386:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6369:3:22"},"nodeType":"YulFunctionCall","src":"6369:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6357:3:22"},"nodeType":"YulFunctionCall","src":"6357:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6339:6:22"},"nodeType":"YulFunctionCall","src":"6339:51:22"},"nodeType":"YulExpressionStatement","src":"6339:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6421:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6406:3:22"},"nodeType":"YulFunctionCall","src":"6406:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"6426:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6399:6:22"},"nodeType":"YulFunctionCall","src":"6399:34:22"},"nodeType":"YulExpressionStatement","src":"6399:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6255:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6266:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6274:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6285:4:22","type":""}],"src":"6165:274:22"},{"body":{"nodeType":"YulBlock","src":"6476:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6493:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6500:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6505:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6496:3:22"},"nodeType":"YulFunctionCall","src":"6496:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6486:6:22"},"nodeType":"YulFunctionCall","src":"6486:31:22"},"nodeType":"YulExpressionStatement","src":"6486:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6533:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6536:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6526:6:22"},"nodeType":"YulFunctionCall","src":"6526:15:22"},"nodeType":"YulExpressionStatement","src":"6526:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6557:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6560:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6550:6:22"},"nodeType":"YulFunctionCall","src":"6550:15:22"},"nodeType":"YulExpressionStatement","src":"6550:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6444:127:22"},{"body":{"nodeType":"YulBlock","src":"6623:88:22","statements":[{"body":{"nodeType":"YulBlock","src":"6654:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6656:16:22"},"nodeType":"YulFunctionCall","src":"6656:18:22"},"nodeType":"YulExpressionStatement","src":"6656:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6639:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6650:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6646:3:22"},"nodeType":"YulFunctionCall","src":"6646:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6636:2:22"},"nodeType":"YulFunctionCall","src":"6636:17:22"},"nodeType":"YulIf","src":"6633:43:22"},{"nodeType":"YulAssignment","src":"6685:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6696:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"6703:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6692:3:22"},"nodeType":"YulFunctionCall","src":"6692:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6685:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6605:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6615:3:22","type":""}],"src":"6576:135:22"},{"body":{"nodeType":"YulBlock","src":"6890:226:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6907:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6900:6:22"},"nodeType":"YulFunctionCall","src":"6900:21:22"},"nodeType":"YulExpressionStatement","src":"6900:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6941:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6952:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6937:3:22"},"nodeType":"YulFunctionCall","src":"6937:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:22","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6930:6:22"},"nodeType":"YulFunctionCall","src":"6930:30:22"},"nodeType":"YulExpressionStatement","src":"6930:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6980:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6991:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6976:3:22"},"nodeType":"YulFunctionCall","src":"6976:18:22"},{"hexValue":"696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e","kind":"string","nodeType":"YulLiteral","src":"6996:34:22","type":"","value":"invalid argument - no value tran"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6969:6:22"},"nodeType":"YulFunctionCall","src":"6969:62:22"},"nodeType":"YulExpressionStatement","src":"6969:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7051:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7062:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7047:3:22"},"nodeType":"YulFunctionCall","src":"7047:18:22"},{"hexValue":"73666572","kind":"string","nodeType":"YulLiteral","src":"7067:6:22","type":"","value":"sfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7040:6:22"},"nodeType":"YulFunctionCall","src":"7040:34:22"},"nodeType":"YulExpressionStatement","src":"7040:34:22"},{"nodeType":"YulAssignment","src":"7083:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7095:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7106:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7091:3:22"},"nodeType":"YulFunctionCall","src":"7091:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7083:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6867:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6881:4:22","type":""}],"src":"6716:400:22"},{"body":{"nodeType":"YulBlock","src":"7278:218:22","statements":[{"nodeType":"YulAssignment","src":"7288:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7300:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7311:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:22"},"nodeType":"YulFunctionCall","src":"7296:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7288:4:22"}]},{"nodeType":"YulVariableDeclaration","src":"7323:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7341:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7346:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7337:3:22"},"nodeType":"YulFunctionCall","src":"7337:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"7350:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7333:3:22"},"nodeType":"YulFunctionCall","src":"7333:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7327:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7368:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7383:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"7391:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7379:3:22"},"nodeType":"YulFunctionCall","src":"7379:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7361:6:22"},"nodeType":"YulFunctionCall","src":"7361:34:22"},"nodeType":"YulExpressionStatement","src":"7361:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7415:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7426:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7411:3:22"},"nodeType":"YulFunctionCall","src":"7411:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7435:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"7443:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7431:3:22"},"nodeType":"YulFunctionCall","src":"7431:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7404:6:22"},"nodeType":"YulFunctionCall","src":"7404:43:22"},"nodeType":"YulExpressionStatement","src":"7404:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7467:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7478:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7463:3:22"},"nodeType":"YulFunctionCall","src":"7463:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"7483:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7456:6:22"},"nodeType":"YulFunctionCall","src":"7456:34:22"},"nodeType":"YulExpressionStatement","src":"7456:34:22"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7231:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7242:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7250:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7258:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7269:4:22","type":""}],"src":"7121:375:22"},{"body":{"nodeType":"YulBlock","src":"7675:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7692:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7703:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7685:6:22"},"nodeType":"YulFunctionCall","src":"7685:21:22"},"nodeType":"YulExpressionStatement","src":"7685:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7726:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7722:3:22"},"nodeType":"YulFunctionCall","src":"7722:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7742:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7715:6:22"},"nodeType":"YulFunctionCall","src":"7715:30:22"},"nodeType":"YulExpressionStatement","src":"7715:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7776:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:22"},"nodeType":"YulFunctionCall","src":"7761:18:22"},{"hexValue":"696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e","kind":"string","nodeType":"YulLiteral","src":"7781:34:22","type":"","value":"invalid argument - no value burn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7754:6:22"},"nodeType":"YulFunctionCall","src":"7754:62:22"},"nodeType":"YulExpressionStatement","src":"7754:62:22"},{"nodeType":"YulAssignment","src":"7825:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7837:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7848:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:22"},"nodeType":"YulFunctionCall","src":"7833:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7825:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7652:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7666:4:22","type":""}],"src":"7501:356:22"},{"body":{"nodeType":"YulBlock","src":"8036:166:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8053:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8064:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8046:6:22"},"nodeType":"YulFunctionCall","src":"8046:21:22"},"nodeType":"YulExpressionStatement","src":"8046:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8087:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8098:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8083:3:22"},"nodeType":"YulFunctionCall","src":"8083:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8103:2:22","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8076:6:22"},"nodeType":"YulFunctionCall","src":"8076:30:22"},"nodeType":"YulExpressionStatement","src":"8076:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8126:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8137:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8122:3:22"},"nodeType":"YulFunctionCall","src":"8122:18:22"},{"hexValue":"6d6f64756c65206e6f7420626f756e64","kind":"string","nodeType":"YulLiteral","src":"8142:18:22","type":"","value":"module not bound"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8115:6:22"},"nodeType":"YulFunctionCall","src":"8115:46:22"},"nodeType":"YulExpressionStatement","src":"8115:46:22"},{"nodeType":"YulAssignment","src":"8170:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8182:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8193:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8178:3:22"},"nodeType":"YulFunctionCall","src":"8178:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8170:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8013:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8027:4:22","type":""}],"src":"7862:340:22"},{"body":{"nodeType":"YulBlock","src":"8256:79:22","statements":[{"nodeType":"YulAssignment","src":"8266:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8278:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"8281:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8274:3:22"},"nodeType":"YulFunctionCall","src":"8274:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8266:4:22"}]},{"body":{"nodeType":"YulBlock","src":"8307:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8309:16:22"},"nodeType":"YulFunctionCall","src":"8309:18:22"},"nodeType":"YulExpressionStatement","src":"8309:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8298:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"8304:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8295:2:22"},"nodeType":"YulFunctionCall","src":"8295:11:22"},"nodeType":"YulIf","src":"8292:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8238:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"8241:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8247:4:22","type":""}],"src":"8207:128:22"},{"body":{"nodeType":"YulBlock","src":"8372:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8389:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8396:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8401:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8392:3:22"},"nodeType":"YulFunctionCall","src":"8392:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8382:6:22"},"nodeType":"YulFunctionCall","src":"8382:31:22"},"nodeType":"YulExpressionStatement","src":"8382:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8429:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8432:4:22","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8422:6:22"},"nodeType":"YulFunctionCall","src":"8422:15:22"},"nodeType":"YulExpressionStatement","src":"8422:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8453:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8456:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8446:6:22"},"nodeType":"YulFunctionCall","src":"8446:15:22"},"nodeType":"YulExpressionStatement","src":"8446:15:22"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"8340:127:22"},{"body":{"nodeType":"YulBlock","src":"8646:236:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8663:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8674:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8656:6:22"},"nodeType":"YulFunctionCall","src":"8656:21:22"},"nodeType":"YulExpressionStatement","src":"8656:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8697:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8708:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8693:3:22"},"nodeType":"YulFunctionCall","src":"8693:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8713:2:22","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8686:6:22"},"nodeType":"YulFunctionCall","src":"8686:30:22"},"nodeType":"YulExpressionStatement","src":"8686:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8736:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8747:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8732:3:22"},"nodeType":"YulFunctionCall","src":"8732:18:22"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"8752:34:22","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8725:6:22"},"nodeType":"YulFunctionCall","src":"8725:62:22"},"nodeType":"YulExpressionStatement","src":"8725:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8807:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8818:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8803:3:22"},"nodeType":"YulFunctionCall","src":"8803:18:22"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"8823:16:22","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8796:6:22"},"nodeType":"YulFunctionCall","src":"8796:44:22"},"nodeType":"YulExpressionStatement","src":"8796:44:22"},{"nodeType":"YulAssignment","src":"8849:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8872:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:22"},"nodeType":"YulFunctionCall","src":"8857:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8849:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8623:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8637:4:22","type":""}],"src":"8472:410:22"},{"body":{"nodeType":"YulBlock","src":"8994:87:22","statements":[{"nodeType":"YulAssignment","src":"9004:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9016:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9027:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9012:3:22"},"nodeType":"YulFunctionCall","src":"9012:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9004:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9046:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9061:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9069:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9057:3:22"},"nodeType":"YulFunctionCall","src":"9057:17:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9039:6:22"},"nodeType":"YulFunctionCall","src":"9039:36:22"},"nodeType":"YulExpressionStatement","src":"9039:36:22"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8963:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8974:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8985:4:22","type":""}],"src":"8887:194:22"},{"body":{"nodeType":"YulBlock","src":"9271:271:22","statements":[{"nodeType":"YulAssignment","src":"9281:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9293:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9304:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9289:3:22"},"nodeType":"YulFunctionCall","src":"9289:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9281:4:22"}]},{"nodeType":"YulVariableDeclaration","src":"9317:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9335:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9340:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9331:3:22"},"nodeType":"YulFunctionCall","src":"9331:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"9344:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9327:3:22"},"nodeType":"YulFunctionCall","src":"9327:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9321:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9362:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9377:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9385:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9373:3:22"},"nodeType":"YulFunctionCall","src":"9373:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9355:6:22"},"nodeType":"YulFunctionCall","src":"9355:34:22"},"nodeType":"YulExpressionStatement","src":"9355:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9409:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9420:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:22"},"nodeType":"YulFunctionCall","src":"9405:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9429:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9437:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9425:3:22"},"nodeType":"YulFunctionCall","src":"9425:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9398:6:22"},"nodeType":"YulFunctionCall","src":"9398:43:22"},"nodeType":"YulExpressionStatement","src":"9398:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9461:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9472:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9457:3:22"},"nodeType":"YulFunctionCall","src":"9457:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"9477:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9450:6:22"},"nodeType":"YulFunctionCall","src":"9450:34:22"},"nodeType":"YulExpressionStatement","src":"9450:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9515:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:22"},"nodeType":"YulFunctionCall","src":"9500:18:22"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9524:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9532:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9520:3:22"},"nodeType":"YulFunctionCall","src":"9520:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9493:6:22"},"nodeType":"YulFunctionCall","src":"9493:43:22"},"nodeType":"YulExpressionStatement","src":"9493:43:22"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9216:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9227:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9235:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9243:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9251:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9262:4:22","type":""}],"src":"9086:456:22"},{"body":{"nodeType":"YulBlock","src":"9721:175:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9738:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9749:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9731:6:22"},"nodeType":"YulFunctionCall","src":"9731:21:22"},"nodeType":"YulExpressionStatement","src":"9731:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9772:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9783:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9768:3:22"},"nodeType":"YulFunctionCall","src":"9768:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9788:2:22","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9761:6:22"},"nodeType":"YulFunctionCall","src":"9761:30:22"},"nodeType":"YulExpressionStatement","src":"9761:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9811:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9822:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9807:3:22"},"nodeType":"YulFunctionCall","src":"9807:18:22"},{"hexValue":"63616c6c206f6e6c79206f6e20626f756e64206d6f64756c65","kind":"string","nodeType":"YulLiteral","src":"9827:27:22","type":"","value":"call only on bound module"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9800:6:22"},"nodeType":"YulFunctionCall","src":"9800:55:22"},"nodeType":"YulExpressionStatement","src":"9800:55:22"},{"nodeType":"YulAssignment","src":"9864:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9876:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9887:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9872:3:22"},"nodeType":"YulFunctionCall","src":"9872:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9864:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9698:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9712:4:22","type":""}],"src":"9547:349:22"},{"body":{"nodeType":"YulBlock","src":"10000:103:22","statements":[{"nodeType":"YulAssignment","src":"10010:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10022:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10033:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10018:3:22"},"nodeType":"YulFunctionCall","src":"10018:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10010:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10052:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10067:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10079:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10084:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10075:3:22"},"nodeType":"YulFunctionCall","src":"10075:20:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10063:3:22"},"nodeType":"YulFunctionCall","src":"10063:33:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10045:6:22"},"nodeType":"YulFunctionCall","src":"10045:52:22"},"nodeType":"YulExpressionStatement","src":"10045:52:22"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9969:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9980:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9991:4:22","type":""}],"src":"9901:202:22"},{"body":{"nodeType":"YulBlock","src":"10282:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10299:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10310:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10292:6:22"},"nodeType":"YulFunctionCall","src":"10292:21:22"},"nodeType":"YulExpressionStatement","src":"10292:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10333:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10329:3:22"},"nodeType":"YulFunctionCall","src":"10329:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10349:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10322:6:22"},"nodeType":"YulFunctionCall","src":"10322:30:22"},"nodeType":"YulExpressionStatement","src":"10322:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10372:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10383:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10368:3:22"},"nodeType":"YulFunctionCall","src":"10368:18:22"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"10388:34:22","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10361:6:22"},"nodeType":"YulFunctionCall","src":"10361:62:22"},"nodeType":"YulExpressionStatement","src":"10361:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10443:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10454:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10439:3:22"},"nodeType":"YulFunctionCall","src":"10439:18:22"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"10459:8:22","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10432:6:22"},"nodeType":"YulFunctionCall","src":"10432:36:22"},"nodeType":"YulExpressionStatement","src":"10432:36:22"},{"nodeType":"YulAssignment","src":"10477:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10489:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10500:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10485:3:22"},"nodeType":"YulFunctionCall","src":"10485:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10477:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10259:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10273:4:22","type":""}],"src":"10108:402:22"},{"body":{"nodeType":"YulBlock","src":"10689:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10717:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10699:6:22"},"nodeType":"YulFunctionCall","src":"10699:21:22"},"nodeType":"YulExpressionStatement","src":"10699:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10740:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10751:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10736:3:22"},"nodeType":"YulFunctionCall","src":"10736:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10756:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10729:6:22"},"nodeType":"YulFunctionCall","src":"10729:30:22"},"nodeType":"YulExpressionStatement","src":"10729:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10779:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10790:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10775:3:22"},"nodeType":"YulFunctionCall","src":"10775:18:22"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10795:34:22","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10768:6:22"},"nodeType":"YulFunctionCall","src":"10768:62:22"},"nodeType":"YulExpressionStatement","src":"10768:62:22"},{"nodeType":"YulAssignment","src":"10839:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10851:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10862:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10847:3:22"},"nodeType":"YulFunctionCall","src":"10847:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10839:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10666:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10680:4:22","type":""}],"src":"10515:356:22"},{"body":{"nodeType":"YulBlock","src":"11050:233:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11067:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11078:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11060:6:22"},"nodeType":"YulFunctionCall","src":"11060:21:22"},"nodeType":"YulExpressionStatement","src":"11060:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11101:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11112:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11097:3:22"},"nodeType":"YulFunctionCall","src":"11097:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11117:2:22","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11090:6:22"},"nodeType":"YulFunctionCall","src":"11090:30:22"},"nodeType":"YulExpressionStatement","src":"11090:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11140:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11151:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11136:3:22"},"nodeType":"YulFunctionCall","src":"11136:18:22"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"11156:34:22","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11129:6:22"},"nodeType":"YulFunctionCall","src":"11129:62:22"},"nodeType":"YulExpressionStatement","src":"11129:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11211:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11222:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11207:3:22"},"nodeType":"YulFunctionCall","src":"11207:18:22"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"11227:13:22","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11200:6:22"},"nodeType":"YulFunctionCall","src":"11200:41:22"},"nodeType":"YulExpressionStatement","src":"11200:41:22"},{"nodeType":"YulAssignment","src":"11250:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11262:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11273:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11258:3:22"},"nodeType":"YulFunctionCall","src":"11258:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11250:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11027:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11041:4:22","type":""}],"src":"10876:407:22"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := abi_decode_address(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"module already bound\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"cannot add more than 25 modules\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a6027c959cf3cd0795c567867a9ffdb1a4df4845683f4a89a616ca508d8819a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"compliance is not suitable for b\")\n        mstore(add(headStart, 96), \"inding to the module\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"only owner or token can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"This token is not bound\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"error : this address is not a to\")\n        mstore(add(headStart, 96), \"ken bound to the compliance cont\")\n        mstore(add(headStart, 128), \"ract\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"invalid argument - no value mint\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"invalid argument - no value tran\")\n        mstore(add(headStart, 96), \"sfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"invalid argument - no value burn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"module not bound\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"call only on bound module\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e1c7392a11610066578063e1c7392a14610220578063e46638e614610228578063efb22d331461023b578063f2fde38b1461024e57600080fd5b80638da5cb5b146101ab578063a0632461146101bc578063a446d49f146101cf578063b2494df31461020b57600080fd5b80636a3edf28116100d35780636a3edf2814610153578063715018a61461017d5780638baf29b4146101855780638d2ea7721461019857600080fd5b80631ed86f19146101055780633ff5aa021461011a57806340db3b501461012d5780635f8dead314610140575b600080fd5b6101186101133660046112f2565b610261565b005b6101186101283660046112f2565b610570565b61011861013b3660046112f2565b61067b565b61011861014e36600461130d565b6107c3565b6065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61011861090c565b610118610193366004611337565b610920565b6101186101a636600461130d565b610a94565b6033546001600160a01b0316610160565b6101186101ca3660046112f2565b610bd7565b6101fb6101dd3660046112f2565b6001600160a01b031660009081526067602052604090205460ff1690565b6040519015158152602001610174565b610213610e0f565b6040516101749190611373565b610118610e71565b6101fb610236366004611337565b610f7e565b6101186102493660046113c0565b61105b565b61011861025c3660046112f2565b611141565b6102696111b7565b6001600160a01b0381166102985760405162461bcd60e51b815260040161028f90611441565b60405180910390fd5b6001600160a01b03811660009081526067602052604090205460ff16156102f85760405162461bcd60e51b81526020600482015260146024820152731b5bd91d5b1948185b1c9958591e48189bdd5b9960621b604482015260640161028f565b6066546018101561034b5760405162461bcd60e51b815260206004820152601f60248201527f63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300604482015260640161028f565b6000819050806001600160a01b031663e6f5e8076040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190611478565b6104875760405163bcc2105360e01b81523060048201526001600160a01b0382169063bcc2105390602401602060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190611478565b6104875760405162461bcd60e51b815260206004820152603460248201527f636f6d706c69616e6365206973206e6f74207375697461626c6520666f722062604482015273696e64696e6720746f20746865206d6f64756c6560601b606482015260840161028f565b6040516312a4c95160e21b81523060048201526001600160a01b03821690634a93254490602401600060405180830381600087803b1580156104c857600080fd5b505af11580156104dc573d6000803e3d6000fd5b50506066805460018082019092557f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b0319166001600160a01b038716908117909155600081815260676020526040808220805460ff191690941790935591519093507fead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a9250a25050565b336105836033546001600160a01b031690565b6001600160a01b031614806105b457506065546001600160a01b03161580156105b45750336001600160a01b038216145b6106005760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6001600160a01b0381166106265760405162461bcd60e51b815260040161028f90611441565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b906020015b60405180910390a150565b3361068e6033546001600160a01b031690565b6001600160a01b031614806106ab5750336001600160a01b038216145b6106f75760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6065546001600160a01b038281169116146107545760405162461bcd60e51b815260206004820152601760248201527f5468697320746f6b656e206973206e6f7420626f756e64000000000000000000604482015260640161028f565b6001600160a01b03811661077a5760405162461bcd60e51b815260040161028f90611441565b606580546001600160a01b03191690556040516001600160a01b03821681527f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a90602001610670565b6065546001600160a01b031633146107ed5760405162461bcd60e51b815260040161028f9061149a565b6001600160a01b0382166108135760405162461bcd60e51b815260040161028f90611441565b600081116108635760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74604482015260640161028f565b60665460005b81811015610906576066818154811061088457610884611504565b60009182526020909120015460405163f104a8c960e01b81526001600160a01b038681166004830152602482018690529091169063f104a8c990604401600060405180830381600087803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b5050505080806108fe90611530565b915050610869565b50505050565b6109146111b7565b61091e6000611211565b565b6065546001600160a01b0316331461094a5760405162461bcd60e51b815260040161028f9061149a565b6001600160a01b0383161580159061096a57506001600160a01b03821615155b6109865760405162461bcd60e51b815260040161028f90611441565b600081116109e25760405162461bcd60e51b8152602060048201526024808201527f696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e60448201526339b332b960e11b606482015260840161028f565b60665460005b81811015610a8d5760668181548110610a0357610a03611504565b600091825260209091200154604051630b2df87b60e21b81526001600160a01b03878116600483015286811660248301526044820186905290911690632cb7e1ec90606401600060405180830381600087803b158015610a6257600080fd5b505af1158015610a76573d6000803e3d6000fd5b505050508080610a8590611530565b9150506109e8565b5050505050565b6065546001600160a01b03163314610abe5760405162461bcd60e51b815260040161028f9061149a565b6001600160a01b038216610ae45760405162461bcd60e51b815260040161028f90611441565b60008111610b345760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e604482015260640161028f565b60665460005b818110156109065760668181548110610b5557610b55611504565b600091825260209091200154604051631b9248d160e11b81526001600160a01b038681166004830152602482018690529091169063372491a290604401600060405180830381600087803b158015610bac57600080fd5b505af1158015610bc0573d6000803e3d6000fd5b505050508080610bcf90611530565b915050610b3a565b610bdf6111b7565b6001600160a01b038116610c055760405162461bcd60e51b815260040161028f90611441565b6001600160a01b03811660009081526067602052604090205460ff16610c605760405162461bcd60e51b815260206004820152601060248201526f1b5bd91d5b19481b9bdd08189bdd5b9960821b604482015260640161028f565b60665460005b81811015610e0a57826001600160a01b031660668281548110610c8b57610c8b611504565b6000918252602090912001546001600160a01b031603610df857604051630694a5fb60e01b81523060048201526001600160a01b03841690630694a5fb90602401600060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b505050506066600183610d0d9190611549565b81548110610d1d57610d1d611504565b600091825260209091200154606680546001600160a01b039092169183908110610d4957610d49611504565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506066805480610d8857610d8861155c565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03851680835260679091526040808320805460ff191690555190917f0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b891a2505050565b80610e0281611530565b915050610c66565b505050565b60606066805480602002602001604051908101604052809291908181526020018280548015610e6757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e49575b5050505050905090565b600054610100900460ff1615808015610e915750600054600160ff909116105b80610eab5750303b158015610eab575060005460ff166001145b610f0e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028f565b6000805460ff191660011790558015610f31576000805461ff0019166101001790555b610f39611263565b8015610f7b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610670565b50565b606654600090815b8181101561104d5760668181548110610fa157610fa1611504565b600091825260209091200154604051624edf3960e21b81526001600160a01b0388811660048301528781166024830152604482018790523060648301529091169063013b7ce490608401602060405180830381865afa158015611008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102c9190611478565b61103b57600092505050611054565b8061104581611530565b915050610f86565b5060019150505b9392505050565b6110636111b7565b6001600160a01b03811660009081526067602052604090205460ff166110cb5760405162461bcd60e51b815260206004820152601960248201527f63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000604482015260640161028f565b6040518284823760008084836000865af16110ea573d6000803e3d6000fd5b50806001600160a01b03167f20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef8916111208585611292565b6040516001600160e01b0319909116815260200160405180910390a2505050565b6111496111b7565b6001600160a01b0381166111ae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028f565b610f7b81611211565b6033546001600160a01b0316331461091e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661128a5760405162461bcd60e51b815260040161028f90611572565b61091e6112a6565b6000600482106112a0575081355b92915050565b600054610100900460ff166112cd5760405162461bcd60e51b815260040161028f90611572565b61091e33611211565b80356001600160a01b03811681146112ed57600080fd5b919050565b60006020828403121561130457600080fd5b611054826112d6565b6000806040838503121561132057600080fd5b611329836112d6565b946020939093013593505050565b60008060006060848603121561134c57600080fd5b611355846112d6565b9250611363602085016112d6565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156113b45783516001600160a01b03168352928401929184019160010161138f565b50909695505050505050565b6000806000604084860312156113d557600080fd5b833567ffffffffffffffff808211156113ed57600080fd5b818601915086601f83011261140157600080fd5b81358181111561141057600080fd5b87602082850101111561142257600080fd5b60209283019550935061143891860190506112d6565b90509250925092565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60006020828403121561148a57600080fd5b8151801515811461105457600080fd5b60208082526044908201527f6572726f72203a20746869732061646472657373206973206e6f74206120746f60408201527f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e746060820152631c9858dd60e21b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115425761154261151a565b5060010190565b818103818111156112a0576112a061151a565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220af07cc50cfe3f6bb6afd1a9a92bf5b4d514e96369891e0b43b4305f3ee8abcc064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE1C7392A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xEFB22D33 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xA446D49F EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A3EDF28 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6A3EDF28 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1ED86F19 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x130D JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x118 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x130D JUMP JUMPDEST PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x174 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x118 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B5BD91D5B1948185B1C9958591E48189BDD5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x18 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE6F5E807 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBCC21053 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xBCC21053 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6D706C69616E6365206973206E6F74207375697461626C6520666F722062 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x696E64696E6720746F20746865206D6F64756C65 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12A4C951 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4A932544 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP4 POP PUSH32 0xEAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A SWAP3 POP LOG2 POP POP JUMP JUMPDEST CALLER PUSH2 0x583 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x5B4 JUMPI POP PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x68E PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6AB JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A SWAP1 PUSH1 0x20 ADD PUSH2 0x670 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH2 0x884 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xF104A8C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF104A8C9 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x8FE SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x869 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x914 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x91E PUSH1 0x0 PUSH2 0x1211 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x96A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x39B332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH2 0xA03 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xB2DF87B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x2CB7E1EC SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA85 SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB55 JUMPI PUSH2 0xB55 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1B9248D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x372491A2 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xBCF SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB3A JUMP JUMPDEST PUSH2 0xBDF PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B5BD91D5B19481B9BDD08189BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE0A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC8B JUMPI PUSH2 0xC8B PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x694A5FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x694A5FB SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 PUSH1 0x1 DUP4 PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x1549 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD49 JUMPI PUSH2 0xD49 PUSH2 0x1504 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x66 DUP1 SLOAD DUP1 PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 PUSH32 0xA1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8 SWAP2 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xE02 DUP2 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE49 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE91 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xEAB JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF31 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xF39 PUSH2 0x1263 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH2 0x670 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x104D JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFA1 JUMPI PUSH2 0xFA1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x4EDF39 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x13B7CE4 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1008 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x103B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1054 JUMP JUMPDEST DUP1 PUSH2 0x1045 DUP2 PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF86 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1063 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 PUSH1 0x0 DUP7 GAS CALL PUSH2 0x10EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891 PUSH2 0x1120 DUP6 DUP6 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1149 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH2 0xF7B DUP2 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x128A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x91E PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 LT PUSH2 0x12A0 JUMPI POP DUP2 CALLDATALOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x91E CALLER PUSH2 0x1211 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1054 DUP3 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1329 DUP4 PUSH2 0x12D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1355 DUP5 PUSH2 0x12D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1363 PUSH1 0x20 DUP6 ADD PUSH2 0x12D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x138F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP PUSH2 0x1438 SWAP2 DUP7 ADD SWAP1 POP PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x44 SWAP1 DUP3 ADD MSTORE PUSH32 0x6572726F72203A20746869732061646472657373206973206E6F74206120746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1542 JUMPI PUSH2 0x1542 PUSH2 0x151A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x12A0 PUSH2 0x151A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SMOD 0xCC POP 0xCF 0xE3 0xF6 0xBB PUSH11 0xFD1A9A92BF5B4D514E9636 SWAP9 SWAP2 0xE0 0xB4 EXTCODESIZE NUMBER SDIV RETURN 0xEE DUP11 0xBC 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"4067:7243:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5409:648;;;;;;:::i;:::-;;:::i;:::-;;4579:324;;;;;;:::i;:::-;;:::i;4976:362::-;;;;;;:::i;:::-;;:::i;7339:380::-;;;;;;:::i;:::-;;:::i;9724:101::-;9807:11;;-1:-1:-1;;;;;9807:11:11;9724:101;;;-1:-1:-1;;;;;806:32:22;;;788:51;;776:2;761:18;9724:101:11;;;;;;;;2064::18;;;:::i;6833:437:11:-;;;;;;:::i;:::-;;:::i;7790:388::-;;;;;;:::i;:::-;;:::i;1441:85:18:-;1513:6;;-1:-1:-1;;;;;1513:6:18;1441:85;;6131:629:11;;;;;;:::i;:::-;;:::i;9350:123::-;;;;;;:::i;:::-;-1:-1:-1;;;;;9445:21:11;9422:4;9445:21;;;:12;:21;;;;;;;;;9350:123;;;;1348:14:22;;1341:22;1323:41;;1311:2;1296:18;9350:123:11;1183:187:22;9545:104:11;;;:::i;:::-;;;;;;;:::i;4438:70::-;;;:::i;9898:362::-;;;;;;:::i;:::-;;:::i;8258:1017::-;;;;;;:::i;:::-;;:::i;2314:198:18:-;;;;;;:::i;:::-;;:::i;5409:648:11:-;1334:13:18;:11;:13::i;:::-;-1:-1:-1;;;;;5491:21:11;::::1;5483:65;;;;-1:-1:-1::0;;;5483:65:11::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;5567:21:11;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;5566:22;5558:55;;;::::0;-1:-1:-1;;;5558:55:11;;3276:2:22;5558:55:11::1;::::0;::::1;3258:21:22::0;3315:2;3295:18;;;3288:30;-1:-1:-1;;;3334:18:22;;;3327:50;3394:18;;5558:55:11::1;3074:344:22::0;5558:55:11::1;5631:8;:15:::0;5650:2:::1;-1:-1:-1::0;5631:21:11::1;5623:65;;;::::0;-1:-1:-1;;;5623:65:11;;3625:2:22;5623:65:11::1;::::0;::::1;3607:21:22::0;3664:2;3644:18;;;3637:30;3703:33;3683:18;;;3676:61;3754:18;;5623:65:11::1;3423:355:22::0;5623:65:11::1;5698:14;5723:7;5698:33;;5746:6;-1:-1:-1::0;;;;;5746:20:11::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5741:158;;5792:39;::::0;-1:-1:-1;;;5792:39:11;;5825:4:::1;5792:39;::::0;::::1;788:51:22::0;-1:-1:-1;;;;;5792:24:11;::::1;::::0;::::1;::::0;761:18:22;;5792:39:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5784:104;;;::::0;-1:-1:-1;;;5784:104:11;;4267:2:22;5784:104:11::1;::::0;::::1;4249:21:22::0;4306:2;4286:18;;;4279:30;4345:34;4325:18;;;4318:62;-1:-1:-1;;;4396:18:22;;;4389:50;4456:19;;5784:104:11::1;4065:416:22::0;5784:104:11::1;5909:36;::::0;-1:-1:-1;;;5909:36:11;;5939:4:::1;5909:36;::::0;::::1;788:51:22::0;-1:-1:-1;;;;;5909:21:11;::::1;::::0;::::1;::::0;761:18:22;;5909:36:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5955:8:11::1;:22:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;5955:22:11::1;-1:-1:-1::0;;;;;5955:22:11;::::1;::::0;;::::1;::::0;;;-1:-1:-1;5987:21:11;;;:12:::1;5955:22;5987:21:::0;;;;;:28;;-1:-1:-1;;5987:28:11::1;::::0;;::::1;::::0;;;6030:20;;5955:22;;-1:-1:-1;6030:20:11::1;::::0;-1:-1:-1;6030:20:11::1;5473:584;5409:648:::0;:::o;4579:324::-;4661:10;4650:7;1513:6:18;;-1:-1:-1;;;;;1513:6:18;;1441:85;4650:7:11;-1:-1:-1;;;;;4650:21:11;;:76;;;-1:-1:-1;4676:11:11;;-1:-1:-1;;;;;4676:11:11;:25;:49;;;;-1:-1:-1;4705:10:11;-1:-1:-1;;;;;4705:20:11;;;4676:49;4642:117;;;;-1:-1:-1;;;4642:117:11;;4688:2:22;4642:117:11;;;4670:21:22;4727:2;4707:18;;;4700:30;4766;4746:18;;;4739:58;4814:18;;4642:117:11;4486:352:22;4642:117:11;-1:-1:-1;;;;;4777:20:11;;4769:64;;;;-1:-1:-1;;;4769:64:11;;;;;;;:::i;:::-;4843:11;:20;;-1:-1:-1;;;;;;4843:20:11;-1:-1:-1;;;;;4843:20:11;;;;;;;;4878:18;;788:51:22;;;4878:18:11;;776:2:22;761:18;4878::11;;;;;;;;4579:324;:::o;4976:362::-;5060:10;5049:7;1513:6:18;;-1:-1:-1;;;;;1513:6:18;;1441:85;5049:7:11;-1:-1:-1;;;;;5049:21:11;;:45;;;-1:-1:-1;5074:10:11;-1:-1:-1;;;;;5074:20:11;;;5049:45;5041:86;;;;-1:-1:-1;;;5041:86:11;;4688:2:22;5041:86:11;;;4670:21:22;4727:2;4707:18;;;4700:30;4766;4746:18;;;4739:58;4814:18;;5041:86:11;4486:352:22;5041:86:11;5155:11;;-1:-1:-1;;;;;5145:21:11;;;5155:11;;5145:21;5137:57;;;;-1:-1:-1;;;5137:57:11;;5045:2:22;5137:57:11;;;5027:21:22;5084:2;5064:18;;;5057:30;5123:25;5103:18;;;5096:53;5166:18;;5137:57:11;4843:347:22;5137:57:11;-1:-1:-1;;;;;5212:20:11;;5204:64;;;;-1:-1:-1;;;5204:64:11;;;;;;;:::i;:::-;5285:11;5278:18;;-1:-1:-1;;;;;;5278:18:11;;;5311:20;;-1:-1:-1;;;;;806:32:22;;788:51;;5311:20:11;;776:2:22;761:18;5311:20:11;642:203:22;7339:380:11;4330:11;;-1:-1:-1;;;;;4330:11:11;4316:10;:25;4308:106;;;;-1:-1:-1;;;4308:106:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;7431:17:11;::::1;7423:61;;;;-1:-1:-1::0;;;7423:61:11::1;;;;;;;:::i;:::-;7511:1;7502:6;:10;7494:55;;;::::0;-1:-1:-1;;;7494:55:11;;5874:2:22;7494:55:11::1;::::0;::::1;5856:21:22::0;;;5893:18;;;5886:30;5952:34;5932:18;;;5925:62;6004:18;;7494:55:11::1;5672:356:22::0;7494:55:11::1;7576:8;:15:::0;7559:14:::1;7601:112;7625:6;7621:1;:10;7601:112;;;7660:8;7669:1;7660:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;7652:50:::1;::::0;-1:-1:-1;;;7652:50:11;;-1:-1:-1;;;;;6357:32:22;;;7652:50:11::1;::::0;::::1;6339:51:22::0;6406:18;;;6399:34;;;7660:11:11;;::::1;::::0;7652:37:::1;::::0;6312:18:22;;7652:50:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7633:3;;;;;:::i;:::-;;;;7601:112;;;;7413:306;7339:380:::0;;:::o;2064:101:18:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;6833:437:11:-;4330:11;;-1:-1:-1;;;;;4330:11:11;4316:10;:25;4308:106;;;;-1:-1:-1;;;4308:106:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;6944:19:11;::::1;::::0;;::::1;::::0;:40:::1;;-1:-1:-1::0;;;;;;6967:17:11;::::1;::::0;::::1;6944:40;6936:84;;;;-1:-1:-1::0;;;6936:84:11::1;;;;;;;:::i;:::-;7047:1;7038:6;:10;7030:59;;;::::0;-1:-1:-1;;;7030:59:11;;6918:2:22;7030:59:11::1;::::0;::::1;6900:21:22::0;6957:2;6937:18;;;6930:30;6996:34;6976:18;;;6969:62;-1:-1:-1;;;7047:18:22;;;7040:34;7091:19;;7030:59:11::1;6716:400:22::0;7030:59:11::1;7116:8;:15:::0;7099:14:::1;7141:123;7165:6;7161:1;:10;7141:123;;;7200:8;7209:1;7200:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;7192:61:::1;::::0;-1:-1:-1;;;7192:61:11;;-1:-1:-1;;;;;7379:15:22;;;7192:61:11::1;::::0;::::1;7361:34:22::0;7431:15;;;7411:18;;;7404:43;7463:18;;;7456:34;;;7200:11:11;;::::1;::::0;7192:41:::1;::::0;7296:18:22;;7192:61:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7173:3;;;;;:::i;:::-;;;;7141:123;;;;6926:344;6833:437:::0;;;:::o;7790:388::-;4330:11;;-1:-1:-1;;;;;4330:11:11;4316:10;:25;4308:106;;;;-1:-1:-1;;;4308:106:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;7886:19:11;::::1;7878:63;;;;-1:-1:-1::0;;;7878:63:11::1;;;;;;;:::i;:::-;7968:1;7959:6;:10;7951:55;;;::::0;-1:-1:-1;;;7951:55:11;;7703:2:22;7951:55:11::1;::::0;::::1;7685:21:22::0;;;7722:18;;;7715:30;7781:34;7761:18;;;7754:62;7833:18;;7951:55:11::1;7501:356:22::0;7951:55:11::1;8033:8;:15:::0;8016:14:::1;8058:114;8082:6;8078:1;:10;8058:114;;;8117:8;8126:1;8117:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;8109:52:::1;::::0;-1:-1:-1;;;8109:52:11;;-1:-1:-1;;;;;6357:32:22;;;8109:52:11::1;::::0;::::1;6339:51:22::0;6406:18;;;6399:34;;;8117:11:11;;::::1;::::0;8109:37:::1;::::0;6312:18:22;;8109:52:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8090:3;;;;;:::i;:::-;;;;8058:114;;6131:629:::0;1334:13:18;:11;:13::i;:::-;-1:-1:-1;;;;;6216:21:11;::::1;6208:65;;;;-1:-1:-1::0;;;6208:65:11::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6291:21:11;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;6283:50;;;::::0;-1:-1:-1;;;6283:50:11;;8064:2:22;6283:50:11::1;::::0;::::1;8046:21:22::0;8103:2;8083:18;;;8076:30;-1:-1:-1;;;8122:18:22;;;8115:46;8178:18;;6283:50:11::1;7862:340:22::0;6283:50:11::1;6360:8;:15:::0;6343:14:::1;6385:369;6409:6;6405:1;:10;6385:369;;;6455:7;-1:-1:-1::0;;;;;6440:22:11::1;:8;6449:1;6440:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6440:11:11::1;:22:::0;6436:308:::1;;6482:48;::::0;-1:-1:-1;;;6482:48:11;;6524:4:::1;6482:48;::::0;::::1;788:51:22::0;-1:-1:-1;;;;;6482:33:11;::::1;::::0;::::1;::::0;761:18:22;;6482:48:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6562:8;6580:1;6571:6;:10;;;;:::i;:::-;6562:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;6548:8:::1;:11:::0;;-1:-1:-1;;;;;6562:20:11;;::::1;::::0;6557:1;;6548:11;::::1;;;;;:::i;:::-;;;;;;;;;:34;;;;;-1:-1:-1::0;;;;;6548:34:11::1;;;;;-1:-1:-1::0;;;;;6548:34:11::1;;;;;;6600:8;:14;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;-1:-1:-1;;6600:14:11;;;;;-1:-1:-1;;;;;;6600:14:11::1;::::0;;;;;;;;-1:-1:-1;;;;;6632:21:11;::::1;::::0;;;:12:::1;:21:::0;;;;;;;:29;;-1:-1:-1;;6632:29:11::1;::::0;;6684:22;6632:21;;6684:22:::1;::::0;::::1;6385:369;6198:562;6131:629:::0;:::o;6436:308::-:1;6417:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6385:369;;;;6198:562;6131:629:::0;:::o;9545:104::-;9599:16;9634:8;9627:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9627:15:11;;;;;;;;;;;;;;;;;;;;;;;9545:104;:::o;4438:70::-;3279:19:19;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:19;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:19;1713:19:20;:23;;;3387:66:19;;-1:-1:-1;3436:12:19;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:19;;8674:2:22;3325:201:19;;;8656:21:22;8713:2;8693:18;;;8686:30;8752:34;8732:18;;;8725:62;-1:-1:-1;;;8803:18:22;;;8796:44;8857:19;;3325:201:19;8472:410:22;3325:201:19;3536:12;:16;;-1:-1:-1;;3536:16:19;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:19;;;;;3562:65;4485:16:11::1;:14;:16::i;:::-;3651:14:19::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:19;;;3721:14;;-1:-1:-1;9039:36:22;;3721:14:19;;9027:2:22;9012:18;3721:14:19;8887:194:22;3647:99:19;3269:483;4438:70:11:o;9898:362::-;10028:8;:15;9995:4;;;10053:180;10077:6;10073:1;:10;10053:180;;;10117:8;10126:1;10117:11;;;;;;;;:::i;:::-;;;;;;;;;;;10109:67;;-1:-1:-1;;;10109:67:11;;-1:-1:-1;;;;;9373:15:22;;;10109:67:11;;;9355:34:22;9425:15;;;9405:18;;;9398:43;9457:18;;;9450:34;;;10170:4:11;9500:18:22;;;9493:43;10117:11:11;;;;10109:32;;9289:19:22;;10109:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10104:119;;10203:5;10196:12;;;;;;10104:119;10085:3;;;;:::i;:::-;;;;10053:180;;;;10249:4;10242:11;;;9898:362;;;;;;:::o;8258:1017::-;1334:13:18;:11;:13::i;:::-;-1:-1:-1;;;;;8374:21:11;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;8366:59;;;::::0;-1:-1:-1;;;8366:59:11;;9749:2:22;8366:59:11::1;::::0;::::1;9731:21:22::0;9788:2;9768:18;;;9761:30;9827:27;9807:18;;;9800:55;9872:18;;8366:59:11::1;9547:349:22::0;8366:59:11::1;8909:4;8903:11;8976:15;8959;8940:17;8927:65;9078:1;9075::::0;9058:15:::1;9039:17;9036:1;9027:7;9020:5;9015:65;9005:191;;9121:16;9118:1;9115::::0;9100:38:::1;9165:16;9162:1;9155:27;9005:191;;9239:7;-1:-1:-1::0;;;;;9221:47:11::1;;9248:19;9258:8;;9248:9;:19::i;:::-;9221:47;::::0;-1:-1:-1;;;;;;10063:33:22;;;10045:52;;10033:2;10018:18;9221:47:11::1;;;;;;;8258:1017:::0;;;:::o;2314:198:18:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:18;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:18;;10310:2:22;2394:73:18::1;::::0;::::1;10292:21:22::0;10349:2;10329:18;;;10322:30;10388:34;10368:18;;;10361:62;-1:-1:-1;;;10439:18:22;;;10432:36;10485:19;;2394:73:18::1;10108:402:22::0;2394:73:18::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:18;929:10:21;1662:23:18;1654:68;;;;-1:-1:-1;;;1654:68:18;;10717:2:22;1654:68:18;;;10699:21:22;;;10736:18;;;10729:30;10795:34;10775:18;;;10768:62;10847:18;;1654:68:18;10515:356:22;2666:187:18;2758:6;;;-1:-1:-1;;;;;2774:17:18;;;-1:-1:-1;;;;;;2774:17:18;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:19;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:19;;;;;;;:::i;:::-;1065:26:18::1;:24;:26::i;10488:820:11:-:0;10555:13;10603:1;10584:20;;10580:722;;-1:-1:-1;11249:29:11;;10580:722;10488:820;;;;:::o;1104:111:18:-;5374:13:19;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:19;;;;;;;:::i;:::-;1176:32:18::1;929:10:21::0;1176:18:18::1;:32::i;14:173:22:-:0;82:20;;-1:-1:-1;;;;;131:31:22;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:22:o;850:328::-;927:6;935;943;996:2;984:9;975:7;971:23;967:32;964:52;;;1012:1;1009;1002:12;964:52;1035:29;1054:9;1035:29;:::i;:::-;1025:39;;1083:38;1117:2;1106:9;1102:18;1083:38;:::i;:::-;1073:48;;1168:2;1157:9;1153:18;1140:32;1130:42;;850:328;;;;;:::o;1375:658::-;1546:2;1598:21;;;1668:13;;1571:18;;;1690:22;;;1517:4;;1546:2;1769:15;;;;1743:2;1728:18;;;1517:4;1812:195;1826:6;1823:1;1820:13;1812:195;;;1891:13;;-1:-1:-1;;;;;1887:39:22;1875:52;;1982:15;;;;1947:12;;;;1923:1;1841:9;1812:195;;;-1:-1:-1;2024:3:22;;1375:658;-1:-1:-1;;;;;;1375:658:22:o;2038:671::-;2117:6;2125;2133;2186:2;2174:9;2165:7;2161:23;2157:32;2154:52;;;2202:1;2199;2192:12;2154:52;2242:9;2229:23;2271:18;2312:2;2304:6;2301:14;2298:34;;;2328:1;2325;2318:12;2298:34;2366:6;2355:9;2351:22;2341:32;;2411:7;2404:4;2400:2;2396:13;2392:27;2382:55;;2433:1;2430;2423:12;2382:55;2473:2;2460:16;2499:2;2491:6;2488:14;2485:34;;;2515:1;2512;2505:12;2485:34;2562:7;2555:4;2546:6;2542:2;2538:15;2534:26;2531:39;2528:59;;;2583:1;2580;2573:12;2528:59;2614:4;2606:13;;;;-1:-1:-1;2638:6:22;-1:-1:-1;2663:40:22;;2682:20;;;-1:-1:-1;2663:40:22;:::i;:::-;2653:50;;2038:671;;;;;:::o;2714:355::-;2916:2;2898:21;;;2955:2;2935:18;;;2928:30;2994:33;2989:2;2974:18;;2967:61;3060:2;3045:18;;2714:355::o;3783:277::-;3850:6;3903:2;3891:9;3882:7;3878:23;3874:32;3871:52;;;3919:1;3916;3909:12;3871:52;3951:9;3945:16;4004:5;3997:13;3990:21;3983:5;3980:32;3970:60;;4026:1;4023;4016:12;5195:472;5397:2;5379:21;;;5436:2;5416:18;;;5409:30;5475:34;5470:2;5455:18;;5448:62;5546:34;5541:2;5526:18;;5519:62;-1:-1:-1;;;5612:3:22;5597:19;;5590:35;5657:3;5642:19;;5195:472::o;6033:127::-;6094:10;6089:3;6085:20;6082:1;6075:31;6125:4;6122:1;6115:15;6149:4;6146:1;6139:15;6444:127;6505:10;6500:3;6496:20;6493:1;6486:31;6536:4;6533:1;6526:15;6560:4;6557:1;6550:15;6576:135;6615:3;6636:17;;;6633:43;;6656:18;;:::i;:::-;-1:-1:-1;6703:1:22;6692:13;;6576:135::o;8207:128::-;8274:9;;;8295:11;;;8292:37;;;8309:18;;:::i;8340:127::-;8401:10;8396:3;8392:20;8389:1;8382:31;8432:4;8429:1;8422:15;8456:4;8453:1;8446:15;10876:407;11078:2;11060:21;;;11117:2;11097:18;;;11090:30;11156:34;11151:2;11136:18;;11129:62;-1:-1:-1;;;11222:2:22;11207:18;;11200:41;11273:3;11258:19;;10876:407::o"},"methodIdentifiers":{"addModule(address)":"1ed86f19","bindToken(address)":"3ff5aa02","callModuleFunction(bytes,address)":"efb22d33","canTransfer(address,address,uint256)":"e46638e6","created(address,uint256)":"5f8dead3","destroyed(address,uint256)":"8d2ea772","getModules()":"b2494df3","getTokenBound()":"6a3edf28","init()":"e1c7392a","isModuleBound(address)":"a446d49f","owner()":"8da5cb5b","removeModule(address)":"a0632461","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","transferred(address,address,uint256)":"8baf29b4","unbindToken(address)":"40db3b50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ModuleInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"callModuleFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModuleBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addModule(address)\":{\"details\":\"See {IModularCompliance-addModule}.\"},\"bindToken(address)\":{\"details\":\"See {IModularCompliance-bindToken}.\"},\"callModuleFunction(bytes,address)\":{\"details\":\"see {IModularCompliance-callModuleFunction}.\"},\"canTransfer(address,address,uint256)\":{\"details\":\"See {IModularCompliance-canTransfer}.\"},\"created(address,uint256)\":{\"details\":\"See {IModularCompliance-created}.\"},\"destroyed(address,uint256)\":{\"details\":\"See {IModularCompliance-destroyed}.\"},\"getModules()\":{\"details\":\"See {IModularCompliance-getModules}.\"},\"getTokenBound()\":{\"details\":\"See {IModularCompliance-getTokenBound}.\"},\"isModuleBound(address)\":{\"details\":\"See {IModularCompliance-isModuleBound}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeModule(address)\":{\"details\":\"See {IModularCompliance-removeModule}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferred(address,address,uint256)\":{\"details\":\"See {IModularCompliance-transferred}.\"},\"unbindToken(address)\":{\"details\":\"See {IModularCompliance-unbindToken}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ModuleAdded(address)\":{\"notice\":\"this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module\"},\"ModuleRemoved(address)\":{\"notice\":\"this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/compliance/modular/ModularCompliance.sol\":\"ModularCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xf632b47a306502ce66a0e432c7c3a7d3290ab8325a854bdefe2268d61fb7cc7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://988eb31577cdd253e9ff2743983c466f81fdb6b944b24d3c55b0263ae45f3d3d\",\"dweb:/ipfs/QmZFixdMi55m78eEfrLN3yiNL4VR3AWSgKcjaRBBq4FskX\"]},\"contracts/compliance/modular/MCStorage.sol\":{\"keccak256\":\"0x6c987343c8d3694e57bf2454ca494fc8ab2043434596dea0534951ca7a27ecab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c755ff3cb0845f2c168f38168379efe067a0db6029a7dc1013cdb49de237954\",\"dweb:/ipfs/QmSm18KLuBrUazzBGmJxAsb1xqkbAjnp5wQrFKBN1W6pVD\"]},\"contracts/compliance/modular/ModularCompliance.sol\":{\"keccak256\":\"0x3bb2c16349e1ba869303d6826ba2ea5e74a794e8fb61291648135b3f44ac7802\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95f3f34726e48f556f36f9bdbc8151a67d07160badb7ddcd35cd421d780ba692\",\"dweb:/ipfs/QmcVTvacRnLJYi2niU3jHJVyBjFBic5sHZH2EMThJupTmm\"]},\"contracts/compliance/modular/modules/IModule.sol\":{\"keccak256\":\"0x2a334d88fe20e089ff30f23d31db2fc52a943e43bf91b4ffef3aeef5f4dd8331\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55bbe34996050e5844caafe122375af83f4d9ad1cbea3954e7a766b7c684ebf0\",\"dweb:/ipfs/QmQsJgWcLPQnbawnHZzJDF6UBuw456egB8LjxfCuHBDQa2\"]},\"contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"contracts/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"contracts/token/IToken.sol\":{\"keccak256\":\"0xf5c167244bcf46aa12fa678c6821c9534cd7b251c254dafd4fefb7586d3310ef\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://386e323cddab4b50c2d904ce549f4cdf096881d65ca3d28a5ec79db313c3357c\",\"dweb:/ipfs/QmQ1VqhgoGpfKFXGhgvSqKsQFLnbbJd9FWogSouoFDs45q\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"events":{"ModuleAdded(address)":{"notice":"this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module"},"ModuleRemoved(address)":{"notice":"this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module"},"TokenBound(address)":{"notice":"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"},"TokenUnbound(address)":{"notice":"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"}},"kind":"user","methods":{},"version":1}}},"contracts/compliance/modular/modules/IModule.sol":{"IModule":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_compliance","type":"address"}],"name":"ComplianceBound","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_compliance","type":"address"}],"name":"ComplianceUnbound","type":"event"},{"inputs":[{"internalType":"address","name":"_compliance","type":"address"}],"name":"bindCompliance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_compliance","type":"address"}],"name":"canComplianceBind","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_compliance","type":"address"}],"name":"isComplianceBound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPlugAndPlay","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"moduleBurnAction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"address","name":"_compliance","type":"address"}],"name":"moduleCheck","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"moduleMintAction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"moduleTransferAction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_compliance","type":"address"}],"name":"unbindCompliance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"bindCompliance(address)":{"details":"binds the module to a compliance contract  once the module is bound, the compliance contract can interact with the module  this function can be called ONLY by the compliance contract itself (_compliance), through the  addModule function, which calls bindCompliance  the module cannot be already bound to the compliance","params":{"_compliance":"address of the compliance contract  Emits a ComplianceBound event"}},"canComplianceBind(address)":{"details":"checks whether compliance is suitable to bind to the module.","params":{"_compliance":"address of the compliance contract"}},"isComplianceBound(address)":{"details":"getter for compliance binding status on module","params":{"_compliance":"address of the compliance contract"}},"isPlugAndPlay()":{"details":"getter for module plug & play status"},"moduleBurnAction(address,uint256)":{"details":"action performed on the module during a burn action  this function is used to update variables of the module upon burning if it is required  if the module does not require state updates in case of burn, this function remains empty  This function can be called ONLY by the compliance contract itself (_compliance)  This function can be called only on a compliance contract that is bound to the module","params":{"_from":"address on which tokens are burnt","_value":"amount of tokens burnt"}},"moduleCheck(address,address,uint256,address)":{"details":"compliance check on the module for a specific transaction on a specific compliance contract  this function is used to check if the transfer is allowed by the module  This function can be called only on a compliance contract that is bound to the module","params":{"_compliance":"address of the compliance contract concerned by the transfer action  the function returns TRUE if the module allows the transfer, FALSE otherwise","_from":"address of the transfer sender","_to":"address of the transfer receiver","_value":"amount of tokens sent"}},"moduleMintAction(address,uint256)":{"details":"action performed on the module during a mint action  this function is used to update variables of the module upon minting if it is required  if the module does not require state updates in case of mint, this function remains empty  This function can be called ONLY by the compliance contract itself (_compliance)  This function can be called only on a compliance contract that is bound to the module","params":{"_to":"address used for minting","_value":"amount of tokens minted"}},"moduleTransferAction(address,address,uint256)":{"details":"action performed on the module during a transfer action  this function is used to update variables of the module upon transfer if it is required  if the module does not require state updates in case of transfer, this function remains empty  This function can be called ONLY by the compliance contract itself (_compliance)  This function can be called only on a compliance contract that is bound to the module","params":{"_from":"address of the transfer sender","_to":"address of the transfer receiver","_value":"amount of tokens sent"}},"name()":{"details":"getter for the name of the module","returns":{"_name":"the name of the module"}},"unbindCompliance(address)":{"details":"unbinds the module from a compliance contract  once the module is unbound, the compliance contract cannot interact with the module anymore  this function can be called ONLY by the compliance contract itself (_compliance), through the  removeModule function, which calls unbindCompliance","params":{"_compliance":"address of the compliance contract  Emits a ComplianceUnbound event"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bindCompliance(address)":"4a932544","canComplianceBind(address)":"bcc21053","isComplianceBound(address)":"4cf4d295","isPlugAndPlay()":"e6f5e807","moduleBurnAction(address,uint256)":"372491a2","moduleCheck(address,address,uint256,address)":"013b7ce4","moduleMintAction(address,uint256)":"f104a8c9","moduleTransferAction(address,address,uint256)":"2cb7e1ec","name()":"06fdde03","unbindCompliance(address)":"0694a5fb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"bindCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"canComplianceBind\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"isComplianceBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPlugAndPlay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleBurnAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"moduleCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleMintAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleTransferAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"unbindCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bindCompliance(address)\":{\"details\":\"binds the module to a compliance contract  once the module is bound, the compliance contract can interact with the module  this function can be called ONLY by the compliance contract itself (_compliance), through the  addModule function, which calls bindCompliance  the module cannot be already bound to the compliance\",\"params\":{\"_compliance\":\"address of the compliance contract  Emits a ComplianceBound event\"}},\"canComplianceBind(address)\":{\"details\":\"checks whether compliance is suitable to bind to the module.\",\"params\":{\"_compliance\":\"address of the compliance contract\"}},\"isComplianceBound(address)\":{\"details\":\"getter for compliance binding status on module\",\"params\":{\"_compliance\":\"address of the compliance contract\"}},\"isPlugAndPlay()\":{\"details\":\"getter for module plug & play status\"},\"moduleBurnAction(address,uint256)\":{\"details\":\"action performed on the module during a burn action  this function is used to update variables of the module upon burning if it is required  if the module does not require state updates in case of burn, this function remains empty  This function can be called ONLY by the compliance contract itself (_compliance)  This function can be called only on a compliance contract that is bound to the module\",\"params\":{\"_from\":\"address on which tokens are burnt\",\"_value\":\"amount of tokens burnt\"}},\"moduleCheck(address,address,uint256,address)\":{\"details\":\"compliance check on the module for a specific transaction on a specific compliance contract  this function is used to check if the transfer is allowed by the module  This function can be called only on a compliance contract that is bound to the module\",\"params\":{\"_compliance\":\"address of the compliance contract concerned by the transfer action  the function returns TRUE if the module allows the transfer, FALSE otherwise\",\"_from\":\"address of the transfer sender\",\"_to\":\"address of the transfer receiver\",\"_value\":\"amount of tokens sent\"}},\"moduleMintAction(address,uint256)\":{\"details\":\"action performed on the module during a mint action  this function is used to update variables of the module upon minting if it is required  if the module does not require state updates in case of mint, this function remains empty  This function can be called ONLY by the compliance contract itself (_compliance)  This function can be called only on a compliance contract that is bound to the module\",\"params\":{\"_to\":\"address used for minting\",\"_value\":\"amount of tokens minted\"}},\"moduleTransferAction(address,address,uint256)\":{\"details\":\"action performed on the module during a transfer action  this function is used to update variables of the module upon transfer if it is required  if the module does not require state updates in case of transfer, this function remains empty  This function can be called ONLY by the compliance contract itself (_compliance)  This function can be called only on a compliance contract that is bound to the module\",\"params\":{\"_from\":\"address of the transfer sender\",\"_to\":\"address of the transfer receiver\",\"_value\":\"amount of tokens sent\"}},\"name()\":{\"details\":\"getter for the name of the module\",\"returns\":{\"_name\":\"the name of the module\"}},\"unbindCompliance(address)\":{\"details\":\"unbinds the module from a compliance contract  once the module is unbound, the compliance contract cannot interact with the module anymore  this function can be called ONLY by the compliance contract itself (_compliance), through the  removeModule function, which calls unbindCompliance\",\"params\":{\"_compliance\":\"address of the compliance contract  Emits a ComplianceUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ComplianceBound(address)\":{\"notice\":\"this event is emitted when the compliance contract is bound to the module.  the event is emitted by the bindCompliance function  `_compliance` is the address of the compliance contract being bound\"},\"ComplianceUnbound(address)\":{\"notice\":\"this event is emitted when the compliance contract is unbound from the module.  the event is emitted by the unbindCompliance function  `_compliance` is the address of the compliance contract being unbound\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/compliance/modular/modules/IModule.sol\":\"IModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/compliance/modular/modules/IModule.sol\":{\"keccak256\":\"0x2a334d88fe20e089ff30f23d31db2fc52a943e43bf91b4ffef3aeef5f4dd8331\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55bbe34996050e5844caafe122375af83f4d9ad1cbea3954e7a766b7c684ebf0\",\"dweb:/ipfs/QmQsJgWcLPQnbawnHZzJDF6UBuw456egB8LjxfCuHBDQa2\"]}},\"version\":1}","userdoc":{"events":{"ComplianceBound(address)":{"notice":"this event is emitted when the compliance contract is bound to the module.  the event is emitted by the bindCompliance function  `_compliance` is the address of the compliance contract being bound"},"ComplianceUnbound(address)":{"notice":"this event is emitted when the compliance contract is unbound from the module.  the event is emitted by the unbindCompliance function  `_compliance` is the address of the compliance contract being unbound"}},"kind":"user","methods":{},"version":1}}},"contracts/registry/interface/IClaimTopicsRegistry.sol":{"IClaimTopicsRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimTopic","type":"uint256"}],"name":"ClaimTopicAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimTopic","type":"uint256"}],"name":"ClaimTopicRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"_claimTopic","type":"uint256"}],"name":"addClaimTopic","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getClaimTopics","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimTopic","type":"uint256"}],"name":"removeClaimTopic","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addClaimTopic(uint256)":{"details":"Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues","params":{"_claimTopic":"The claim topic index"}},"getClaimTopics()":{"details":"Get the trusted claim topics for the security token","returns":{"_0":"Array of trusted claim topics"}},"removeClaimTopic(uint256)":{"details":"Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event","params":{"_claimTopic":"The claim topic index"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addClaimTopic(uint256)":"c7b22551","getClaimTopics()":"df09d604","removeClaimTopic(uint256)":"08297846"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"getClaimTopics()\":{\"details\":\"Get the trusted claim topics for the security token\",\"returns\":{\"_0\":\"Array of trusted claim topics\"}},\"removeClaimTopic(uint256)\":{\"details\":\"Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]}},\"version\":1}","userdoc":{"events":{"ClaimTopicAdded(uint256)":{"notice":"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"},"ClaimTopicRemoved(uint256)":{"notice":"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"}},"kind":"user","methods":{},"version":1}}},"contracts/registry/interface/IIdentityRegistry.sol":{"IIdentityRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimTopicsRegistry","type":"address"}],"name":"ClaimTopicsRegistrySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investorAddress","type":"address"},{"indexed":true,"internalType":"uint16","name":"country","type":"uint16"}],"name":"CountryUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investorAddress","type":"address"},{"indexed":true,"internalType":"contract IIdentity","name":"identity","type":"address"}],"name":"IdentityRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investorAddress","type":"address"},{"indexed":true,"internalType":"contract IIdentity","name":"identity","type":"address"}],"name":"IdentityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"identityStorage","type":"address"}],"name":"IdentityStorageSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IIdentity","name":"oldIdentity","type":"address"},{"indexed":true,"internalType":"contract IIdentity","name":"newIdentity","type":"address"}],"name":"IdentityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trustedIssuersRegistry","type":"address"}],"name":"TrustedIssuersRegistrySet","type":"event"},{"inputs":[{"internalType":"address[]","name":"_userAddresses","type":"address[]"},{"internalType":"contract IIdentity[]","name":"_identities","type":"address[]"},{"internalType":"uint16[]","name":"_countries","type":"uint16[]"}],"name":"batchRegisterIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"contains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"deleteIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"identity","outputs":[{"internalType":"contract IIdentity","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityStorage","outputs":[{"internalType":"contract IIdentityRegistryStorage","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"investorCountry","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"isVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"issuersRegistry","outputs":[{"internalType":"contract ITrustedIssuersRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"contract IIdentity","name":"_identity","type":"address"},{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"registerIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_claimTopicsRegistry","type":"address"}],"name":"setClaimTopicsRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_identityRegistryStorage","type":"address"}],"name":"setIdentityRegistryStorage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_trustedIssuersRegistry","type":"address"}],"name":"setTrustedIssuersRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"topicsRegistry","outputs":[{"internalType":"contract IClaimTopicsRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"updateCountry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"contract IIdentity","name":"_identity","type":"address"}],"name":"updateIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"batchRegisterIdentity(address[],address[],uint16[])":{"details":"function allowing to register identities in batch  This function can only be called by a wallet set as agent of the smart contract  Requires that none of the users has an identity contract already registered.  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_countries":"The countries of the corresponding investors  emits _userAddresses.length `IdentityRegistered` events","_identities":"The addresses of the corresponding identity contracts","_userAddresses":"The addresses of the users"}},"contains(address)":{"details":"This functions checks whether a wallet has its Identity registered or not  in the Identity Registry.","params":{"_userAddress":"The address of the user to be checked."},"returns":{"_0":"'True' if the address is contained in the Identity Registry, 'false' if not."}},"deleteIdentity(address)":{"details":"Removes an user from the identity registry.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by a wallet set as agent of the smart contract","params":{"_userAddress":"The address of the user to be removed  emits `IdentityRemoved` event"}},"identity(address)":{"details":"Returns the onchainID of an investor.","params":{"_userAddress":"The wallet of the investor"}},"identityStorage()":{"details":"Returns the IdentityRegistryStorage linked to the current IdentityRegistry."},"investorCountry(address)":{"details":"Returns the country code of an investor.","params":{"_userAddress":"The wallet of the investor"}},"isVerified(address)":{"details":"This functions checks whether an identity contract  corresponding to the provided user address has the required claims or not based  on the data fetched from trusted issuers registry and from the claim topics registry","params":{"_userAddress":"The address of the user to be verified."},"returns":{"_0":"'True' if the address is verified, 'false' if not."}},"issuersRegistry()":{"details":"Returns the TrustedIssuersRegistry linked to the current IdentityRegistry."},"registerIdentity(address,address,uint16)":{"details":"Register an identity contract corresponding to a user address.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by a wallet set as agent of the smart contract","params":{"_country":"The country of the investor  emits `IdentityRegistered` event","_identity":"The address of the user's identity contract","_userAddress":"The address of the user"}},"setClaimTopicsRegistry(address)":{"details":"Replace the actual claimTopicsRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract","params":{"_claimTopicsRegistry":"The address of the new claim Topics Registry  emits `ClaimTopicsRegistrySet` event"}},"setIdentityRegistryStorage(address)":{"details":"Replace the actual identityRegistryStorage contract with a new one.  This function can only be called by the wallet set as owner of the smart contract","params":{"_identityRegistryStorage":"The address of the new Identity Registry Storage  emits `IdentityStorageSet` event"}},"setTrustedIssuersRegistry(address)":{"details":"Replace the actual trustedIssuersRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract","params":{"_trustedIssuersRegistry":"The address of the new Trusted Issuers Registry  emits `TrustedIssuersRegistrySet` event"}},"topicsRegistry()":{"details":"Returns the ClaimTopicsRegistry linked to the current IdentityRegistry."},"updateCountry(address,uint16)":{"details":"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract","params":{"_country":"The new country of the user  emits `CountryUpdated` event","_userAddress":"The address of the user"}},"updateIdentity(address,address)":{"details":"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract","params":{"_identity":"The address of the user's new identity contract  emits `IdentityUpdated` event","_userAddress":"The address of the user"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"batchRegisterIdentity(address[],address[],uint16[])":"653dc9f1","contains(address)":"5dbe47e8","deleteIdentity(address)":"a8d29d1d","identity(address)":"f0eb5e54","identityStorage()":"f11abfd8","investorCountry(address)":"7e42683b","isVerified(address)":"b9209e33","issuersRegistry()":"b4f3fcb7","registerIdentity(address,address,uint16)":"454a03e0","setClaimTopicsRegistry(address)":"670af6a9","setIdentityRegistryStorage(address)":"26d941ae","setTrustedIssuersRegistry(address)":"e744d789","topicsRegistry()":"3b3e12f4","updateCountry(address,uint16)":"3b239a7f","updateIdentity(address,address)":"8e098ca1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchRegisterIdentity(address[],address[],uint16[])\":{\"details\":\"function allowing to register identities in batch  This function can only be called by a wallet set as agent of the smart contract  Requires that none of the users has an identity contract already registered.  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_countries\":\"The countries of the corresponding investors  emits _userAddresses.length `IdentityRegistered` events\",\"_identities\":\"The addresses of the corresponding identity contracts\",\"_userAddresses\":\"The addresses of the users\"}},\"contains(address)\":{\"details\":\"This functions checks whether a wallet has its Identity registered or not  in the Identity Registry.\",\"params\":{\"_userAddress\":\"The address of the user to be checked.\"},\"returns\":{\"_0\":\"'True' if the address is contained in the Identity Registry, 'false' if not.\"}},\"deleteIdentity(address)\":{\"details\":\"Removes an user from the identity registry.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityRemoved` event\"}},\"identity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"identityStorage()\":{\"details\":\"Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\"},\"investorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"isVerified(address)\":{\"details\":\"This functions checks whether an identity contract  corresponding to the provided user address has the required claims or not based  on the data fetched from trusted issuers registry and from the claim topics registry\",\"params\":{\"_userAddress\":\"The address of the user to be verified.\"},\"returns\":{\"_0\":\"'True' if the address is verified, 'false' if not.\"}},\"issuersRegistry()\":{\"details\":\"Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\"},\"registerIdentity(address,address,uint16)\":{\"details\":\"Register an identity contract corresponding to a user address.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityRegistered` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"setClaimTopicsRegistry(address)\":{\"details\":\"Replace the actual claimTopicsRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_claimTopicsRegistry\":\"The address of the new claim Topics Registry  emits `ClaimTopicsRegistrySet` event\"}},\"setIdentityRegistryStorage(address)\":{\"details\":\"Replace the actual identityRegistryStorage contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_identityRegistryStorage\":\"The address of the new Identity Registry Storage  emits `IdentityStorageSet` event\"}},\"setTrustedIssuersRegistry(address)\":{\"details\":\"Replace the actual trustedIssuersRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_trustedIssuersRegistry\":\"The address of the new Trusted Issuers Registry  emits `TrustedIssuersRegistrySet` event\"}},\"topicsRegistry()\":{\"details\":\"Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\"},\"updateCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryUpdated` event\",\"_userAddress\":\"The address of the user\"}},\"updateIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityUpdated` event\",\"_userAddress\":\"The address of the user\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsRegistrySet(address)\":{\"notice\":\"this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\"},\"CountryUpdated(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityRegistered(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityRemoved(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityStorageSet(address)\":{\"notice\":\"this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract\"},\"IdentityUpdated(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"TrustedIssuersRegistrySet(address)\":{\"notice\":\"this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/IIdentityRegistry.sol\":\"IIdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"contracts/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}","userdoc":{"events":{"ClaimTopicsRegistrySet(address)":{"notice":"this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"},"CountryUpdated(address,uint16)":{"notice":"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"},"IdentityRegistered(address,address)":{"notice":"this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"},"IdentityRemoved(address,address)":{"notice":"this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"},"IdentityStorageSet(address)":{"notice":"this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract"},"IdentityUpdated(address,address)":{"notice":"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"},"TrustedIssuersRegistrySet(address)":{"notice":"this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"}},"kind":"user","methods":{},"version":1}}},"contracts/registry/interface/IIdentityRegistryStorage.sol":{"IIdentityRegistryStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investorAddress","type":"address"},{"indexed":true,"internalType":"uint16","name":"country","type":"uint16"}],"name":"CountryModified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IIdentity","name":"oldIdentity","type":"address"},{"indexed":true,"internalType":"contract IIdentity","name":"newIdentity","type":"address"}],"name":"IdentityModified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"identityRegistry","type":"address"}],"name":"IdentityRegistryBound","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"identityRegistry","type":"address"}],"name":"IdentityRegistryUnbound","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investorAddress","type":"address"},{"indexed":true,"internalType":"contract IIdentity","name":"identity","type":"address"}],"name":"IdentityStored","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investorAddress","type":"address"},{"indexed":true,"internalType":"contract IIdentity","name":"identity","type":"address"}],"name":"IdentityUnstored","type":"event"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"contract IIdentity","name":"_identity","type":"address"},{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"addIdentityToStorage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_identityRegistry","type":"address"}],"name":"bindIdentityRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"linkedIdentityRegistries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"contract IIdentity","name":"_identity","type":"address"}],"name":"modifyStoredIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"modifyStoredInvestorCountry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"removeIdentityFromStorage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"storedIdentity","outputs":[{"internalType":"contract IIdentity","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"storedInvestorCountry","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_identityRegistry","type":"address"}],"name":"unbindIdentityRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addIdentityToStorage(address,address,uint16)":{"details":"adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract","params":{"_country":"The country of the investor  emits `IdentityStored` event","_identity":"The address of the user's identity contract","_userAddress":"The address of the user"}},"bindIdentityRegistry(address)":{"params":{"_identityRegistry":"The identity registry address to add."}},"linkedIdentityRegistries()":{"details":"Returns the identity registries linked to the storage contract"},"modifyStoredIdentity(address,address)":{"details":"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract","params":{"_identity":"The address of the user's new identity contract  emits `IdentityModified` event","_userAddress":"The address of the user"}},"modifyStoredInvestorCountry(address,uint16)":{"details":"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract","params":{"_country":"The new country of the user  emits `CountryModified` event","_userAddress":"The address of the user"}},"removeIdentityFromStorage(address)":{"details":"Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract","params":{"_userAddress":"The address of the user to be removed  emits `IdentityUnstored` event"}},"storedIdentity(address)":{"details":"Returns the onchainID of an investor.","params":{"_userAddress":"The wallet of the investor"}},"storedInvestorCountry(address)":{"details":"Returns the country code of an investor.","params":{"_userAddress":"The wallet of the investor"}},"unbindIdentityRegistry(address)":{"params":{"_identityRegistry":"The identity registry address to remove."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addIdentityToStorage(address,address,uint16)":"a53410dd","bindIdentityRegistry(address)":"690a49f9","linkedIdentityRegistries()":"bf9eb959","modifyStoredIdentity(address,address)":"e805cf86","modifyStoredInvestorCountry(address,uint16)":"9f3418d5","removeIdentityFromStorage(address)":"cf191bcd","storedIdentity(address)":"7988d3a5","storedInvestorCountry(address)":"727e13bc","unbindIdentityRegistry(address)":"97a012f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"details\":\"adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityStored` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"bindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to add.\"}},\"linkedIdentityRegistries()\":{\"details\":\"Returns the identity registries linked to the storage contract\"},\"modifyStoredIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityModified` event\",\"_userAddress\":\"The address of the user\"}},\"modifyStoredInvestorCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryModified` event\",\"_userAddress\":\"The address of the user\"}},\"removeIdentityFromStorage(address)\":{\"details\":\"Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityUnstored` event\"}},\"storedIdentity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"storedInvestorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"unbindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CountryModified(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityModified(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"IdentityRegistryBound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added\"},\"IdentityRegistryUnbound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed\"},\"IdentityStored(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityUnstored(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"}},\"kind\":\"user\",\"methods\":{\"bindIdentityRegistry(address)\":{\"notice\":\"Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS\"},\"unbindIdentityRegistry(address)\":{\"notice\":\"Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]}},\"version\":1}","userdoc":{"events":{"CountryModified(address,uint16)":{"notice":"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"},"IdentityModified(address,address)":{"notice":"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"},"IdentityRegistryBound(address)":{"notice":"this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added"},"IdentityRegistryUnbound(address)":{"notice":"this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed"},"IdentityStored(address,address)":{"notice":"this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"},"IdentityUnstored(address,address)":{"notice":"this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"}},"kind":"user","methods":{"bindIdentityRegistry(address)":{"notice":"Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS"},"unbindIdentityRegistry(address)":{"notice":"Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract"}},"version":1}}},"contracts/registry/interface/ITrustedIssuersRegistry.sol":{"ITrustedIssuersRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"}],"name":"ClaimTopicsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"}],"name":"TrustedIssuerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IClaimIssuer","name":"trustedIssuer","type":"address"}],"name":"TrustedIssuerRemoved","type":"event"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"},{"internalType":"uint256[]","name":"_claimTopics","type":"uint256[]"}],"name":"addTrustedIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"}],"name":"getTrustedIssuerClaimTopics","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedIssuers","outputs":[{"internalType":"contract IClaimIssuer[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"claimTopic","type":"uint256"}],"name":"getTrustedIssuersForClaimTopic","outputs":[{"internalType":"contract IClaimIssuer[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"},{"internalType":"uint256","name":"_claimTopic","type":"uint256"}],"name":"hasClaimTopic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_issuer","type":"address"}],"name":"isTrustedIssuer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"}],"name":"removeTrustedIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IClaimIssuer","name":"_trustedIssuer","type":"address"},{"internalType":"uint256[]","name":"_claimTopics","type":"uint256[]"}],"name":"updateIssuerClaimTopics","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addTrustedIssuer(address,uint256[])":{"details":"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers","params":{"_claimTopics":"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event","_trustedIssuer":"The ClaimIssuer contract address of the trusted claim issuer."}},"getTrustedIssuerClaimTopics(address)":{"details":"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.","params":{"_trustedIssuer":"the trusted issuer concerned."},"returns":{"_0":"The set of claim topics that the trusted issuer is allowed to emit"}},"getTrustedIssuers()":{"details":"Function for getting all the trusted claim issuers stored.","returns":{"_0":"array of all claim issuers registered."}},"getTrustedIssuersForClaimTopic(uint256)":{"details":"Function for getting all the trusted issuer allowed for a given claim topic.","params":{"claimTopic":"the claim topic to get the trusted issuers for."},"returns":{"_0":"array of all claim issuer addresses that are allowed for the given claim topic."}},"hasClaimTopic(address,uint256)":{"details":"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic","params":{"_claimTopic":"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it","_issuer":"the address of the trusted issuer's ClaimIssuer contract"},"returns":{"_0":"true if the issuer is trusted for this claim topic."}},"isTrustedIssuer(address)":{"details":"Checks if the ClaimIssuer contract is trusted","params":{"_issuer":"the address of the ClaimIssuer contract"},"returns":{"_0":"true if the issuer is trusted, false otherwise."}},"removeTrustedIssuer(address)":{"details":"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first","params":{"_trustedIssuer":"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event"}},"updateIssuerClaimTopics(address,uint256[])":{"details":"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics","params":{"_claimTopics":"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event","_trustedIssuer":"the claim issuer to update."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addTrustedIssuer(address,uint256[])":"9f63ea98","getTrustedIssuerClaimTopics(address)":"c28fb278","getTrustedIssuers()":"d9dd24c5","getTrustedIssuersForClaimTopic(uint256)":"52c111d1","hasClaimTopic(address,uint256)":"34a89987","isTrustedIssuer(address)":"ef2ed1a4","removeTrustedIssuer(address)":"b93d28eb","updateIssuerClaimTopics(address,uint256[])":"04bc7e84"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event\",\"_trustedIssuer\":\"The ClaimIssuer contract address of the trusted claim issuer.\"}},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\",\"params\":{\"_trustedIssuer\":\"the trusted issuer concerned.\"},\"returns\":{\"_0\":\"The set of claim topics that the trusted issuer is allowed to emit\"}},\"getTrustedIssuers()\":{\"details\":\"Function for getting all the trusted claim issuers stored.\",\"returns\":{\"_0\":\"array of all claim issuers registered.\"}},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"Function for getting all the trusted issuer allowed for a given claim topic.\",\"params\":{\"claimTopic\":\"the claim topic to get the trusted issuers for.\"},\"returns\":{\"_0\":\"array of all claim issuer addresses that are allowed for the given claim topic.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic\",\"params\":{\"_claimTopic\":\"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\",\"_issuer\":\"the address of the trusted issuer's ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted for this claim topic.\"}},\"isTrustedIssuer(address)\":{\"details\":\"Checks if the ClaimIssuer contract is trusted\",\"params\":{\"_issuer\":\"the address of the ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted, false otherwise.\"}},\"removeTrustedIssuer(address)\":{\"details\":\"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first\",\"params\":{\"_trustedIssuer\":\"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event\"}},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event\",\"_trustedIssuer\":\"the claim issuer to update.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}","userdoc":{"events":{"ClaimTopicsUpdated(address,uint256[])":{"notice":"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"TrustedIssuerAdded(address,uint256[])":{"notice":"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"},"TrustedIssuerRemoved(address)":{"notice":"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"}},"kind":"user","methods":{},"version":1}}},"contracts/token/IToken.sol":{"IToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_userAddress","type":"address"},{"indexed":true,"internalType":"bool","name":"_isFrozen","type":"bool"},{"indexed":true,"internalType":"address","name":"_owner","type":"address"}],"name":"AddressFrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_compliance","type":"address"}],"name":"ComplianceAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_identityRegistry","type":"address"}],"name":"IdentityRegistryAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_userAddress","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_lostWallet","type":"address"},{"indexed":true,"internalType":"address","name":"_newWallet","type":"address"},{"indexed":true,"internalType":"address","name":"_investorOnchainID","type":"address"}],"name":"RecoverySuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"TokensFrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"TokensUnfrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_userAddress","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"_newName","type":"string"},{"indexed":true,"internalType":"string","name":"_newSymbol","type":"string"},{"indexed":false,"internalType":"uint8","name":"_newDecimals","type":"uint8"},{"indexed":false,"internalType":"string","name":"_newVersion","type":"string"},{"indexed":true,"internalType":"address","name":"_newOnchainID","type":"address"}],"name":"UpdatedTokenInformation","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userAddresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"batchBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_fromList","type":"address[]"},{"internalType":"address[]","name":"_toList","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"batchForcedTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userAddresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"batchFreezePartialTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_toList","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"batchMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userAddresses","type":"address[]"},{"internalType":"bool[]","name":"_freeze","type":"bool[]"}],"name":"batchSetAddressFrozen","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_toList","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userAddresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"batchUnfreezePartialTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"compliance","outputs":[{"internalType":"contract IModularCompliance","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"forcedTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"freezePartialTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"getFrozenTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityRegistry","outputs":[{"internalType":"contract IIdentityRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"isFrozen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"onchainID","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lostWallet","type":"address"},{"internalType":"address","name":"_newWallet","type":"address"},{"internalType":"address","name":"_investorOnchainID","type":"address"}],"name":"recoveryAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"bool","name":"_freeze","type":"bool"}],"name":"setAddressFrozen","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_compliance","type":"address"}],"name":"setCompliance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_identityRegistry","type":"address"}],"name":"setIdentityRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_onchainID","type":"address"}],"name":"setOnchainID","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_symbol","type":"string"}],"name":"setSymbol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"unfreezePartialTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"interface","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"batchBurn(address[],uint256[])":{"details":"function allowing to burn tokens in batch  Require that the `_userAddresses` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_amounts":"The number of tokens to burn from the corresponding wallets  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `Transfer` events","_userAddresses":"The addresses of the wallets concerned by the burn"}},"batchForcedTransfer(address[],address[],uint256[])":{"details":"function allowing to issue forced transfers in batch  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_amounts":"The number of tokens to transfer to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`  emits _fromList.length `Transfer` events","_fromList":"The addresses of the senders","_toList":"The addresses of the receivers"}},"batchFreezePartialTokens(address[],uint256[])":{"details":"function allowing to freeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_amounts":"the amount of tokens to freeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensFrozen` events","_userAddresses":"The addresses on which tokens need to be frozen"}},"batchMint(address[],uint256[])":{"details":"function allowing to mint tokens in batch  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_amounts":"The number of tokens to mint to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits _toList.length `Transfer` events","_toList":"The addresses of the receivers"}},"batchSetAddressFrozen(address[],bool[])":{"details":"function allowing to set frozen addresses in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_freeze":"Frozen status of the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `AddressFrozen` events","_userAddresses":"The addresses for which to update frozen status"}},"batchTransfer(address[],uint256[])":{"details":"function allowing to issue transfers in batch  Require that the msg.sender and `to` addresses are not frozen.  Require that the total value should not exceed available balance.  Require that the `to` addresses are all verified addresses,  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_amounts":"The number of tokens to transfer to the corresponding receiver  emits _toList.length `Transfer` events","_toList":"The addresses of the receivers"}},"batchUnfreezePartialTokens(address[],uint256[])":{"details":"function allowing to unfreeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION","params":{"_amounts":"the amount of tokens to unfreeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensUnfrozen` events","_userAddresses":"The addresses on which tokens need to be unfrozen"}},"burn(address,uint256)":{"details":"burn tokens on a wallet  In case the `account` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `value` amount  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the burn, in such a case, the remaining balance on the `account`  is 100% composed of frozen tokens post-transaction.","params":{"_amount":"Amount of tokens to burn.  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`  emits a `Transfer` event","_userAddress":"Address to burn the tokens from."}},"compliance()":{"details":"Returns the Compliance contract linked to the token"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 1 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including balanceOf() and transfer()."},"forcedTransfer(address,address,uint256)":{"details":"force a transfer of tokens between 2 whitelisted wallets  In case the `from` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `amount`  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the transfer, in such a case, the remaining balance on the `from`  account is 100% composed of frozen tokens post-transfer.  Require that the `to` address is a verified address,","params":{"_amount":"The number of tokens to transfer","_from":"The address of the sender","_to":"The address of the receiver"},"returns":{"_0":"`true` if successful and revert if unsuccessful  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`  emits a `Transfer` event"}},"freezePartialTokens(address,uint256)":{"details":"freezes token amount specified for given address.","params":{"_amount":"Amount of Tokens to be frozen  This function can only be called by a wallet set as agent of the token  emits a `TokensFrozen` event","_userAddress":"The address for which to update frozen tokens"}},"getFrozenTokens(address)":{"details":"Returns the amount of tokens that are partially frozen on a wallet  the amount of frozen tokens is always <= to the total balance of the wallet","params":{"_userAddress":"the address of the wallet on which getFrozenTokens is called"}},"identityRegistry()":{"details":"Returns the Identity Registry linked to the token"},"isFrozen(address)":{"details":"Returns the freezing status of a wallet  if isFrozen returns `true` the wallet is frozen  if isFrozen returns `false` the wallet is not frozen  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by  a partial freeze or the whole token could be blocked by pause","params":{"_userAddress":"the address of the wallet on which isFrozen is called"}},"mint(address,uint256)":{"details":"mint tokens on a wallet  Improved version of default mint method. Tokens can be minted  to an address if only it is a verified address as per the security token.","params":{"_amount":"Amount of tokens to mint.  This function can only be called by a wallet set as agent of the token  emits a `Transfer` event","_to":"Address to mint the tokens to."}},"name()":{"details":"Returns the name of the token."},"onchainID()":{"details":"Returns the address of the onchainID of the token. the onchainID of the token gives all the information available about the token and is managed by the token issuer or his agent."},"pause()":{"details":"pauses the token contract, when contract is paused investors cannot transfer tokens anymore  This function can only be called by a wallet set as agent of the token  emits a `Paused` event"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"recoveryAddress(address,address,address)":{"details":"recovery function used to force transfer tokens from a  lost wallet to a new wallet for an investor.","params":{"_investorOnchainID":"the onchainID of the investor asking for a recovery  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful  emits a `Transfer` event if the recovery process is successful  emits a `RecoverySuccess` event if the recovery process is successful  emits a `RecoveryFails` event if the recovery process fails","_lostWallet":"the wallet that the investor lost","_newWallet":"the newly provided wallet on which tokens have to be transferred"}},"setAddressFrozen(address,bool)":{"details":"sets an address frozen status for this token.","params":{"_freeze":"Frozen status of the address  This function can only be called by a wallet set as agent of the token  emits an `AddressFrozen` event","_userAddress":"The address for which to update frozen status"}},"setCompliance(address)":{"details":"sets the compliance contract of the token","params":{"_compliance":"the address of the compliance contract to set  Only the owner of the token smart contract can call this function  calls bindToken on the compliance contract  emits a `ComplianceAdded` event"}},"setIdentityRegistry(address)":{"details":"sets the Identity Registry for the token","params":{"_identityRegistry":"the address of the Identity Registry to set  Only the owner of the token smart contract can call this function  emits an `IdentityRegistryAdded` event"}},"setName(string)":{"details":"sets the token name","params":{"_name":"the name of token to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event"}},"setOnchainID(address)":{"details":"sets the onchain ID of the token","params":{"_onchainID":"the address of the onchain ID to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event"}},"setSymbol(string)":{"details":"sets the token symbol","params":{"_symbol":"the token symbol to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event"}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"unfreezePartialTokens(address,uint256)":{"details":"unfreezes token amount specified for given address","params":{"_amount":"Amount of Tokens to be unfrozen  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event","_userAddress":"The address for which to update frozen tokens"}},"unpause()":{"details":"unpauses the token contract, when contract is unpaused investors can transfer tokens  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens  This function can only be called by a wallet set as agent of the token  emits an `Unpaused` event"},"version()":{"details":"Returns the TREX version of the token. current version is 3.0.0"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchBurn(address[],uint256[])":"4a6cc677","batchForcedTransfer(address[],address[],uint256[])":"42a47abc","batchFreezePartialTokens(address[],uint256[])":"fc7e5fa8","batchMint(address[],uint256[])":"68573107","batchSetAddressFrozen(address[],bool[])":"1a7af379","batchTransfer(address[],uint256[])":"88d695b2","batchUnfreezePartialTokens(address[],uint256[])":"4710362d","burn(address,uint256)":"9dc29fac","compliance()":"6290865d","decimals()":"313ce567","forcedTransfer(address,address,uint256)":"9fc1d0e7","freezePartialTokens(address,uint256)":"125c4a33","getFrozenTokens(address)":"158b1a57","identityRegistry()":"134e18f4","isFrozen(address)":"e5839836","mint(address,uint256)":"40c10f19","name()":"06fdde03","onchainID()":"aba63705","pause()":"8456cb59","paused()":"5c975abb","recoveryAddress(address,address,address)":"9285948a","setAddressFrozen(address,bool)":"c69c09cf","setCompliance(address)":"f8981789","setIdentityRegistry(address)":"cbf3f861","setName(string)":"c47f0027","setOnchainID(address)":"3d1ddc5b","setSymbol(string)":"b84c8246","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unfreezePartialTokens(address,uint256)":"1fe56f7d","unpause()":"3f4ba83a","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_isFrozen\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lostWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_investorOnchainID\",\"type\":\"address\"}],\"name\":\"RecoverySuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_newDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_newVersion\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOnchainID\",\"type\":\"address\"}],\"name\":\"UpdatedTokenInformation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_fromList\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchForcedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchFreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_freeze\",\"type\":\"bool[]\"}],\"name\":\"batchSetAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchUnfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"contract IModularCompliance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"forcedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"freezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lostWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_investorOnchainID\",\"type\":\"address\"}],\"name\":\"recoveryAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"setAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"setCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"setIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"setOnchainID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"batchBurn(address[],uint256[])\":{\"details\":\"function allowing to burn tokens in batch  Require that the `_userAddresses` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to burn from the corresponding wallets  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `Transfer` events\",\"_userAddresses\":\"The addresses of the wallets concerned by the burn\"}},\"batchForcedTransfer(address[],address[],uint256[])\":{\"details\":\"function allowing to issue forced transfers in batch  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to transfer to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`  emits _fromList.length `Transfer` events\",\"_fromList\":\"The addresses of the senders\",\"_toList\":\"The addresses of the receivers\"}},\"batchFreezePartialTokens(address[],uint256[])\":{\"details\":\"function allowing to freeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"the amount of tokens to freeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensFrozen` events\",\"_userAddresses\":\"The addresses on which tokens need to be frozen\"}},\"batchMint(address[],uint256[])\":{\"details\":\"function allowing to mint tokens in batch  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to mint to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits _toList.length `Transfer` events\",\"_toList\":\"The addresses of the receivers\"}},\"batchSetAddressFrozen(address[],bool[])\":{\"details\":\"function allowing to set frozen addresses in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_freeze\":\"Frozen status of the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `AddressFrozen` events\",\"_userAddresses\":\"The addresses for which to update frozen status\"}},\"batchTransfer(address[],uint256[])\":{\"details\":\"function allowing to issue transfers in batch  Require that the msg.sender and `to` addresses are not frozen.  Require that the total value should not exceed available balance.  Require that the `to` addresses are all verified addresses,  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to transfer to the corresponding receiver  emits _toList.length `Transfer` events\",\"_toList\":\"The addresses of the receivers\"}},\"batchUnfreezePartialTokens(address[],uint256[])\":{\"details\":\"function allowing to unfreeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"the amount of tokens to unfreeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensUnfrozen` events\",\"_userAddresses\":\"The addresses on which tokens need to be unfrozen\"}},\"burn(address,uint256)\":{\"details\":\"burn tokens on a wallet  In case the `account` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `value` amount  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the burn, in such a case, the remaining balance on the `account`  is 100% composed of frozen tokens post-transaction.\",\"params\":{\"_amount\":\"Amount of tokens to burn.  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`  emits a `Transfer` event\",\"_userAddress\":\"Address to burn the tokens from.\"}},\"compliance()\":{\"details\":\"Returns the Compliance contract linked to the token\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 1 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including balanceOf() and transfer().\"},\"forcedTransfer(address,address,uint256)\":{\"details\":\"force a transfer of tokens between 2 whitelisted wallets  In case the `from` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `amount`  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the transfer, in such a case, the remaining balance on the `from`  account is 100% composed of frozen tokens post-transfer.  Require that the `to` address is a verified address,\",\"params\":{\"_amount\":\"The number of tokens to transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"},\"returns\":{\"_0\":\"`true` if successful and revert if unsuccessful  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`  emits a `Transfer` event\"}},\"freezePartialTokens(address,uint256)\":{\"details\":\"freezes token amount specified for given address.\",\"params\":{\"_amount\":\"Amount of Tokens to be frozen  This function can only be called by a wallet set as agent of the token  emits a `TokensFrozen` event\",\"_userAddress\":\"The address for which to update frozen tokens\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the amount of tokens that are partially frozen on a wallet  the amount of frozen tokens is always <= to the total balance of the wallet\",\"params\":{\"_userAddress\":\"the address of the wallet on which getFrozenTokens is called\"}},\"identityRegistry()\":{\"details\":\"Returns the Identity Registry linked to the token\"},\"isFrozen(address)\":{\"details\":\"Returns the freezing status of a wallet  if isFrozen returns `true` the wallet is frozen  if isFrozen returns `false` the wallet is not frozen  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by  a partial freeze or the whole token could be blocked by pause\",\"params\":{\"_userAddress\":\"the address of the wallet on which isFrozen is called\"}},\"mint(address,uint256)\":{\"details\":\"mint tokens on a wallet  Improved version of default mint method. Tokens can be minted  to an address if only it is a verified address as per the security token.\",\"params\":{\"_amount\":\"Amount of tokens to mint.  This function can only be called by a wallet set as agent of the token  emits a `Transfer` event\",\"_to\":\"Address to mint the tokens to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onchainID()\":{\"details\":\"Returns the address of the onchainID of the token. the onchainID of the token gives all the information available about the token and is managed by the token issuer or his agent.\"},\"pause()\":{\"details\":\"pauses the token contract, when contract is paused investors cannot transfer tokens anymore  This function can only be called by a wallet set as agent of the token  emits a `Paused` event\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"recoveryAddress(address,address,address)\":{\"details\":\"recovery function used to force transfer tokens from a  lost wallet to a new wallet for an investor.\",\"params\":{\"_investorOnchainID\":\"the onchainID of the investor asking for a recovery  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful  emits a `Transfer` event if the recovery process is successful  emits a `RecoverySuccess` event if the recovery process is successful  emits a `RecoveryFails` event if the recovery process fails\",\"_lostWallet\":\"the wallet that the investor lost\",\"_newWallet\":\"the newly provided wallet on which tokens have to be transferred\"}},\"setAddressFrozen(address,bool)\":{\"details\":\"sets an address frozen status for this token.\",\"params\":{\"_freeze\":\"Frozen status of the address  This function can only be called by a wallet set as agent of the token  emits an `AddressFrozen` event\",\"_userAddress\":\"The address for which to update frozen status\"}},\"setCompliance(address)\":{\"details\":\"sets the compliance contract of the token\",\"params\":{\"_compliance\":\"the address of the compliance contract to set  Only the owner of the token smart contract can call this function  calls bindToken on the compliance contract  emits a `ComplianceAdded` event\"}},\"setIdentityRegistry(address)\":{\"details\":\"sets the Identity Registry for the token\",\"params\":{\"_identityRegistry\":\"the address of the Identity Registry to set  Only the owner of the token smart contract can call this function  emits an `IdentityRegistryAdded` event\"}},\"setName(string)\":{\"details\":\"sets the token name\",\"params\":{\"_name\":\"the name of token to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event\"}},\"setOnchainID(address)\":{\"details\":\"sets the onchain ID of the token\",\"params\":{\"_onchainID\":\"the address of the onchain ID to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event\"}},\"setSymbol(string)\":{\"details\":\"sets the token symbol\",\"params\":{\"_symbol\":\"the token symbol to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unfreezePartialTokens(address,uint256)\":{\"details\":\"unfreezes token amount specified for given address\",\"params\":{\"_amount\":\"Amount of Tokens to be unfrozen  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event\",\"_userAddress\":\"The address for which to update frozen tokens\"}},\"unpause()\":{\"details\":\"unpauses the token contract, when contract is unpaused investors can transfer tokens  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens  This function can only be called by a wallet set as agent of the token  emits an `Unpaused` event\"},\"version()\":{\"details\":\"Returns the TREX version of the token. current version is 3.0.0\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddressFrozen(address,bool,address)\":{\"notice\":\"this event is emitted when the wallet of an investor is frozen or unfrozen  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_isFrozen` is the freezing status of the wallet  if `_isFrozen` equals `true` the wallet is frozen after emission of the event  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event  `_owner` is the address of the agent who called the function to freeze the wallet\"},\"ComplianceAdded(address)\":{\"notice\":\"this event is emitted when the Compliance has been set for the token  the event is emitted by the token constructor and by the setCompliance function  `_compliance` is the address of the Compliance contract of the token\"},\"IdentityRegistryAdded(address)\":{\"notice\":\"this event is emitted when the IdentityRegistry has been set for the token  the event is emitted by the token constructor and by the setIdentityRegistry function  `_identityRegistry` is the address of the Identity Registry of the token\"},\"Paused(address)\":{\"notice\":\"this event is emitted when the token is paused  the event is emitted by the pause function  `_userAddress` is the address of the wallet that called the pause function\"},\"RecoverySuccess(address,address,address)\":{\"notice\":\"this event is emitted when an investor successfully recovers his tokens  the event is emitted by the recoveryAddress function  `_lostWallet` is the address of the wallet that the investor lost access to  `_newWallet` is the address of the wallet that the investor provided for the recovery  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery\"},\"TokensFrozen(address,uint256)\":{\"notice\":\"this event is emitted when a certain amount of tokens is frozen on a wallet  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are frozen\"},\"TokensUnfrozen(address,uint256)\":{\"notice\":\"this event is emitted when a certain amount of tokens is unfrozen on a wallet  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are unfrozen\"},\"Unpaused(address)\":{\"notice\":\"this event is emitted when the token is unpaused  the event is emitted by the unpause function  `_userAddress` is the address of the wallet that called the unpause function\"},\"UpdatedTokenInformation(string,string,uint8,string,address)\":{\"notice\":\"this event is emitted when the token information is updated.  the event is emitted by the token init function and by the setTokenInformation function  `_newName` is the name of the token  `_newSymbol` is the symbol of the token  `_newDecimals` is the decimals of the token  `_newVersion` is the version of the token, current version is 3.0  `_newOnchainID` is the address of the onchainID of the token\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/IToken.sol\":\"IToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xf632b47a306502ce66a0e432c7c3a7d3290ab8325a854bdefe2268d61fb7cc7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://988eb31577cdd253e9ff2743983c466f81fdb6b944b24d3c55b0263ae45f3d3d\",\"dweb:/ipfs/QmZFixdMi55m78eEfrLN3yiNL4VR3AWSgKcjaRBBq4FskX\"]},\"contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"contracts/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"contracts/token/IToken.sol\":{\"keccak256\":\"0xf5c167244bcf46aa12fa678c6821c9534cd7b251c254dafd4fefb7586d3310ef\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://386e323cddab4b50c2d904ce549f4cdf096881d65ca3d28a5ec79db313c3357c\",\"dweb:/ipfs/QmQ1VqhgoGpfKFXGhgvSqKsQFLnbbJd9FWogSouoFDs45q\"]}},\"version\":1}","userdoc":{"events":{"AddressFrozen(address,bool,address)":{"notice":"this event is emitted when the wallet of an investor is frozen or unfrozen  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_isFrozen` is the freezing status of the wallet  if `_isFrozen` equals `true` the wallet is frozen after emission of the event  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event  `_owner` is the address of the agent who called the function to freeze the wallet"},"ComplianceAdded(address)":{"notice":"this event is emitted when the Compliance has been set for the token  the event is emitted by the token constructor and by the setCompliance function  `_compliance` is the address of the Compliance contract of the token"},"IdentityRegistryAdded(address)":{"notice":"this event is emitted when the IdentityRegistry has been set for the token  the event is emitted by the token constructor and by the setIdentityRegistry function  `_identityRegistry` is the address of the Identity Registry of the token"},"Paused(address)":{"notice":"this event is emitted when the token is paused  the event is emitted by the pause function  `_userAddress` is the address of the wallet that called the pause function"},"RecoverySuccess(address,address,address)":{"notice":"this event is emitted when an investor successfully recovers his tokens  the event is emitted by the recoveryAddress function  `_lostWallet` is the address of the wallet that the investor lost access to  `_newWallet` is the address of the wallet that the investor provided for the recovery  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery"},"TokensFrozen(address,uint256)":{"notice":"this event is emitted when a certain amount of tokens is frozen on a wallet  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are frozen"},"TokensUnfrozen(address,uint256)":{"notice":"this event is emitted when a certain amount of tokens is unfrozen on a wallet  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are unfrozen"},"Unpaused(address)":{"notice":"this event is emitted when the token is unpaused  the event is emitted by the unpause function  `_userAddress` is the address of the wallet that called the unpause function"},"UpdatedTokenInformation(string,string,uint8,string,address)":{"notice":"this event is emitted when the token information is updated.  the event is emitted by the token init function and by the setTokenInformation function  `_newName` is the name of the token  `_newSymbol` is the symbol of the token  `_newDecimals` is the decimals of the token  `_newVersion` is the version of the token, current version is 3.0  `_newOnchainID` is the address of the onchainID of the token"}},"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f90afe6578d079bf183d14233e04d993ee0b7bf197d6a55e87dbc0c3f934d6cb64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EXP INVALID PUSH6 0x78D079BF183D EQ 0x23 RETURNDATACOPY DIV 0xD9 SWAP4 0xEE SIGNEXTEND PUSH28 0xF197D6A55E87DBC0C3F934D6CB64736F6C6343000811003300000000 ","sourceMap":"194:9180:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f90afe6578d079bf183d14233e04d993ee0b7bf197d6a55e87dbc0c3f934d6cb64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EXP INVALID PUSH6 0x78D079BF183D EQ 0x23 RETURNDATACOPY DIV 0xD9 SWAP4 0xEE SIGNEXTEND PUSH28 0xF197D6A55E87DBC0C3F934D6CB64736F6C6343000811003300000000 ","sourceMap":"194:9180:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"kind":"user","methods":{},"version":1}}}}}}